{"version":3,"sources":["types/buttonTypes.ts","types/routes.ts","custom-styles-for-antd/styleVariables.ts","components/MainMenu.tsx","components/Header/Header.tsx","components/OrderManager/OrderManager.tsx","components/CustomCascader.tsx","components/CustomDatePicker.tsx","types/clientsTypes.ts","hooks/useTypedSelector.ts","store/actionCreators/clientActions.ts","types/orderCreationTypes.ts","store/actionCreators/orderCreationActions.ts","types/orderViewTypes.ts","store/actionCreators/veiwOrderActions.ts","store/actionCreators/rootActions.ts","hooks/useActions.ts","components/Footer/Footer.tsx","components/buttons/AddButton.tsx","components/CustomInput.tsx","components/RawMaterialItem/RawMaterialItem.tsx","components/contentNodes/OrderCreationCN.tsx","components/ClientView.tsx","components/CustomTableItem.tsx","components/HeaderRowOfTable.tsx","components/Table.tsx","components/contentNodes/OrderViewCN.tsx","components/contentNodes/AdminCN.tsx","components/contentNodes/Options.tsx","components/contentNodes/Graph.tsx","App.tsx","reportWebVitals.ts","store/reducers/clientReducer.ts","store/reducers/orderCreationReducer.ts","store/reducers/orderViewReducer.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["customButtonsStyleType","routesEnum","customStyleButton","border","margin","blackText","color","gray","backgroundColor","grey","limeColor","lime","whiteColor","redColor","menuStyle","position","top","left","zIndex","paddingLeft","paddingBottom","MainMenu","collapsed","onClick","location","useLocation","className","style","mode","selectable","pathname","ORDER_MANAGER","Item","to","ADMIN","OPTIONS","GRAPH","type","block","shape","Header","buttonName","Layout","useState","setCollapsed","toggleCollapsed","OrderManager","orderManager","createOrder","viewOrder","options","value","label","children","disabled","onChange","selectedOptions","console","log","filter","inputValue","path","some","option","toLowerCase","indexOf","CustomCascader","defaultValue","placeholder","showSearch","matchInputWidth","changeOnSelect","displayRender","join","notFoundContent","suffixIcon","ArrowDownOutlined","date","dateString","ClientActionTypes","CustomDatePicker","props","locale","width","useTypedSelector","useSelector","orderCreationTypes","fetchClientAction","dispatch","a","FETCH_CLIENTS","payload","error","SET_ERROR","OrderViewActionTypes","setOnRight","SET_IS_RIGHT","setOnLeft","SET_IS_LEFT","setIsButtomDisabled","SET_BUTTON_DISABLED","setIsButtomUndisabled","SET_BUTTON_UNDISABLED","renderCreateBtn","RENDER_CREATE_BUTTON","addRawMaterial","ADD_RAW_MATERIAL","setRawMaterial","name","amount","removeRawMaterial","index","REMOVE_RAW_MATERIAL","setOnRightOrderViev","SET_ON_RIGHT","setOnLeftOrderViev","SET_ON_LEFT","setDisabledNextBtn","SET_DISABLED_NEXT","setUnaisabledNextBtn","SET_UNABLED_NEXT","ClientActionCreaors","OrderCreationActionCreaors","ViewOrderActionCreaors","useActions","useDispatch","bindActionCreators","ActionCreators","Footer","AddButton","icon","PlusOutlined","CustomInput","direction","addonAfter","min","RawMaterialItem","rawMaterialList","state","orderCreation","isVisible","setIsVisible","styleDeleteButton","visibility","length","onMouseEnter","onMouseLeave","MinusCircleOutlined","minWidth","OrderCreationCN","isOnRight","isContentOnRight","isNextBtnDisabled","useEffect","gutter","justify","align","span","map","rawMaterial","cancel","undefined","next","ClientView","sum","toString","addRub","columns","title","dataIndex","key","fixed","formateOrders","orders","order","price","CustomTableItem","showHeader","dataSource","bordered","pagination","scroll","x","tableLayout","Panel","Collapse","HeaderRowOfTable","accordion","expandIconPosition","header","dateNow","Date","toISOString","slice","gettingPropsFromStore","Table","client","OrderViewCN","isDisabled","listOrder","back","show","AdminCN","admin","Options","Graph","graph","mainStyle","overflowX","App","ORDER_CREATION","ORDER_VIEW","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isFetching","clients","renderCreateButton","rootReducer","combineReducers","action","SET_CLIENTS","SET_RAW_MATERIAL","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.311ff594.chunk.js","sourcesContent":["import { ButtonShape, ButtonType } from \"antd/lib/button\";\r\n\r\nexport enum customButtonsStyleType {\r\n  createOrder = \"Создать заказ\",\r\n  viewOrder = \"Просмотр заказа\",\r\n  orderManager = \"Заказменеджер\",\r\n  orderCreation = \"Создание заказа\",\r\n  listOrder = \"Список заказов\",\r\n  cancel = \"Отмена\",\r\n  next = \"Далее\",\r\n  back = \"Назад\",\r\n  refresh = \"refresh\",\r\n  print = \"print\",\r\n  show = \"Показать\",\r\n  create = \"Создать\",\r\n  admin=\"Админка\",\r\n  options=\"Настройки\",\r\n  graph=\"Графики\"\r\n\r\n}\r\nexport interface IButtonStyleType {\r\n  styleType:customButtonsStyleType\r\n}\r\nexport interface ICustomStyleButton {\r\n  type: ButtonType,\r\n  block: boolean,\r\n  icon?: React.ReactNode\r\n  shape: ButtonShape,\r\n  style: {\r\n    border: string,\r\n    backgroundColor?: string,\r\n    width?: string\r\n    color?: 'black' | 'white'\r\n    margin?: '0 5px'\r\n  },\r\n}","export enum routesEnum {\r\n  ORDER_CREATION=\"/order-creation\",\r\n  ORDER_VIEW=\"/order-view\",\r\n  ADMIN=\"/admin\",\r\n  OPTIONS=\"/options\",\r\n  ORDER_MANAGER=\"/\",\r\n  GRAPH='/GRAPH',\r\n}","import { lime, grey } from '@ant-design/colors';\r\nimport { CSSProperties } from 'react';\r\nimport { ICustomStyleButton } from '../types/buttonTypes';\r\nexport const styleVariables:CSSProperties = {\r\n  paddingTop: 64\r\n};\r\n\r\nexport const navLinkStyle:CSSProperties={\r\n  width: '50%'\r\n};\r\n\r\nexport const customStyleButton: ICustomStyleButton = {\r\n  type: 'primary',\r\n  block: true,\r\n  shape: 'round',\r\n  style: {\r\n    border: 'none',\r\n    margin: '0 5px',\r\n    \r\n\r\n  },\r\n};\r\nexport const blackText:CSSProperties ={\r\n  color: 'black'\r\n} ;\r\n// ------colors-------\r\nexport const gray:CSSProperties ={\r\n  backgroundColor: grey[0]\r\n} ;\r\nexport const limeColor:CSSProperties ={\r\n  backgroundColor: lime[7]\r\n} ;\r\nexport const whiteColor:CSSProperties ={\r\n  backgroundColor: 'white'\r\n} ;\r\nexport const redColor:CSSProperties ={\r\n  backgroundColor: 'red'\r\n} ;","import { Menu } from \"antd\";\r\nimport React, { CSSProperties, FunctionComponent } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routesEnum } from \"../types/routes\";\r\ninterface MainMenuProps {\r\n  collapsed: boolean\r\n  onClick: () => void\r\n}\r\nconst menuStyle: CSSProperties = {\r\n  position: 'fixed',\r\n  top: 64,\r\n  left: 0,\r\n  zIndex: 1001,\r\n  paddingLeft: 5,\r\n  paddingBottom: 10\r\n};\r\nconst MainMenu: FunctionComponent<MainMenuProps> = ({ collapsed, onClick }: MainMenuProps) => {\r\n  let location = useLocation();\r\n  return (\r\n    <div className=\"menu-wrapper\">\r\n      {collapsed && <div className=\"main-menu\">\r\n        <div className=\"main-menu__background\" onClick={() => onClick()}>\r\n        </div>\r\n\r\n        <Menu style={menuStyle} mode='inline' selectable={true}>\r\n          {location.pathname !== routesEnum.ORDER_MANAGER\r\n            ? <Menu.Item key=\"1\">\r\n              <NavLink to={routesEnum.ORDER_MANAGER}>\r\n                Заказменеджер\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.ADMIN\r\n            ? <Menu.Item key=\"2\">\r\n              <NavLink to={routesEnum.ADMIN}>\r\n                Админка\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.OPTIONS\r\n            ? <Menu.Item key=\"3\">\r\n              <NavLink to={routesEnum.OPTIONS}>\r\n                Настройки\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.GRAPH\r\n            ? <Menu.Item key=\"4\">\r\n              <NavLink to={routesEnum.GRAPH}>\r\n                Графики\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n        </Menu>\r\n      </div>}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default MainMenu;","import { Button, Layout } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useState } from \"react\";\r\nimport { customStyleButton, limeColor } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport MainMenu from \"../MainMenu\";\r\n\r\ninterface HeaderProps {\r\n  buttonName: customButtonsStyleType\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\nconst Header: FunctionComponent<HeaderProps> = ({buttonName}) => {\r\n  const { Header } = Layout;\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return ( \r\n    <div>\r\n      <MainMenu collapsed={collapsed} onClick={toggleCollapsed} />\r\n      <Header  className=\"header\">\r\n        <Button type={type} block={block} shape={shape} style={{...limeColor,...style}} onClick={toggleCollapsed}>{buttonName}</Button>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import { Button, Layout } from \"antd\";\r\nimport { CSSProperties, FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport Header from \"../Header/Header\";\r\nimport { grey, lime } from '@ant-design/colors';\r\nimport { customStyleButton, gray } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface OrderManagerProps {\r\n\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\n\r\nconst OrderManager: FunctionComponent<OrderManagerProps> = () => {\r\n  return (\r\n    <Layout className='order-manager'>\r\n      <Header buttonName={customButtonsStyleType.orderManager}/>\r\n      <div style={gray} className='order-manager__container'>\r\n        <NavLink to=\"/order-creation\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.createOrder}\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink to=\"/order-view\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.viewOrder}\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderManager;","import { Cascader } from \"antd\";\r\nimport { CascaderOptionType, CascaderValueType } from \"antd/lib/cascader\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { ArrowDownOutlined } from '@ant-design/icons';\r\n\r\ninterface CustomCascaderProps {\r\n  defaultValue: string\r\n}\r\nconst options: CascaderOptionType[] = [\r\n  {\r\n    value: 'OOO',\r\n    label: 'OOO',\r\n    children: [\r\n      {\r\n        value: 'Заглушка',\r\n        label: 'Hangzhouadsadsasdasdasdasdasdasdasd',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n          {\r\n            value: 'xiasha',\r\n            label: 'Xia Sha',\r\n            disabled: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'ИП',\r\n    label: 'ИП',\r\n    children: [\r\n      {\r\n        value: '---',\r\n        label: '----',\r\n        children: [\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction onChange(value: CascaderValueType, selectedOptions: CascaderOptionType[] | undefined) {\r\n  console.log(value, selectedOptions);\r\n}\r\n\r\nfunction filter(inputValue: string, path: CascaderOptionType[] | any): boolean {\r\n  return path.some((option: any) => option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1);\r\n}\r\n\r\nconst CustomCascader: FunctionComponent<CustomCascaderProps> = ({ defaultValue }: CustomCascaderProps) => {\r\n  return (\r\n    <Cascader\r\n      options={options}\r\n      onChange={onChange}\r\n      placeholder=\"Please select...\"\r\n      showSearch={{ filter, matchInputWidth: true }}\r\n      changeOnSelect={true}\r\n      defaultValue={[defaultValue]}\r\n      displayRender={label => label.join(' ')}\r\n      notFoundContent={'Таков нетъ'}\r\n      suffixIcon= {<ArrowDownOutlined />}\r\n\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomCascader;","import React, { FunctionComponent } from \"react\";\r\nimport { DatePicker, Space } from \"antd\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\n\r\ninterface CustomDatePickerProps {\r\n  props: any\r\n}\r\n\r\nfunction onChange(date: moment.Moment | null, dateString: string) {\r\n  console.log(date);\r\n  console.log( dateString);\r\n}\r\n\r\nconst CustomDatePicker: FunctionComponent<CustomDatePickerProps> = ({props}:CustomDatePickerProps) => {\r\n\r\n  return (\r\n    // <Space direction=\"vertical\">\r\n      <DatePicker onChange={onChange} locale={locale} style={props.width}/>\r\n    // {/* </Space> */}\r\n  );\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","export interface IClientState {\r\n  isFetching : boolean;\r\n  error: null | string \r\n  clients: []\r\n};\r\n\r\nexport enum ClientActionTypes {\r\n  FETCH_CLIENTS = \"FETCH_CLIENTS\",\r\n  SET_ERROR = \"SET_ERROR\",\r\n  SET_CLIENTS = \"SET_CLIENTS\"\r\n}\r\n\r\ninterface IFetchClientAction {\r\n  type: ClientActionTypes.FETCH_CLIENTS,\r\n  payload: boolean\r\n}\r\ninterface ISetClientAction {\r\n  type: ClientActionTypes.SET_CLIENTS,\r\n  payload: []\r\n}\r\ninterface ISetErrorAction {\r\n  type: ClientActionTypes.SET_ERROR,\r\n  payload: string | null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type ClientAction = \r\n  IFetchClientAction\r\n  | ISetClientAction\r\n  | ISetErrorAction","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers/rootReducer\";\r\n\r\nexport const useTypedSelector : TypedUseSelectorHook<RootState> = useSelector;","import { Dispatch } from 'redux';\r\nimport { ClientActionTypes , ClientAction} from './../../types/clientsTypes';\r\n\r\n\r\n\r\n// export const fetchClientAction = (dispatch: Dispatch <ClientAction>, isFetching:boolean) =>{\r\n//   return  dispatch({type:ClientActionTypes.FETCH_CLIENTS, payload:isFetching});\r\n// };\r\n\r\nexport const fetchClientAction = () =>{\r\n    return async (dispatch:Dispatch<ClientAction>)=>{\r\n      try {\r\n        dispatch({type:ClientActionTypes.FETCH_CLIENTS, payload:true});\r\n      } catch (error) {\r\n        dispatch({type:ClientActionTypes.SET_ERROR,payload:''});\r\n\r\n      }\r\n    };\r\n  };","interface rawMaterial {\r\n  name:string,\r\n  amount:number\r\n}\r\nexport interface IOrderCreationState {\r\n  isContentOnRight: boolean,\r\n  isNextBtnDisabled: boolean,\r\n  renderCreateButton:boolean,\r\n  rawMaterialList: Array<rawMaterial> \r\n}\r\n\r\nexport enum orderCreationTypes {\r\n  SET_IS_RIGHT=\"SET_IS_RIGHT\",\r\n  SET_IS_LEFT=\"SET_IS_LEFT\",\r\n  SET_BUTTON_DISABLED=\"SET_BUTTON_DISABLED\",\r\n  SET_BUTTON_UNDISABLED=\"SET_BUTTON_UNDISABLED\",\r\n  RENDER_CREATE_BUTTON=\"RENDER_CREATE_BUTTON\",\r\n  ADD_RAW_MATERIAL=\"ADD_RAW_MATERIAL\",\r\n  SET_RAW_MATERIAL=\"SET_RAW_MATERIAL\",\r\n  REMOVE_RAW_MATERIAL=\"REMOVE_RAW_MATERIAL\",\r\n\r\n}\r\n\r\ninterface IBtnDisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_DISABLED,\r\n}\r\ninterface IBtnUndisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_UNDISABLED,\r\n}\r\ninterface IIsRightAction {\r\n  type: orderCreationTypes.SET_IS_RIGHT,\r\n}\r\ninterface IIsLeftAction {\r\n  type: orderCreationTypes.SET_IS_LEFT,\r\n}\r\ninterface IRenderCreateBtnAction {\r\n  type: orderCreationTypes.RENDER_CREATE_BUTTON,\r\n}\r\ninterface IAddRawMaterialAction {\r\n  type: orderCreationTypes.ADD_RAW_MATERIAL,\r\n}\r\ninterface ISetRawMaterialAction {\r\n  type: orderCreationTypes.SET_RAW_MATERIAL,\r\n  payload: rawMaterial\r\n}\r\ninterface IRemoveRawMaterialAction {\r\n  type: orderCreationTypes.REMOVE_RAW_MATERIAL,\r\n  payload: {index:number}\r\n}\r\n\r\nexport type OrderCreationAction = \r\n  IBtnDisabledAction \r\n  | IIsRightAction \r\n  | IIsLeftAction \r\n  | IRenderCreateBtnAction\r\n  | IBtnUndisabledAction\r\n  | IAddRawMaterialAction\r\n  | IRemoveRawMaterialAction\r\n  | ISetRawMaterialAction","import { Dispatch } from 'redux';\r\nimport { OrderCreationAction, orderCreationTypes } from '../../types/orderCreationTypes';\r\n\r\n\r\n\r\n\r\nexport const setOnRight = () =>{\r\n  return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n      dispatch({type:orderCreationTypes.SET_IS_RIGHT});\r\n  };\r\n};\r\nexport const setOnLeft = () =>{\r\n  return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n      dispatch({type:orderCreationTypes.SET_IS_LEFT});\r\n  };\r\n};\r\n  export const setIsButtomDisabled = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.SET_BUTTON_DISABLED});\r\n    };\r\n  };\r\n  export const setIsButtomUndisabled = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.SET_BUTTON_UNDISABLED});\r\n    };\r\n  };\r\n  export const renderCreateBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.RENDER_CREATE_BUTTON});\r\n    };\r\n  };\r\n  export const addRawMaterial = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.ADD_RAW_MATERIAL\r\n        });\r\n    };\r\n  };\r\n  export const setRawMaterial = (name:string, amount:number) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.ADD_RAW_MATERIAL,\r\n          payload:{\r\n            name,\r\n            amount\r\n          }\r\n        });\r\n    };\r\n  };\r\n  export const removeRawMaterial = (index:number) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.REMOVE_RAW_MATERIAL,\r\n          payload:{index}\r\n        });\r\n    };\r\n  };","export interface IOrderViewState {\r\n    isOnRight:boolean,\r\n    isDisabled:boolean,\r\n}\r\n\r\nexport enum OrderViewActionTypes {\r\n    SET_ON_RIGHT=\"SET_ON_RIGHT\",\r\n    SET_ON_LEFT=\"SET_ON_LEFT\",\r\n    SET_DISABLED_NEXT=\"SET_DISABLED_NEXT\",\r\n    SET_UNABLED_NEXT=\"SET_UNABLED_NEXT\",\r\n}\r\n\r\ninterface ISetOnRightAction {\r\n    type:OrderViewActionTypes.SET_ON_RIGHT\r\n}\r\ninterface ISetOnLeftAction {\r\n    type:OrderViewActionTypes.SET_ON_LEFT\r\n}\r\ninterface ISetDisabledNextAction {\r\n    type:OrderViewActionTypes.SET_DISABLED_NEXT\r\n}\r\ninterface ISetUnableNextAction {\r\n    type:OrderViewActionTypes.SET_UNABLED_NEXT\r\n}\r\n\r\nexport type OrderViewActions = \r\n    | ISetOnRightAction\r\n    | ISetOnLeftAction\r\n    | ISetDisabledNextAction\r\n    | ISetUnableNextAction\r\n","import { Dispatch } from \"redux\";\r\nimport { OrderViewActionTypes, OrderViewActions } from \"../../types/orderViewTypes\";\r\n\r\nexport const setOnRightOrderViev = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_ON_RIGHT});\r\n    };\r\n  };\r\n  export const setOnLeftOrderViev = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_ON_LEFT});\r\n    };\r\n  };\r\n  export const setDisabledNextBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_DISABLED_NEXT});\r\n    };\r\n  };\r\n  export const setUnaisabledNextBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_UNABLED_NEXT});\r\n    };\r\n  };","import * as ClientActionCreaors from './clientActions';\r\nimport * as OrderCreationActionCreaors from './orderCreationActions';\r\nimport * as ViewOrderActionCreaors from './veiwOrderActions';\r\n\r\n\r\nexport default {\r\n  ...ClientActionCreaors,\r\n  ...OrderCreationActionCreaors,\r\n  ...ViewOrderActionCreaors,\r\n};","import {useDispatch} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport ActionCreators from '../store/actionCreators/rootActions';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(ActionCreators, dispatch);\r\n};","import { FunctionComponent, ReactNode } from \"react\";\r\n\r\ninterface FooterProps {\r\n  children?:ReactNode\r\n}\r\n\r\nconst Footer: FunctionComponent<FooterProps> = ({children}:FooterProps) => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      {children}\r\n    </footer> \r\n  );\r\n};\r\n\r\nexport default Footer;","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\n\r\ninterface AddButtonProps {\r\n\r\n}\r\n\r\nconst {type} = customStyleButton;\r\n\r\nconst AddButton: FunctionComponent<AddButtonProps> = () => {\r\n  const {addRawMaterial} = useActions();\r\n  const handleClick=()=>{\r\n    addRawMaterial()\r\n  }\r\n  return (\r\n    <Button  \r\n      type={type}  \r\n      shape={'circle'} \r\n      className=\"add-button\" \r\n      icon={<PlusOutlined/>} \r\n      onClick={handleClick}\r\n    >\r\n        \r\n    </Button>\r\n  )\r\n};\r\n\r\nexport default AddButton;","import { Space, Input } from 'antd';\r\nimport { FunctionComponent } from 'react';\r\n\r\ninterface CustomInputProps {\r\n\r\n}\r\n\r\n\r\n\r\nconst CustomInput: FunctionComponent<CustomInputProps> = () => {\r\n  return (\r\n    <Space direction=\"vertical\">\r\n      <Input className=\"custom-input\" addonAfter=\"кг\" defaultValue=\"mysite\" type=\"number\" min=\"0\" />\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default CustomInput;","import { MinusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useState } from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomInput from \"../CustomInput\";\r\nimport { redColor, customStyleButton } from '../../custom-styles-for-antd/styleVariables'\r\n\r\ninterface RawMaterialItemProps {\r\n  index: number\r\n}\r\n\r\n\r\nconst RawMaterialItem: FunctionComponent<RawMaterialItemProps> = ({ index }: RawMaterialItemProps) => {\r\n  \r\n  const { removeRawMaterial } = useActions()\r\n\r\n  const rawMaterialList = useTypedSelector(state => state.orderCreation.rawMaterialList)\r\n\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  const styleDeleteButton: CSSProperties = {\r\n    ...customStyleButton.style,\r\n    ...redColor,\r\n    visibility: isVisible && rawMaterialList.length > 1\r\n      ? 'visible'\r\n      : 'hidden'\r\n  }\r\n\r\n  const handleClick = () => {\r\n    removeRawMaterial(index)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"raw-material-item\"\r\n      onMouseEnter={() => setIsVisible(true)}\r\n      onMouseLeave={() => setIsVisible(false)}\r\n    >\r\n      <CustomCascader defaultValue={''} />\r\n      <CustomInput />\r\n      <Button\r\n        shape={\"circle\"}\r\n        style={styleDeleteButton}\r\n        icon={<MinusCircleOutlined />}\r\n        className=\"raw-material-item__delete-btn\"\r\n        onClick={handleClick}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RawMaterialItem;","import { CSSProperties, FunctionComponent, useEffect } from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomDatePicker from \"../CustomDatePicker\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { customStyleButton, gray, whiteColor, blackText } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AddButton from \"../buttons/AddButton\";\r\nimport RawMaterialItem from \"../RawMaterialItem/RawMaterialItem\";\r\n\r\ninterface OrderCreationCNProps {\r\n\r\n}\r\n\r\n\r\nconst width: CSSProperties = {\r\n  minWidth: 196\r\n};\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\n\r\nconst OrderCreationCN: FunctionComponent<OrderCreationCNProps> = () => {\r\n  const {isContentOnRight:isOnRight,isNextBtnDisabled} = useTypedSelector(state => state.orderCreation);\r\n\r\n  const { setOnRight, setOnLeft } = useActions();\r\n  const rawMaterialList = useTypedSelector(state => state.orderCreation.rawMaterialList);\r\n\r\n  useEffect(function () {\r\n    return () => { setOnLeft();};\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.orderCreation} />\r\n      <div style={gray} className={isOnRight ? \"transform-translate order-creation\" : 'order-creation'}>\r\n        <section className=\"order-creation__section\">\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n            <Col span={24} className=\"order-creation__item\"><CustomCascader defaultValue={\"\"} /></Col>\r\n            <Col span={24} className=\"order-creation__item\"><CustomCascader defaultValue={\"\"} /></Col>\r\n            <Col span={24} className=\"order-creation__item\"><CustomDatePicker props={{ width: width }} /></Col>\r\n          </Row>\r\n        </section>\r\n        <section className=\"order-creation__section order-creation__section_j-c-center\">\r\n          {rawMaterialList.map((rawMaterial, index: number) => {\r\n            return <RawMaterialItem  key={index} index={index} />;\r\n                })}\r\n          <AddButton />\r\n        </section>\r\n\r\n      </div>\r\n      <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={'/'} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...blackText, ...whiteColor, ...style }}\r\n            >\r\n              {customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={style}\r\n              disabled={!isNextBtnDisabled}\r\n              onClick={isOnRight ? undefined : setOnRight}\r\n            >\r\n              {customButtonsStyleType.next}\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderCreationCN;","import { FunctionComponent } from \"react\";\r\nimport { Row, Col } from 'antd';\r\n\r\ninterface ClientViewProps {\r\n  name: string,\r\n  sum: number\r\n}\r\n\r\nconst ClientView: FunctionComponent<ClientViewProps> = ({name, sum}) => {\r\n  return ( \r\n<Row gutter={16} >\r\n      <Col className=\"gutter-row\" span={24-8} >\r\n        <div >{name}</div>\r\n      </Col>\r\n      <Col className=\"gutter-row\" span={8} >\r\n        <div >{sum.toString() + ' руб'}</div>\r\n      </Col>\r\n  </Row>\r\n  );\r\n};\r\n\r\nexport default ClientView;","import { FunctionComponent, useState } from \"react\";\r\nimport { Table, Form,  Switch} from 'antd';\r\nimport { IOrder } from \"../types/dataColumn\";\r\nimport { ColumnsType } from 'antd/es/table';\r\n\r\ninterface CustomTableItemProps {\r\n  showHeader:boolean\r\n  orders: IOrder[]\r\n}\r\n\r\nconst addKG = (amount:number):string =>{\r\n  return amount.toString() + ' кг';\r\n};\r\nconst addRub = (amount:number):string =>{\r\n  return amount.toString() + ' руб.';\r\n};\r\n\r\ninterface INewOrder  {\r\n  date:string | DateConstructor,\r\n  rawMaterial:string,\r\n  amount:string ,\r\n  price:string \r\n}\r\nconst columns:ColumnsType<INewOrder> = [\r\n  {\r\n    title: 'Дата',\r\n    dataIndex: 'date',\r\n    key: 'date',\r\n    width: 110,\r\n    fixed: 'left',\r\n\r\n  },\r\n  {\r\n    title: 'Сырье',\r\n    dataIndex: 'rawMaterial',\r\n    key: 'rawMaterial',\r\n  },\r\n  {\r\n    title: 'Кол-во',\r\n    dataIndex: 'amount',\r\n    key: 'amount',\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    dataIndex: 'price',\r\n    key: 'price',\r\n    width: 100,\r\n\r\n  },\r\n];\r\n\r\nconst formateOrders = (orders:IOrder[]):INewOrder[]=>{\r\n  return orders.map((order)=>({...order,\r\n      amount: addKG(order.amount),\r\n      price: addRub(500.0)\r\n  }));\r\n};\r\n\r\nconst CustomTableItem: FunctionComponent<CustomTableItemProps> = ({showHeader, orders}:CustomTableItemProps) => {\r\n  \r\n\r\n  return ( \r\n    <section style={{backgroundColor:\"white\"}}>\r\n\r\n      <Table\r\n        dataSource={formateOrders(orders)} \r\n        columns={columns} \r\n        bordered={true} \r\n        showHeader={showHeader} \r\n        pagination={false}\r\n        scroll={{x:400}}\r\n        tableLayout='fixed'\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomTableItem;","import { CSSProperties, FunctionComponent } from \"react\";\r\nimport { Collapse } from 'antd';\r\nimport ClientView from \"./ClientView\";\r\nimport { IOrder } from \"../types/dataColumn\";\r\nimport CustomTableItem from \"./CustomTableItem\";\r\nimport '../custom-styles-for-antd/styles.css';\r\ninterface HeaderRowOfTableProps {\r\n  name:string,\r\n  sum: number,\r\n  orders: IOrder[]\r\n}\r\nconst { Panel } = Collapse;\r\nconst width:CSSProperties ={\r\n  width:'100vw'\r\n};\r\n\r\nconst HeaderRowOfTable: FunctionComponent<HeaderRowOfTableProps> = ({name, sum, orders}:HeaderRowOfTableProps) => {\r\n  return (\r\n    <Collapse accordion expandIconPosition='right' style={width}>\r\n      \r\n      <Panel header={<ClientView name={name} sum={sum} />} key=\"1\" >\r\n        <CustomTableItem  showHeader={false} orders={orders} />\r\n      </Panel>\r\n    </Collapse>\r\n  );\r\n}; \r\n\r\nexport default HeaderRowOfTable;","import { FunctionComponent } from \"react\";\r\nimport { IDatacolumn } from \"../types/dataColumn\";\r\nimport HeaderRowOfTable from \"./HeaderRowOfTable\";\r\n\r\ninterface TableProps {\r\n\r\n}\r\n\r\n\r\nconst dateNow = new Date().toISOString().slice(0, 10);\r\nconst gettingPropsFromStore: IDatacolumn[] = [\r\n  {\r\n    name: 'one',\r\n    sum: 1000,\r\n    orders: [\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'govno',\r\n        amount: 1134,\r\n        price: 500.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'govno',\r\n        amount: 113,\r\n        price: 500.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'govno',\r\n        amount: 113,\r\n        price: 500.0\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    name: 'two',\r\n    sum: 1000,\r\n    orders: [\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '345',\r\n        amount: 113,\r\n        price: 6000.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '34555345345345',\r\n        amount: 113,\r\n        price: 50000.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '3345345',\r\n        amount: 113,\r\n        price: 50000.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '555555',\r\n        amount: 113,\r\n        price: 500.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'fffgovdfgdfgdfgdfnof',\r\n        amount: 1135,\r\n        price: 500500.0\r\n      },\r\n    ]\r\n  },\r\n];\r\nconst Table: FunctionComponent<TableProps> = () => {\r\n\r\n\r\n  return (\r\n  <div >\r\n    {gettingPropsFromStore.map(client => <HeaderRowOfTable name={client.name} sum={client.sum} orders={client.orders}  key={client.name} />)}\r\n  </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Table;","import { Button, Col, Row } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { blackText, customStyleButton, gray, whiteColor } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomDatePicker from \"../CustomDatePicker\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\nimport Table from \"../Table\";\r\n\r\ninterface OrderViewCNProps {\r\n\r\n}\r\n\r\nconst width: CSSProperties = {\r\n  minWidth: 196\r\n};\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\nconst OrderViewCN: FunctionComponent<OrderViewCNProps> = () => {\r\n  const { setOnLeftOrderViev, setOnRightOrderViev } = useActions();\r\n  const { isDisabled, isOnRight } = useTypedSelector(state => state.viewOrder)\r\n  useEffect(function () {\r\n    return () => { setOnLeftOrderViev() }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.listOrder} />\r\n      <div style={gray} className={isOnRight ? \"transform-translate order-creation\" : 'order-creation'}>\r\n        <section className=\"order-creation__section\">\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomCascader defaultValue={\"\"} />\r\n            </Col>\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomDatePicker props={{ width: width }} />\r\n            </Col>\r\n          </Row>\r\n          {/* сделать период по дате */}\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\" className=\"order-view__general-list-row\">\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <Button  shape={shape} style={{...style,...width}} type={type}>\r\n                Общий список\r\n            </Button>\r\n            </Col>\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomDatePicker props={{ width: width }} />\r\n            </Col>\r\n          </Row>\r\n\r\n        </section>\r\n        <section className=\"order-creation__section order-creation__section_j-c-center\">\r\n          <Table />\r\n        </section>\r\n\r\n      </div>\r\n      <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={isOnRight ? '/order-view' : '/'} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...blackText, ...whiteColor, ...style }}\r\n              onClick={isOnRight ? setOnLeftOrderViev : undefined}\r\n\r\n            >\r\n              {isOnRight ? customButtonsStyleType.back : customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={style}\r\n              disabled={isDisabled}\r\n              onClick={isOnRight ? undefined : setOnRightOrderViev}\r\n            >\r\n              {customButtonsStyleType.show}\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderViewCN;","import { FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface AdminCNProps {\r\n  \r\n}\r\n\r\nconst AdminCN: FunctionComponent<AdminCNProps> = () => {\r\n  return ( \r\n<>\r\n<Header buttonName={customButtonsStyleType.admin} />\r\n<div className=\"admin\">Tут будет добавление/удаление/редактирование клиента, прайса, и сырья в БД</div>\r\n</>\r\n  );\r\n};\r\n\r\nexport default AdminCN;","import { FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface OptionsProps {\r\n  \r\n}\r\n\r\nconst Options: FunctionComponent<OptionsProps> = () => {\r\n  return ( \r\n<>\r\n<Header buttonName={customButtonsStyleType.options} />\r\n<div className=\"admin\">Tут будет изменение шрифтов, цветов и фона</div>\r\n</>\r\n  );\r\n};\r\n\r\nexport default Options;","import { FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface GraphProps {\r\n  \r\n}\r\n\r\nconst Graph: FunctionComponent<GraphProps> = () => {\r\n  return ( \r\n  <>\r\n    <Header buttonName={customButtonsStyleType.graph} />\r\n    <div className=\"admin\">\r\n      Tут будет графики или диаграммы по БД\r\n    </div>\r\n    </> \r\n    );\r\n};\r\n\r\nexport default Graph;","import React, { CSSProperties } from 'react';\nimport './custom-styles-for-antd/styles.css';\n\nimport { grey } from '@ant-design/colors';\nimport { Route, Switch } from 'react-router';\nimport { Footer } from 'antd/lib/layout/layout';\nimport OrderManager from './components/OrderManager/OrderManager';\nimport OrderCreationCN from './components/contentNodes/OrderCreationCN';\nimport OrderViewCN from './components/contentNodes/OrderViewCN';\nimport AdminCN from './components/contentNodes/AdminCN';\nimport Options from './components/contentNodes/Options';\nimport { routesEnum } from './types/routes';\nimport Graph from './components/contentNodes/Graph';\n\nconst mainStyle: CSSProperties = {\n  backgroundColor: grey[0],\n  color: 'black',\n  width: '100vw',\n  overflowX:'hidden',\n  \n  \n\n};\nconst divStyle: CSSProperties = {\n  backgroundColor: grey[0],\n  display: 'flex',\n  flexDirection: 'column',\n  minHeight: '190px',\n  padding: 10,\n  justifyContent: 'space-around'\n};\nfunction App() {\n  return (\n    <main style={mainStyle}>\n      <Switch>\n\n        <Route path={routesEnum.ORDER_CREATION}>\n          <OrderCreationCN />\n        </Route>\n\n        <Route path={routesEnum.ORDER_VIEW}>\n          <OrderViewCN />\n        </Route>\n\n        <Route path={routesEnum.ADMIN}>\n          <AdminCN />\n        </Route>\n\n        <Route path={routesEnum.OPTIONS}>\n          <Options />\n        </Route>\n\n        <Route path={routesEnum.GRAPH}>\n          <Graph />\n        </Route>\n\n        <Route path={routesEnum.ORDER_MANAGER}>\n          <OrderManager />\n        </Route>\n        \n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ClientAction, ClientActionTypes } from \"./../../types/clientsTypes\";\r\nimport { IClientState } from \"../../types/clientsTypes\";\r\n\r\nconst initialState: IClientState = {\r\n  isFetching: false,\r\n  clients: [],\r\n  error: null,\r\n};\r\n\r\nexport const clientReducer = (\r\n  state = initialState,\r\n  action: ClientAction\r\n): IClientState => {\r\n  switch (action.type) {\r\n    case ClientActionTypes.FETCH_CLIENTS:\r\n      return { ...state, isFetching: action.payload };\r\n    case ClientActionTypes.SET_CLIENTS:\r\n      return { ...state, clients: action.payload };\r\n\r\n    case ClientActionTypes.SET_ERROR:\r\n      return { ...state, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IOrderCreationState,\r\n  OrderCreationAction,\r\n  orderCreationTypes,\r\n} from \"../../types/orderCreationTypes\";\r\n\r\nconst initialState: IOrderCreationState = {\r\n  isContentOnRight: false,\r\n  isNextBtnDisabled: true,\r\n  renderCreateButton: false,\r\n  rawMaterialList: [{amount:0, name:''}]\r\n};\r\n\r\nexport const orderCreationReducer = (\r\n  state = initialState,\r\n  action: OrderCreationAction\r\n): IOrderCreationState => {\r\n  switch (action.type) {\r\n    case orderCreationTypes.SET_BUTTON_DISABLED:\r\n      return { ...state, isNextBtnDisabled: true };\r\n    case orderCreationTypes.SET_BUTTON_UNDISABLED:\r\n      return { ...state, isNextBtnDisabled: false };\r\n    case orderCreationTypes.SET_IS_RIGHT:\r\n      return { ...state, isContentOnRight: true };\r\n    case orderCreationTypes.SET_IS_LEFT:\r\n      return { ...state, isContentOnRight: false };\r\n    case orderCreationTypes.RENDER_CREATE_BUTTON:\r\n      return { ...state, isContentOnRight: !state.renderCreateButton };\r\n    case orderCreationTypes.SET_RAW_MATERIAL:\r\n      return {\r\n        ...state, rawMaterialList:\r\n           [...state.rawMaterialList, action.payload]\r\n      };\r\n    case orderCreationTypes.ADD_RAW_MATERIAL:\r\n      return {\r\n        ...state, rawMaterialList:\r\n           [...state.rawMaterialList, {name:'',amount:0}]\r\n      };\r\n    case orderCreationTypes.REMOVE_RAW_MATERIAL:\r\n      return {\r\n        ...state, rawMaterialList:\r\n          state.rawMaterialList.filter((rawMaterial: any, index: number) => {\r\n              return index !== action.payload.index\r\n          })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IOrderViewState, OrderViewActions, OrderViewActionTypes } from \"../../types/orderViewTypes\";\r\n\r\nconst initialState: IOrderViewState = {\r\n    isDisabled: false,\r\n    isOnRight: false\r\n}\r\n\r\nexport const viewOrderReducer = (state = initialState, action: OrderViewActions): IOrderViewState => {\r\n    switch (action.type) {\r\n        case OrderViewActionTypes.SET_ON_RIGHT:\r\n            return {\r\n                ...state, isOnRight: true\r\n            }\r\n        case OrderViewActionTypes.SET_ON_LEFT:\r\n            return {\r\n                ...state, isOnRight: false\r\n            }\r\n        case OrderViewActionTypes.SET_DISABLED_NEXT:\r\n            return {\r\n                ...state, isDisabled: true\r\n            }\r\n        case OrderViewActionTypes.SET_UNABLED_NEXT:\r\n            return {\r\n                ...state, isDisabled: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { clientReducer } from \"./clientReducer\";\r\nimport { orderCreationReducer } from \"./orderCreationReducer\";\r\nimport { viewOrderReducer } from \"./orderViewReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  client: clientReducer,\r\n  orderCreation: orderCreationReducer,\r\n  viewOrder: viewOrderReducer\r\n\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport 'antd/dist/antd.css';\nimport {\n  BrowserRouter as Router, HashRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter >\n    <Provider store={store}>\n    <App />\n  </Provider>\n  </HashRouter>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}