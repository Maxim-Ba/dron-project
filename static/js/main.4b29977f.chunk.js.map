{"version":3,"sources":["types/buttonTypes.ts","custom-styles-for-antd/styleVariables.ts","hooks/useTypedSelector.ts","utils/generateCSSColor.ts","types/routes.ts","types/orderCreationTypes.ts","components/MainMenu.tsx","components/Header/Header.tsx","components/OrderManager/OrderManager.tsx","store/actionCreators/orderCreationActions.ts","types/orderViewTypes.ts","store/actionCreators/veiwOrderActions.ts","types/optionsTypes.ts","store/actionCreators/optionActions.ts","types/userTypes.ts","store/actionCreators/userAction.ts","types/editClientsTypes.ts","store/actionCreators/editClientsActions.ts","types/priceTypes.ts","store/actionCreators/priceActions.ts","types/editRawMaterialsTypes.ts","store/actionCreators/editRawMaterialsActions.ts","types/ModalWindowTypes/ModalWindowTypes.ts","store/actionCreators/modalWindowActions/modalWindowActions.ts","types/customCascaderTypes.ts","store/actionCreators/rootActions.ts","hooks/useActions.ts","components/CustomCascader.tsx","components/CustomDatePicker.tsx","components/Footer/Footer.tsx","components/buttons/AddButton.tsx","components/CustomInput.tsx","components/RawMaterialItem/RawMaterialItem.tsx","backendAPI/clientsAPI.ts","utils/generateOptionCascader.ts","types/dataPickerTypes.ts","backendAPI/priceAPI.ts","backendAPI/rawMaterialAPI.ts","backendAPI/OrderAPI.ts","components/contentNodes/OrderCreationCN.tsx","components/CustomRangePicker.tsx","components/ClientView.tsx","components/CustomTableItem.tsx","components/OrderViewPanel.tsx","components/HeaderRowOfTable.tsx","components/Table.tsx","components/contentNodes/OrderViewCN.tsx","components/contentNodes/AdminCN.tsx","components/ColorSliders.tsx","components/contentNodes/Options.tsx","components/contentNodes/Graph.tsx","components/AdminsEditing/RawMaterialEditing/FormAddMaterial.tsx","components/AdminsEditing/RawMaterialEditing/FormChangeMaterial.tsx","components/AdminsEditing/RawMaterialEditing/FormDeleteMaterial.tsx","components/AdminsEditing/ModalWindow/ModalWindow.tsx","components/AdminsEditing/WrapperButtons.tsx","components/AdminsEditing/RawMaterialEditing/MaterialsTable.tsx","components/AdminsEditing/RawMaterialEditing/EditRawMaterials.tsx","components/AdminsEditing/PriceEditing/FormAddPrice.tsx","components/AdminsEditing/PriceEditing/FormDeletePrice.tsx","components/AdminsEditing/PriceEditing/FormChangePrice.tsx","utils/checkAllvaluesIsNotNull.ts","components/AdminsEditing/PriceEditing/PriceTable.tsx","components/AdminsEditing/PriceEditing/EditPrice.tsx","components/AdminsEditing/ClientEditing/ClientsTable.tsx","components/AdminsEditing/ClientEditing/FormAddClient.tsx","components/AdminsEditing/ClientEditing/FormChangeClient.tsx","components/AdminsEditing/ClientEditing/FormDeleteClient.tsx","components/AdminsEditing/ClientEditing/EditClients.tsx","utils/check401Err.ts","backendAPI/usersAPI.ts","components/contentNodes/RegistrationCN.tsx","components/contentNodes/LoginCN.tsx","App.tsx","reportWebVitals.ts","store/reducers/editClientsReducer.ts","store/reducers/editRawMaterialsReducer.ts","store/reducers/ModalWindowReducer/SetConfirmLoading.ts","store/reducers/optionsReducer.ts","store/reducers/orderCreationReducer.ts","store/reducers/orderViewReducer.ts","store/reducers/priceReducer.ts","store/reducers/userReducer.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["customButtonsStyleType","customStyleButton","type","block","shape","style","border","margin","undefined","blackText","color","whiteColor","grey","lime","backgroundColor","redColor","useTypedSelector","useSelector","generateCSSColor","red","green","blue","routesEnum","orderCreationTypes","menuStyle","position","top","left","zIndex","paddingLeft","paddingBottom","MainMenu","collapsed","onClick","location","useLocation","className","mode","selectable","pathname","ORDER_MANAGER","Item","to","ADMIN","OPTIONS","GRAPH","Header","buttonName","Layout","useState","setCollapsed","state","options","backBackgroundBigBtn","backBackgroundHeader","btnColorBig","toggleCollapsed","OrderManager","generalBackground","generalColor","id","user","LOGIN","orderManager","createOrder","viewOrder","OrderViewActionTypes","setOnRight","dispatch","a","SET_IS_RIGHT","setOnLeft","SET_IS_LEFT","setIsButtomDisabled","SET_BUTTON_DISABLED","setIsButtomUndisabled","SET_BUTTON_UNDISABLED","renderCreateBtn","RENDER_CREATE_BUTTON","addRawMaterial","ADD_RAW_MATERIAL","setRawMaterialNameOC","name","index","SET_RAW_MATERIAL_NAME","payload","setRawMaterialAmountOC","amount","SET_RAW_MATERIAL_AMOUNT","removeRawMaterial","REMOVE_RAW_MATERIAL","removeRawMaterialName","REMOVE_RAW_MATERIAL_NAME","removePriceOrderCreation","REMOVE_PRICE","setPriceOrderCreation","SET_PRICE","removeClientOrderCreation","REMOVE_CLIENT","setClientOrderCreation","SET_CLIENT","clearDateOrderCreation","CLEAR_DATE","setDateOrderCreation","date","SET_DATE","toggleFetchOrderCreation","flag","TOGGLE_FETCH","clearRawMaterialsListOrderCreation","CLEAR_RAW_MATERIALS","OptionsActionTypes","setOnRightOrderViev","SET_ON_RIGHT","setOnLeftOrderViev","SET_ON_LEFT","setDisabledNextBtn","SET_DISABLED_NEXT","setUnaisabledNextBtn","SET_UNABLED_NEXT","selectClientVO","client","SELECT_CLIENT","selectDateStatrVO","SELECT_DATE_START","selectDateEndVO","SELECT_DATE_END","setTableDataVO","ordersData","SET_TABLE_DATA","toggleFetchVO","userActionTypes","setGeneralBackGround","SET_GENERAL_BACKGROUND","setNextBackGround","SET_NEXT_BACKGROUND","setBackBackGround","SET_BACK_BACKGROUND","setHeaderBackGround","SET_HEADER_BACKGROUND","setFooterBackGround","SET_FOOTER_BACKGROUND","setBigBtnBackGround","SET_BIG_BUTTON_BACKGROUND","installColorBack","COLOR_BACK","installColorNext","COLOR_NEXT","installColorBigBtn","COLOR_BIG_BUTTON","installColorGeneral","COLOR_GENERAL","setLightTheme","SET_LIGHT_THEME","setDarkTheme","SET_DARK_THEME","setDefault","SET_DEFAULT","setAllStyleFromLocStor","optionsData","SET_ALL","clientActionsTypes","setIsFetching","IS_FETCHING","setUser","email","role","SET_USER","logout","LOGOUT","priceActionsTypes","getClients","clients","GET","setClientNames","SET_NAME_CLIENT","setClientINN","inn","SET_INN_CLIENT","setClientPhone","phone","SET_PHONE_CLIENT","selectClient","setClientNamesForChange","SET_NAME_CLIENT_FOR_CHANGE","setClientINNForChange","SET_INN_CLIENT_FOR_CHANGE","setClientPhoneForChange","SET_PHONE_CLIENT_FOR_CHANGE","readyForDeleteClient","READY_FOR_DELETE","toggleFetchingClient","editRawMaterialsActionsTypes","getPriceNames","priceNames","GET_PRICE_NAMES","selectPriceNames","idName","SELECT_PRICE_NAME","setNameForCreation","SET_NAME_FOR_CREATE","readyForDeletePrice","READY_FOR_DELETE_PRICE","setPriceList","priceList","SET_PRICE_LIST","fetchPriceList","FETCH_PRICE_LIST","arrayForChangePrice","array","ARRAY_FOR_CHANGE","readyForChangePrice","READY_FOR_CHANGE","TypesofMW","ModalWindowTypeActions","deleteRawMaterial","fetchResult","DELETE","createRawMaterial","units","CREATE","changeRawMaterial","CHANGE","getRawMaterials","materials","readyForDeleteMaterial","selectMaterial","SELECT_MATERIAL","setMaterialName","SET_MATERIALS_NAME_CREATE","setMaterialUnit","unit","SET_MATERIALS_UNIT_CREATE","getUnits","SET_UNITS","setChanges","newMaterial","SET_FOR_CHANGES","fetchRawMaterials","FETCH","CascaderTypes","setVisibleMW","SET_VISIBLE","setConfirmLoadingMW","CONFIRM_LOADING","setType","SET_TYPE","OrderCreationActionCreaors","ViewOrderActionCreaors","OptionActionCreaors","UserActionCreaors","ClientActionCreaors","PriceActionCreaors","RawMaterialsActionCreaors","ModalWindowActionCreaors","useActions","useDispatch","bindActionCreators","ActionCreators","filter","inputValue","path","some","option","label","toLowerCase","indexOf","CustomCascader","defaultValue","typeCascader","onChange","value","selectedOptions","SET_CLIENT_ORDER_CREATION","SET_PRICE_ORDER_CREATION","SET_MATERIAL","SET_ORDER_VIEW","placeholder","showSearch","matchInputWidth","changeOnSelect","displayRender","join","notFoundContent","suffixIcon","ArrowDownOutlined","CustomDatePicker","props","useEffect","dateString","console","log","locale","width","Footer","children","backBackgroundFooter","AddButton","isFetch","orderCreation","icon","PlusOutlined","hidden","CustomInput","direction","e","amountToNumber","Number","parseInt","target","handleChange","addonAfter","min","RawMaterialItem","rawMaterialList","currentRawMaterial","isVisible","setIsVisible","styleDeleteButton","visibility","length","onMouseEnter","onMouseLeave","MinusCircleOutlined","ClientsAPI","baseURL","this","fetch","method","headers","localStorage","getItem","response","status","json","data","body","JSON","stringify","useGenerateOptionCascaderClient","clientList","map","item","datapickerTypes","PriceAPI","priceName","itemPrice","id_price","coast","rawMaterialId","raw_material_id","result","nameId","id_price_name","price_name","RawMaterialAPI","nameMaterial","rawMaterials","material","unit_name","valuesForChange","id_unit_name","OrderAPI","clientId","dateStart","dateEnd","moment","toISOString","slice","Authorization","price","orderData","tableData","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","remove","alert","minWidth","OrderCreationCN","history","useHistory","isOnRight","isContentOnRight","isNextBtnDisabled","backBackgroundBack","backBackgroundNext","btnColorBack","btnColorNext","handleGetClients","clientsAPI","goBack","handleGetPriceNames","priceAPI","handleGetRawMaterials","rawMaterialAPI","createOrderHandle","normalazeData","createOrderAdapter","orderResponse","message","Promise","all","finally","rawMaterialsNames","rawMaterialsList","spinning","tip","gutter","justify","align","span","ORDER_CREATION","rawMaterial","cancel","opacity","disabled","next","CustomRangePicker","selectedDateStart","selectedDateEnd","endOpen","setEndOpen","disabledDate","startValue","valueOf","maxWidth","dates","dateStrings","onOpenChange","open","endValue","ClientView","sum","toString","addKG","unitsId","unitName","columns","title","dataIndex","key","fixed","formateList","materialList","CustomTableItem","showHeader","dataSource","bordered","pagination","scroll","x","tableLayout","onRow","record","rowIndex","onDoubleClick","event","OrderViewPanel","Panel","Collapse","HeaderRowOfTable","orders","accordion","expandIconPosition","header","order","orderId","Table","OrderViewCN","isDisabled","selectedClient","showOrdersData","getOrdersByClient","handleGetAllClients","getOrders","getExelFile","listOrder","ORDER_VIEW","back","print","show","AdminCN","admin","ADMIN_CLIENTS","ADMIN_PRICE","ADMIN_RAW_MATERIALS","ColorSliders","callback","max","n","handleStyle","touchAction","trackStyle","Options","darkTheme","defaultT","default","lightTheme","orientation","Group","isSelected","buttonStyle","Button","setItem","save","Graph","graph","FormAddMaterial","creationFields","Form","useForm","form","setFieldsValue","Option","rules","required","handleChangeName","handleChangeUnit","FormChangeMaterial","materialSelected","initFormValue","find","getFieldValue","FormDeleteMaterial","visible","modalWindow","delete","validator","_","resolve","reject","Error","ModlWindow","confirmLoading","formFields","readyForDelete","fieldForCreationPrice","redyForDeletePrice","selectedPrice","readyForChange","arrayForChange","selectedClientsFields","nameForChange","phoneForChange","innForChange","fetchData","CLIENT_CREATE","CLIENT_DELETE","CLIENT_CHANGE","RAW_MATERIALS_CREATE","RAW_MATERIALS_DELETE","RAW_MATERIALS_CHANGE","PRICE_CREATE","PRICE_DELETE","PRICE_CHANGE","createClient","detail","deleteClients","editClient","createRawMaterials","deleteRawMaterials","changeRawMaterials","createPrice","newPriceNames","deletePriceName","priceNmaes","changePrice","cancelText","onOk","onCancel","okButtonProps","setOkButtonProps","WrapperButtons","buttons","ghost","expandIcon","isActive","UpSquareOutlined","fontSize","MenuOutlined","defaultSortOrder","sorter","b","MaterialsTable","dataTable","dataTableAdapter","filters","rowSelection","selectedRowKeys","onHeaderRow","Buttons","refreshDisabled","setRefreshDisabled","adapterToButtonDisabled","handleGetMaterials","loading","EditRawMaterials","typeMV","getRawMaterialsAndUnits","swichPropsMW","FormAddPrice","FormDeletePrice","FormChangePrice","fieldList","materialItem","getPriceByPriceName","selectedPriceName","getPrice","forEach","field","priceItem","layout","labelCol","wrapperCol","size","onFieldsChange","allFields","every","parseFloat","addonBefore","PriceTable","EditPrice","isFetchPriceList","ClientTable","isSelect","FormAddClient","handleChangeINN","handleChangePhone","FormChangeClient","FormDeleteClient","EditClients","isFetching","check401Err","statusText","UserAPI","eMail","password","token","removeItem","error","RegistrationCN","onFinish","values","usersAPI","registration","login","onFinishFailed","errorInfo","Password","htmlType","LoginCN","REGISTRATION","mainStyle","overflowX","App","handleAuth","auth","parse","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","renderCreateButton","rootReducer","combineReducers","action","returnedArray","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4b29977f.chunk.js","sourcesContent":["import { ButtonShape, ButtonType } from \"antd/lib/button\";\r\n\r\nexport enum customButtonsStyleType {\r\n  createOrder = \"Создать заказ\",\r\n  viewOrder = \"Просмотр заказа\",\r\n  orderManager = \"Заказменеджер\",\r\n  orderCreation = \"Создание заказа\",\r\n  listOrder = \"Список заказов\",\r\n  cancel = \"Отмена\",\r\n  next = \"Далее\",\r\n  back = \"Назад\",\r\n  refresh = \"refresh\",\r\n  print = \"print\",\r\n  show = \"Показать\",\r\n  create = \"Создать\",\r\n  admin=\"Админка\",\r\n  options=\"Настройки\",\r\n  graph=\"Графики\",\r\n  clients=\"Редактировать БД клиентов\",\r\n  rawMaterials=\"Редактировать БД сырья\",\r\n  price=\"Редактировать БД прайса\",\r\n  save=\"Сохранить\",\r\n  login=\"Вход\",\r\n  registration=\"Регистрация\"\r\n\r\n  \r\n\r\n}\r\nexport interface IButtonStyleType {\r\n  styleType:customButtonsStyleType\r\n}\r\nexport interface ICustomStyleButton {\r\n  type: ButtonType,\r\n  block: boolean,\r\n  icon?: React.ReactNode\r\n  shape: ButtonShape,\r\n  style: {\r\n    border: string,\r\n    backgroundColor?: string,\r\n    width?: string\r\n    color?: 'black' | 'white'\r\n    margin?: '0 5px'\r\n  },\r\n}","import { lime, grey } from '@ant-design/colors';\r\nimport { CSSProperties } from 'react';\r\nimport { ICustomStyleButton } from '../types/buttonTypes';\r\nexport const styleVariables:CSSProperties = {\r\n  paddingTop: 64\r\n};\r\n\r\nexport const navLinkStyle:CSSProperties={\r\n  width: '50%'\r\n};\r\n\r\nexport const customStyleButton: ICustomStyleButton = {\r\n  type: 'primary',\r\n  block: true,\r\n  shape: 'round',\r\n  style: {\r\n    border: 'none',\r\n    margin: undefined,\r\n  },\r\n};\r\nexport const blackText:CSSProperties ={\r\n  color: 'black'\r\n} ;\r\n// ------colors-------\r\nexport const gray:CSSProperties ={\r\n  backgroundColor: grey[0]\r\n} ;\r\nexport const limeColor:CSSProperties ={\r\n  backgroundColor: lime[7]\r\n} ;\r\nexport const whiteColor:CSSProperties ={\r\n  backgroundColor: 'white'\r\n} ;\r\nexport const redColor:CSSProperties ={\r\n  backgroundColor: 'red'\r\n} ;","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers/rootReducer\";\r\n\r\nexport const useTypedSelector : TypedUseSelectorHook<RootState> = useSelector;","import { rgb } from '../types/optionsTypes';\r\n\r\n\r\nexport function generateCSSColor({red,green,blue}:rgb) {\r\n  return `rgb(${red} ${green} ${blue})`;\r\n}","export enum routesEnum {\r\n  ORDER_CREATION=\"/order-creation\",\r\n  ORDER_VIEW=\"/order-view\",\r\n  ADMIN=\"/admin\",\r\n  ADMIN_CLIENTS=\"/admin/clients\",\r\n  ADMIN_PRICE=\"/admin/price\",\r\n  ADMIN_RAW_MATERIALS=\"/admin/raw-materials\",\r\n  OPTIONS=\"/options\",\r\n  ORDER_MANAGER=\"/\",\r\n  GRAPH='/GRAPH',\r\n  LOGIN='/LOGIN',\r\n  REGISTRATION='/REGISTRATION',\r\n}","export interface rawMaterial {\r\n  name: string,\r\n  amount: number,\r\n  id:number\r\n}\r\ninterface Client {\r\n  id:number,\r\n  name:string\r\n}\r\n\r\ninterface Price{\r\n  id:number\r\n  name:string\r\n}\r\n\r\nexport interface ICreateOrderAPI {\r\n  client: Client\r\n  price: Price\r\n  date: Date | null | string\r\n  rawMaterialList:Array<rawMaterial>\r\n}\r\n\r\nexport interface IOrderCreationState {\r\n  isContentOnRight?: boolean,\r\n  isNextBtnDisabled?: boolean,\r\n  renderCreateButton?: boolean,\r\n  rawMaterialList: Array<rawMaterial> ,\r\n  client: Client | null,\r\n  price: Price | null,\r\n  date: Date | null | string,\r\n  isFetch: boolean\r\n}\r\n\r\nexport enum orderCreationTypes {\r\n  SET_IS_RIGHT=\"SET_IS_RIGHT\",\r\n  SET_IS_LEFT=\"SET_IS_LEFT\",\r\n  SET_BUTTON_DISABLED=\"SET_BUTTON_DISABLED\",\r\n  SET_BUTTON_UNDISABLED=\"SET_BUTTON_UNDISABLED\",\r\n  RENDER_CREATE_BUTTON=\"RENDER_CREATE_BUTTON\",\r\n  ADD_RAW_MATERIAL=\"ADD_RAW_MATERIAL\",\r\n  SET_RAW_MATERIAL_NAME=\"SET_RAW_MATERIAL_NAME\",\r\n  SET_RAW_MATERIAL_AMOUNT=\"SET_RAW_MATERIAL_AMOUNT\",\r\n  REMOVE_RAW_MATERIAL=\"REMOVE_RAW_MATERIAL\",\r\n  TOGGLE_FETCH=\"TOGGLE_FETCH\",\r\n\r\n  REMOVE_RAW_MATERIAL_NAME=\"REMOVE_RAW_MATERIAL_NAME\",\r\n  CLEAR_RAW_MATERIALS=\"CLEAR_RAW_MATERIALS\",\r\n  SET_CLIENT=\"SET_CLIENT\",\r\n  REMOVE_CLIENT=\"REMOVE_CLIENT\",\r\n  SET_PRICE=\"SET_PRICE\",\r\n  REMOVE_PRICE=\"REMOVE_PRICE\",\r\n  SET_DATE=\"SET_DATE\",\r\n  CLEAR_DATE=\"CLEAR_DATE\"\r\n}\r\ninterface IClearRawMaterialsdAction {\r\n  type: orderCreationTypes.CLEAR_RAW_MATERIALS,\r\n}\r\ninterface IBtnDisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_DISABLED,\r\n}\r\ninterface IToggleFetchAction {\r\n  type: orderCreationTypes.TOGGLE_FETCH,\r\n  payload:boolean\r\n}\r\ninterface IBtnUndisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_UNDISABLED,\r\n}\r\ninterface IIsRightAction {\r\n  type: orderCreationTypes.SET_IS_RIGHT,\r\n}\r\ninterface IIsLeftAction {\r\n  type: orderCreationTypes.SET_IS_LEFT,\r\n}\r\ninterface IRenderCreateBtnAction {\r\n  type: orderCreationTypes.RENDER_CREATE_BUTTON,\r\n}\r\ninterface IAddRawMaterialAction {\r\n  type: orderCreationTypes.ADD_RAW_MATERIAL,\r\n}\r\ninterface ISetRawMaterialNameAction {\r\n  type: orderCreationTypes.SET_RAW_MATERIAL_NAME,\r\n  payload: {name:string, index:number, id:number}\r\n}\r\n\r\ninterface IRemoveRawMaterialNameAction {\r\n  type: orderCreationTypes.REMOVE_RAW_MATERIAL_NAME,\r\n  payload: { index:number}\r\n}\r\n\r\ninterface ISetRawMaterialAmountAction {\r\n  type: orderCreationTypes.SET_RAW_MATERIAL_AMOUNT,\r\n  payload: {amount:number, index:number}\r\n}\r\ninterface IRemoveRawMaterialAction {\r\n  type: orderCreationTypes.REMOVE_RAW_MATERIAL,\r\n  payload: {index:number}\r\n}\r\ninterface ISetClientAction {\r\n  type: orderCreationTypes.SET_CLIENT,\r\n  payload:Client\r\n}\r\ninterface IRemoveClientAction {\r\n  type: orderCreationTypes.REMOVE_CLIENT,\r\n}\r\ninterface ISetPriceAction {\r\n  type: orderCreationTypes.SET_PRICE,\r\n  payload:Price\r\n}\r\ninterface IRemovePriceAction {\r\n  type: orderCreationTypes.REMOVE_PRICE,\r\n}\r\ninterface ISetDateAction {\r\n  type: orderCreationTypes.SET_DATE,\r\n  payload:Date | string\r\n}\r\ninterface IRemoveDateAction {\r\n  type: orderCreationTypes.CLEAR_DATE,\r\n}\r\nexport type OrderCreationAction = \r\n  IBtnDisabledAction \r\n  | IIsRightAction \r\n  | IIsLeftAction \r\n  | IRenderCreateBtnAction\r\n  | IBtnUndisabledAction\r\n  | IAddRawMaterialAction\r\n  | IRemoveRawMaterialAction\r\n  | ISetRawMaterialNameAction\r\n  | ISetRawMaterialAmountAction\r\n  | ISetClientAction\r\n  | IRemoveClientAction\r\n  | ISetPriceAction\r\n  | IRemovePriceAction\r\n  | ISetDateAction\r\n  | IRemoveDateAction\r\n  | IRemoveRawMaterialNameAction\r\n  | IToggleFetchAction\r\n  | IClearRawMaterialsdAction","import { Menu } from \"antd\";\r\nimport React, { CSSProperties, FunctionComponent } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { routesEnum } from \"../types/routes\";\r\n\r\n\r\ninterface MainMenuProps {\r\n  collapsed: boolean\r\n  onClick: () => void\r\n}\r\n\r\nconst menuStyle: CSSProperties = {\r\n  position: 'fixed',\r\n  top: 64,\r\n  left: 0,\r\n  zIndex: 1001,\r\n  paddingLeft: 5,\r\n  paddingBottom: 10\r\n};\r\n\r\nconst MainMenu: FunctionComponent<MainMenuProps> = ({ collapsed, onClick }: MainMenuProps) => {\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div className=\"menu-wrapper\">\r\n      {collapsed && <div className=\"main-menu\">\r\n        <div className=\"main-menu__background\" onClick={() => onClick()}>\r\n        </div>\r\n\r\n        <Menu style={menuStyle} mode='inline' selectable={true}>\r\n          {location.pathname !== routesEnum.ORDER_MANAGER\r\n            ? <Menu.Item key=\"1\">\r\n              <NavLink to={routesEnum.ORDER_MANAGER}>\r\n                Заказменеджер\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.ADMIN\r\n            ? <Menu.Item key=\"2\">\r\n              <NavLink to={routesEnum.ADMIN}>\r\n                Админка\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.OPTIONS\r\n            ? <Menu.Item key=\"3\">\r\n              <NavLink to={routesEnum.OPTIONS}>\r\n                Настройки\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.GRAPH\r\n            ? <Menu.Item key=\"4\">\r\n              <NavLink to={routesEnum.GRAPH}>\r\n                Графики\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n        </Menu>\r\n      </div>}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default MainMenu;","import { Button, Layout } from \"antd\";\r\nimport { FunctionComponent, useState } from \"react\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport MainMenu from \"../MainMenu\";\r\n\r\ninterface HeaderProps {\r\n  buttonName: customButtonsStyleType\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\nconst Header: FunctionComponent<HeaderProps> = ({buttonName}) => {\r\n  const { Header } = Layout;\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const {\r\n    backBackgroundBigBtn,\r\n    backBackgroundHeader,\r\n    btnColorBig,\r\n\r\n  } = useTypedSelector(state=>state.options);\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return ( \r\n    <div>\r\n      <MainMenu collapsed={collapsed} onClick={toggleCollapsed} />\r\n      <Header  className=\"header\" style={{backgroundColor: generateCSSColor(backBackgroundHeader)}}>\r\n        <Button \r\n          type={type} \r\n          block={block} \r\n          shape={shape} \r\n          style={{ ...style,\r\n            backgroundColor: generateCSSColor(backBackgroundBigBtn), \r\n            color: generateCSSColor(btnColorBig)\r\n          }}            \r\n          onClick={toggleCollapsed}\r\n        >\r\n            {buttonName}\r\n        </Button>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import { Button, Layout } from \"antd\";\r\nimport { CSSProperties, FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport Header from \"../Header/Header\";\r\nimport { customStyleButton, gray } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport { routesEnum } from \"../../types/routes\";\r\n\r\ninterface OrderManagerProps {\r\n\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\n\r\nconst OrderManager: FunctionComponent<OrderManagerProps> = () => {\r\n  const {\r\n    generalBackground,\r\n    generalColor,\r\n  } = useTypedSelector(state=>state.options);\r\n\r\n  const {\r\n    id\r\n  } = useTypedSelector(state => state.user);\r\n  \r\n  return (\r\n    <Layout \r\n      className='order-manager' \r\n      style={\r\n        {backgroundColor: generateCSSColor(generalBackground), \r\n        color: generateCSSColor(generalColor)}\r\n      }\r\n    >\r\n            {!id&&<Redirect to={routesEnum.LOGIN}/>}\r\n\r\n      <Header buttonName={customButtonsStyleType.orderManager}/>\r\n      <div \r\n      style={\r\n        {backgroundColor: generateCSSColor(generalBackground), \r\n        color: generateCSSColor(generalColor)}\r\n      }\r\n      className='order-manager__container'>\r\n        <NavLink to=\"/order-creation\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.createOrder}\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink to=\"/order-view\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.viewOrder}\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderManager;","import { Dispatch } from 'redux';\r\nimport { OrderCreationAction, orderCreationTypes } from '../../types/orderCreationTypes';\r\n\r\n\r\n\r\n\r\nexport const setOnRight = () =>{\r\n  return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n      dispatch({type:orderCreationTypes.SET_IS_RIGHT});\r\n  };\r\n};\r\nexport const setOnLeft = () =>{\r\n  return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n      dispatch({type:orderCreationTypes.SET_IS_LEFT});\r\n  };\r\n};\r\n  export const setIsButtomDisabled = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.SET_BUTTON_DISABLED});\r\n    };\r\n  };\r\n  export const setIsButtomUndisabled = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.SET_BUTTON_UNDISABLED});\r\n    };\r\n  };\r\n  export const renderCreateBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.RENDER_CREATE_BUTTON});\r\n    };\r\n  };\r\n  export const addRawMaterial = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.ADD_RAW_MATERIAL\r\n        });\r\n    };\r\n  };\r\n  export const setRawMaterialNameOC = (name:any,  index:any, id:any) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.SET_RAW_MATERIAL_NAME,\r\n          payload:{\r\n            name,\r\n            index,\r\n            id\r\n          }\r\n        });\r\n    };\r\n  };\r\n  export const setRawMaterialAmountOC = (amount:any, index:any) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.SET_RAW_MATERIAL_AMOUNT,\r\n          payload:{\r\n            amount,\r\n            index\r\n          }\r\n        });\r\n    };\r\n  };\r\n  export const removeRawMaterial = (index:number) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.REMOVE_RAW_MATERIAL,\r\n          payload:{index}\r\n        });\r\n    };\r\n  };\r\n  export const removeRawMaterialName = (index:number) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.REMOVE_RAW_MATERIAL_NAME,\r\n          payload:{index}\r\n        });\r\n    };\r\n  };\r\n  export const removePriceOrderCreation = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.REMOVE_PRICE,\r\n        });\r\n    };\r\n  };\r\n\r\n  export const setPriceOrderCreation = (id: any, name:any) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.SET_PRICE,\r\n          payload: {\r\n            id,\r\n            name\r\n          }\r\n        });\r\n    };\r\n  };\r\n\r\n  export const removeClientOrderCreation = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.REMOVE_CLIENT,\r\n        });\r\n    };\r\n  };\r\n\r\n  \r\n  export const setClientOrderCreation = (id: any, name:any) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.SET_CLIENT,\r\n          payload: {\r\n            id,\r\n            name\r\n          }\r\n        });\r\n    };\r\n  };\r\n\r\n  export const clearDateOrderCreation = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.CLEAR_DATE,\r\n        });\r\n    };\r\n  };\r\n\r\n  export const setDateOrderCreation = (date:Date | string) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.SET_DATE,\r\n          payload: date\r\n        });\r\n    };\r\n  };\r\n\r\n  export const toggleFetchOrderCreation = (flag:boolean) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.TOGGLE_FETCH,\r\n          payload: flag\r\n        });\r\n    };\r\n  };\r\n  export const clearRawMaterialsListOrderCreation = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.CLEAR_RAW_MATERIALS,\r\n        });\r\n    };\r\n  };","import { IDatacolumn } from \"./dataColumn\";\r\n\r\nexport interface IOrderViewState {\r\n    isOnRight:boolean\r\n    isDisabled:boolean\r\n    selectedClient:null | {id:number, name:string}\r\n    selectedDateStart: null | Date |string\r\n    selectedDateEnd: null | Date | string\r\n    tableData: IDatacolumn[] | []\r\n    isFetch: boolean\r\n}\r\n\r\nexport enum OrderViewActionTypes {\r\n    SET_ON_RIGHT=\"SET_ON_RIGHT\",\r\n    SET_ON_LEFT=\"SET_ON_LEFT\",\r\n    SET_DISABLED_NEXT=\"SET_DISABLED_NEXT\",\r\n    SET_UNABLED_NEXT=\"SET_UNABLED_NEXT\",\r\n    SELECT_CLIENT=\"SELECT_CLIENT\",\r\n    SELECT_DATE_END=\"SELECT_DATE_END\",\r\n    SELECT_DATE_START=\"SELECT_DATE_START\",\r\n    SET_TABLE_DATA=\"SET_TABLE_DATA\",\r\n    TOGGLE_FETCH=\"TOGGLE_FETCH\"\r\n}\r\n\r\n\r\ninterface IToggleFetchAction {\r\n    type:OrderViewActionTypes.TOGGLE_FETCH,\r\n    payload: boolean\r\n}\r\ninterface ISetTableDataAction {\r\n    type:OrderViewActionTypes.SET_TABLE_DATA,\r\n    payload: IDatacolumn[] | []\r\n}\r\ninterface ISetOnRightAction {\r\n    type:OrderViewActionTypes.SET_ON_RIGHT\r\n}\r\ninterface ISetOnLeftAction {\r\n    type:OrderViewActionTypes.SET_ON_LEFT\r\n}\r\ninterface ISetDisabledNextAction {\r\n    type:OrderViewActionTypes.SET_DISABLED_NEXT\r\n}\r\ninterface ISetUnableNextAction {\r\n    type:OrderViewActionTypes.SET_UNABLED_NEXT\r\n}\r\ninterface ISelectClientAction {\r\n    type:OrderViewActionTypes.SELECT_CLIENT,\r\n    payload: null | {id:number, name:string}\r\n}\r\ninterface ISelectDateStartAction {\r\n    type:OrderViewActionTypes.SELECT_DATE_START\r\n    payload: null | Date\r\n}\r\ninterface ISelectDateEndAction {\r\n    type:OrderViewActionTypes.SELECT_DATE_END\r\n    payload: null | Date\r\n}\r\nexport type OrderViewActions = \r\n    | ISetOnRightAction\r\n    | ISetOnLeftAction\r\n    | ISetDisabledNextAction\r\n    | ISetUnableNextAction\r\n    | ISelectClientAction\r\n    | ISelectDateStartAction\r\n    | ISelectDateEndAction\r\n    | ISetTableDataAction\r\n    | IToggleFetchAction\r\n","import { Dispatch } from \"redux\";\r\nimport { IDatacolumn } from \"../../types/dataColumn\";\r\nimport { OrderViewActionTypes, OrderViewActions } from \"../../types/orderViewTypes\";\r\n\r\nexport const setOnRightOrderViev = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_ON_RIGHT});\r\n    };\r\n  };\r\n  export const setOnLeftOrderViev = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_ON_LEFT});\r\n    };\r\n  };\r\n  export const setDisabledNextBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_DISABLED_NEXT});\r\n    };\r\n  };\r\n  export const setUnaisabledNextBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_UNABLED_NEXT});\r\n    };\r\n  };\r\n  export const selectClientVO = (client:null | {id:number, name:string}) =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({\r\n          type:OrderViewActionTypes.SELECT_CLIENT,\r\n          payload:client\r\n        });\r\n    };\r\n  };\r\n  export const selectDateStatrVO = (date: null | Date) =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({\r\n          type:OrderViewActionTypes.SELECT_DATE_START,\r\n          payload: date\r\n        });\r\n    };\r\n  };\r\n  export const selectDateEndVO = (date: null | Date) =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({\r\n          type:OrderViewActionTypes.SELECT_DATE_END,\r\n          payload: date\r\n        });\r\n    };\r\n  };\r\n  export const setTableDataVO = (ordersData: IDatacolumn[] | []) =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({\r\n          type:OrderViewActionTypes.SET_TABLE_DATA,\r\n          payload: ordersData\r\n        });\r\n    };\r\n  };\r\n  export const toggleFetchVO = (flag:boolean) =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({\r\n          type:OrderViewActionTypes.TOGGLE_FETCH,\r\n          payload: flag\r\n        });\r\n    };\r\n  };","export type rgb = {red:number,green:number, blue:number}\r\n\r\nexport type defaultT = {\r\n  generalBackground: rgb\r\n  backBackgroundBack:rgb\r\n  backBackgroundNext:rgb\r\n  backBackgroundHeader:rgb\r\n  backBackgroundFooter:rgb\r\n  backBackgroundBigBtn:rgb\r\n  generalColor:rgb\r\n  btnColorBack:rgb\r\n  btnColorNext:rgb\r\n  btnColorBig:rgb\r\n  isSelected?:boolean\r\n}\r\nexport interface IOptionStateType{\r\n  generalBackground: rgb\r\n  backBackgroundBack:rgb\r\n  backBackgroundNext:rgb\r\n  backBackgroundHeader:rgb\r\n  backBackgroundFooter:rgb\r\n  backBackgroundBigBtn:rgb\r\n  generalColor:rgb\r\n  btnColorBack:rgb\r\n  btnColorNext:rgb\r\n  btnColorBig:rgb\r\n  lightTheme:defaultT\r\n  darkTheme:defaultT\r\n  default:defaultT\r\n}\r\n\r\nexport enum OptionsActionTypes {\r\n  SET_GENERAL_BACKGROUND=\"SET_GENERAL_BACKGROUND\",\r\n  SET_BACK_BACKGROUND=\"SET_BACK_BACKGROUND\",\r\n  SET_NEXT_BACKGROUND=\"SET_NEXT_BACKGROUND\",\r\n  SET_HEADER_BACKGROUND=\"SET_HEADER_BACKGROUND\",\r\n  SET_FOOTER_BACKGROUND=\"SET_FOOTER_BACKGROUND\",\r\n  SET_BIG_BUTTON_BACKGROUND=\"SET_BIG_BUTTON_BACKGROUND\",\r\n  SET_LIGHT_THEME=\"SET_LIGHT_THEME\",\r\n  SET_DARK_THEME=\"SET_DARK_THEME\",\r\n  SET_DEFAULT=\"SET_DEFAULT\",\r\n  COLOR_GENERAL=\"COLOR_GENERAL\",\r\n  COLOR_BIG_BUTTON=\"COLOR_BIG_BUTTON\",\r\n  COLOR_BACK=\"COLOR_BACK\",\r\n  COLOR_NEXT=\"COLOR_NEXT\",\r\n  SET_ALL=\"SET_ALL\",\r\n\r\n}\r\n\r\ninterface setGeneralBackGround {\r\n  type:OptionsActionTypes.SET_GENERAL_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setNextBackGround {\r\n  type:OptionsActionTypes.SET_NEXT_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setBackBackGround {\r\n  type:OptionsActionTypes.SET_BACK_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setHeaderBackGround {\r\n  type:OptionsActionTypes.SET_HEADER_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setFooterBackGround {\r\n  type:OptionsActionTypes.SET_FOOTER_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setBigBtnBackGround {\r\n  type:OptionsActionTypes.SET_BIG_BUTTON_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface installColorBack {\r\n  type:OptionsActionTypes.COLOR_BACK\r\n  payload:rgb\r\n}\r\ninterface installColorNext {\r\n  type:OptionsActionTypes.COLOR_NEXT\r\n  payload:rgb\r\n}\r\ninterface installColorBigBtn {\r\n  type:OptionsActionTypes.COLOR_BIG_BUTTON\r\n  payload:rgb\r\n}\r\ninterface installColorGeneral {\r\n  type:OptionsActionTypes.COLOR_GENERAL\r\n  payload:rgb\r\n}\r\ninterface setLightTheme {\r\n  type:OptionsActionTypes.SET_LIGHT_THEME\r\n}\r\ninterface setDarkTheme {\r\n  type:OptionsActionTypes.SET_DARK_THEME\r\n}\r\ninterface setDefault {\r\n  type:OptionsActionTypes.SET_DEFAULT\r\n}\r\ninterface setAllStyleFromLocStor {\r\n  type:OptionsActionTypes.SET_ALL,\r\n  payload:defaultT\r\n}\r\nexport type OptionsActions = \r\n  setGeneralBackGround\r\n  | setNextBackGround\r\n  | setBackBackGround\r\n  | setHeaderBackGround\r\n  | setFooterBackGround\r\n  | setBigBtnBackGround\r\n  | setNextBackGround\r\n  | setLightTheme\r\n  | setDarkTheme\r\n  | setDefault\r\n  | installColorBack\r\n  | installColorNext\r\n  | installColorBigBtn\r\n  | installColorGeneral\r\n  | setAllStyleFromLocStor","import { defaultT, IOptionStateType } from './../../types/optionsTypes';\r\nimport { Dispatch } from 'redux';\r\nimport { OptionsActions, OptionsActionTypes } from '../../types/optionsTypes';\r\n\r\n\r\nexport const setGeneralBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_GENERAL_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setNextBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_NEXT_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setBackBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_BACK_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setHeaderBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_HEADER_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setFooterBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_FOOTER_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setBigBtnBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_BIG_BUTTON_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorBack = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_BACK,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorNext = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_NEXT,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorBigBtn = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_BIG_BUTTON,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorGeneral = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_GENERAL,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setLightTheme = ()=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_LIGHT_THEME,\r\n    });\r\n  };\r\n};\r\nexport const setDarkTheme = ()=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_DARK_THEME,\r\n    });\r\n  };\r\n};\r\nexport const setDefault = ()=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_DEFAULT,\r\n    });\r\n  };\r\n};\r\nexport const setAllStyleFromLocStor = (optionsData:defaultT)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_ALL,\r\n      payload:optionsData\r\n    });\r\n  };\r\n};","export interface IUserStateType {\r\n  id: number | null,\r\n  email: string,\r\n  isFetching: boolean,\r\n  role:string\r\n}\r\n\r\nexport enum userActionTypes {\r\n  SET_USER='SET_USER',\r\n  IS_FETCHING='IS_FETCHING',\r\n  LOGOUT='LOGOUT',\r\n}\r\n\r\ninterface ISetUser {\r\n  type: userActionTypes.SET_USER,\r\n  payload: {\r\n    id:number,\r\n    email:string\r\n    role:string\r\n  }\r\n}\r\n\r\ninterface IIsFetching {\r\n  type: userActionTypes.IS_FETCHING,\r\n  payload:boolean\r\n}\r\n\r\ninterface ILogout {\r\n  type: userActionTypes.LOGOUT,\r\n}\r\n\r\nexport type UserAction = \r\nISetUser \r\n| IIsFetching\r\n| ILogout","import { Dispatch } from 'redux';\r\nimport { UserAction, userActionTypes } from '../../types/userTypes';\r\n\r\n\r\nexport const setIsFetching = (flag:boolean)=>{\r\n  return async (dispatch:Dispatch<UserAction>) =>{\r\n    dispatch({\r\n      type:userActionTypes.IS_FETCHING,\r\n      payload: flag\r\n    });\r\n  };\r\n};\r\n\r\nexport const setUser = (id:number, email:string, role:string)=>{\r\n  return async (dispatch:Dispatch<UserAction>) =>{\r\n    dispatch({\r\n      type: userActionTypes.SET_USER,\r\n      payload: {\r\n        email,\r\n        id,\r\n        role\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const logout = ()=>{\r\n  return async (dispatch:Dispatch<UserAction>) =>{\r\n    dispatch({\r\n      type: userActionTypes.LOGOUT,\r\n    });\r\n  };\r\n};","export type ClientType = {\r\n  name: string;\r\n  phone: number | string | null;\r\n  id: number;\r\n  inn: number | null;\r\n};\r\nexport interface IClientsState {\r\n  clientList: Array<ClientType>;\r\n  formFields: {\r\n    name: string;\r\n    inn: null | number;\r\n    phone: null | number;\r\n  };\r\n  isSelect:null | number,\r\n  selectedClientsFields:ClientType,\r\n  readyForDelete:boolean,\r\n  isFetching:boolean\r\n\r\n}\r\n\r\nexport enum clientActionsTypes {\r\n  GET = \"GET\",\r\n  CREATE = \"CREATE\",\r\n  CHANGE = \"CHANGE\",\r\n  DELETE = \"DELETE\",\r\n  SET_NAME_CLIENT = \"SET_NAME_CLIENT\",\r\n  SET_INN_CLIENT = \"SET_INN_CLIENT\",\r\n  SET_PHONE_CLIENT = \"SET_PHONE_CLIENT\",\r\n  SELECT_CLIENT=\"SELECT_CLIENT\",\r\n  SET_NAME_CLIENT_FOR_CHANGE = \"SET_NAME_CLIENT_FOR_CHANGE\",\r\n  SET_INN_CLIENT_FOR_CHANGE = \"SET_INN_CLIENT_FOR_CHANGE\",\r\n  SET_PHONE_CLIENT_FOR_CHANGE = \"SET_PHONE_CLIENT_FOR_CHANGE\",\r\n  READY_FOR_DELETE = \"READY_FOR_DELETE\",\r\n  TOGGLE_FETCH = \"TOGGLE_FETCH\",\r\n\r\n}\r\ninterface toggleFetchAction {\r\n  type: clientActionsTypes.TOGGLE_FETCH,\r\n  payload:boolean\r\n}\r\ninterface getClientssAction {\r\n  type: clientActionsTypes.GET;\r\n  payload: Array<ClientType>;\r\n}\r\ninterface setClientNamesAction {\r\n  type: clientActionsTypes.SET_NAME_CLIENT;\r\n  payload: string;\r\n}\r\ninterface setClientINNAction {\r\n  type: clientActionsTypes.SET_INN_CLIENT;\r\n  payload: number | null;\r\n}\r\ninterface setClientPhonesAction {\r\n  type: clientActionsTypes.SET_PHONE_CLIENT;\r\n  payload: number | null;\r\n}\r\n\r\ninterface setClientNamesForChangeAction {\r\n  type: clientActionsTypes.SET_NAME_CLIENT_FOR_CHANGE;\r\n  payload: string;\r\n}\r\ninterface setClientINNForChangeAction {\r\n  type: clientActionsTypes.SET_INN_CLIENT_FOR_CHANGE;\r\n  payload: number | null;\r\n}\r\ninterface setClientPhonesForChangeAction {\r\n  type: clientActionsTypes.SET_PHONE_CLIENT_FOR_CHANGE;\r\n  payload: number | null;\r\n}\r\ninterface ReadyForDeleteClient {\r\n  type: clientActionsTypes.READY_FOR_DELETE;\r\n  payload: boolean;\r\n}\r\ninterface selectClientAction {\r\n  type: clientActionsTypes.SELECT_CLIENT;\r\n  payload: number | null;\r\n}\r\ninterface createClientAction {\r\n  type: clientActionsTypes.CREATE;\r\n  payload: ClientType;\r\n}\r\n\r\ninterface changeClientAction {\r\n  type: clientActionsTypes.CHANGE;\r\n  payload: ClientType;\r\n}\r\ninterface deleteClientAction {\r\n  type: clientActionsTypes.DELETE;\r\n  payload: { id: number };\r\n}\r\nexport type EditClientsActions =\r\n  | getClientssAction\r\n  | createClientAction\r\n  | changeClientAction\r\n  | deleteClientAction\r\n  | setClientINNAction\r\n  | setClientNamesAction\r\n  | setClientPhonesAction\r\n  | selectClientAction\r\n  | setClientNamesForChangeAction\r\n  | setClientINNForChangeAction\r\n  | setClientPhonesForChangeAction\r\n  | ReadyForDeleteClient\r\n  | toggleFetchAction","import { Dispatch } from \"redux\";\r\nimport {\r\n  clientActionsTypes,\r\n  EditClientsActions,\r\n} from \"../../types/editClientsTypes\";\r\n\r\n\r\n\r\nexport const getClients = (clients: any) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.GET, payload: clients });\r\n  };\r\n};\r\n\r\nexport const setClientNames = (name: string) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.SET_NAME_CLIENT, payload: name });\r\n  };\r\n};\r\n\r\nexport const setClientINN = (inn: number | null) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.SET_INN_CLIENT, payload: inn });\r\n  };\r\n};\r\n\r\nexport const setClientPhone = (phone: number | null) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.SET_PHONE_CLIENT, payload: phone });\r\n  };\r\n};\r\n\r\nexport const selectClient = (index: number| null) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.SELECT_CLIENT, payload: index });\r\n  };\r\n};\r\n\r\nexport const setClientNamesForChange = (name: string) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.SET_NAME_CLIENT_FOR_CHANGE, payload: name });\r\n  };\r\n};\r\n\r\nexport const setClientINNForChange = (inn: number | null) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.SET_INN_CLIENT_FOR_CHANGE, payload: inn });\r\n  };\r\n};\r\n\r\nexport const setClientPhoneForChange = (phone: number | null) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.SET_PHONE_CLIENT_FOR_CHANGE, payload: phone });\r\n  };\r\n};\r\n\r\nexport const readyForDeleteClient = (flag : boolean ) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.READY_FOR_DELETE, payload: flag });\r\n  };\r\n};\r\nexport const toggleFetchingClient = (flag : boolean ) => {\r\n  return async (dispatch: Dispatch<EditClientsActions>) => {\r\n    dispatch({ type: clientActionsTypes.TOGGLE_FETCH, payload: flag });\r\n  };\r\n};","export type PriceType = {\r\n  id: number,\r\n  coast: number | null\r\n  rawMaterialId: number,\r\n  name: string,\r\n}\r\n\r\nexport interface IPriceState {\r\n  priceList:Array<PriceType>\r\n  isFetchPriceList:boolean\r\n  priceNames:Array<{\r\n    nameId:string | number,\r\n    name:string\r\n  }>\r\n  selectedPrice:number | null,\r\n  fieldForCreationPrice: string,\r\n  redyForDeletePrice:boolean,\r\n  arrayForChange:Array<{coast:number, id:number}> | null,\r\n  readyForChange:boolean\r\n\r\n}\r\n\r\nexport enum priceActionsTypes{\r\n  GET=\"GET\",\r\n  GET_ONE_PRICE=\"GET_ONE_PRICE\",\r\n  GET_PRICE_NAMES=\"GET_PRICE_NAMES\",\r\n  CREATE=\"CREATE\",\r\n  CHANGE=\"CHANGE\",\r\n  DELETE=\"DELETE\",\r\n  SELECT_PRICE_NAME=\"SELECT_PRICE_NAME\",\r\n  SET_NAME_FOR_CREATE=\"SET_NAME_FOR_CREATE\",\r\n  SET_NAME_FOR_CHANGE=\"SET_NAME_FOR_CHANGE\",\r\n  READY_FOR_DELETE_PRICE=\"READY_FOR_DELETE_PRICE\",\r\n  SET_PRICE_LIST=\"SET_PRICE_LIST\",\r\n  FETCH_PRICE_LIST=\"FETCH_PRICE_LIST\",\r\n  ARRAY_FOR_CHANGE=\"ARRAY_FOR_CHANGE\",\r\n  READY_FOR_CHANGE=\"READY_FOR_CHANGE\"\r\n}\r\n\r\ninterface raedyForChangrPriceAction {\r\n  type:priceActionsTypes.READY_FOR_CHANGE,\r\n  payload:boolean\r\n}\r\n\r\ninterface arrayForChangrPriceAction {\r\n  type:priceActionsTypes.ARRAY_FOR_CHANGE,\r\n  payload:Array<{coast:number, id:number}> \r\n}\r\n\r\ninterface fetchPriceListAction {\r\n  type:priceActionsTypes.FETCH_PRICE_LIST,\r\n  payload:boolean\r\n}\r\n\r\ninterface setPriceListAction {\r\n  type:priceActionsTypes.SET_PRICE_LIST,\r\n  payload:PriceType[]\r\n}\r\n\r\ninterface readyForDeletePriceAction {\r\n  type:priceActionsTypes.READY_FOR_DELETE_PRICE,\r\n  payload:boolean\r\n}\r\n\r\ninterface setNameForCreationAction {\r\n  type:priceActionsTypes.SET_NAME_FOR_CREATE,\r\n  payload:string\r\n}\r\n\r\ninterface getPricesAction {\r\n  type:priceActionsTypes.GET,\r\n  payload:Array<PriceType>\r\n}\r\n\r\ninterface SelectPriceNameAction {\r\n  type:priceActionsTypes.SELECT_PRICE_NAME,\r\n  payload:number|null\r\n}\r\n\r\ninterface getPriceAction {\r\n  type:priceActionsTypes.GET_ONE_PRICE,\r\n  payload:PriceType\r\n}\r\n\r\ninterface getPriceNamesAction {\r\n  type:priceActionsTypes.GET_PRICE_NAMES,\r\n  payload:Array<{\r\n    nameId:string,\r\n    name:string\r\n  }>\r\n}\r\n\r\ninterface createPriceAction {\r\n  type:priceActionsTypes.CREATE,\r\n  payload:PriceType\r\n}\r\n\r\ninterface changePricetAction {\r\n  type:priceActionsTypes.CHANGE,\r\n  payload:PriceType\r\n}\r\ninterface deletePriceAction {\r\n  type:priceActionsTypes.DELETE,\r\n  payload:{id:number}\r\n}\r\nexport type PriceActions = \r\ngetPricesAction\r\n| getPriceAction\r\n| getPriceNamesAction\r\n| createPriceAction\r\n| changePricetAction\r\n| deletePriceAction\r\n| SelectPriceNameAction\r\n| setNameForCreationAction\r\n| readyForDeletePriceAction\r\n| setPriceListAction\r\n| fetchPriceListAction\r\n| arrayForChangrPriceAction\r\n| raedyForChangrPriceAction\r\n","import { Dispatch } from \"redux\";\r\nimport { PriceActions, priceActionsTypes, PriceType } from \"../../types/priceTypes\";\r\n\r\nexport const getPriceNames = (priceNames:Array<{ nameId:string,name:string }>) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.GET_PRICE_NAMES, payload: priceNames });\r\n  };\r\n};\r\n\r\nexport const selectPriceNames = (idName:number|null) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.SELECT_PRICE_NAME, payload: idName });\r\n  };\r\n};\r\nexport const setNameForCreation = (name:string) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.SET_NAME_FOR_CREATE, payload: name });\r\n  };\r\n};\r\n\r\nexport const readyForDeletePrice = (flag:boolean) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.READY_FOR_DELETE_PRICE, payload: flag });\r\n  };\r\n};\r\n\r\nexport const setPriceList = (priceList:PriceType[]) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.SET_PRICE_LIST, payload: priceList });\r\n  };\r\n};\r\n\r\nexport const fetchPriceList = (flag:boolean) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.FETCH_PRICE_LIST, payload: flag });\r\n  };\r\n};\r\n\r\nexport const arrayForChangePrice = (array:Array<{coast:number, id:number}> ) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.ARRAY_FOR_CHANGE, payload: array });\r\n  };\r\n};\r\n\r\nexport const readyForChangePrice = (flag:boolean) => {\r\n  return async (dispatch: Dispatch<PriceActions>) => {\r\n    \r\n    dispatch({ type: priceActionsTypes.READY_FOR_CHANGE, payload: flag });\r\n  };\r\n};","export type rawMaterial = {\r\n    units:string\r\n    name:string,\r\n    id:number\r\n}\r\nexport type Units = {\r\n    name:string,\r\n    id:number\r\n}\r\nexport interface IEditRawMaterialsState {\r\n    rawMaterialsList:Array<rawMaterial>,\r\n    readyForDelete:boolean\r\n    materialSelected:number | null,\r\n    units:Units[] | [],\r\n    creationFields:{\r\n        name:string ,\r\n        units:string | null\r\n    },\r\n    valuesForChange:rawMaterial | {}\r\n    isFetch:boolean\r\n}\r\n\r\nexport enum editRawMaterialsActionsTypes{\r\n    GET=\"GET_MATERIALS\",\r\n    GET_ONE_MATERIAL=\"GET_ONE_MATERIAL\",\r\n    CREATE=\"CREATE\",\r\n    CHANGE=\"CHANGE\",\r\n    DELETE=\"DELETE\",\r\n    READY_FOR_DELETE=\"READY_FOR_DELETE\",\r\n    SELECT_MATERIAL=\"SELECT_MATERIAL\",\r\n    SET_MATERIALS_NAME_CREATE=\"SET_MATERIALS_NAME_CREATE\",\r\n    SET_MATERIALS_UNIT_CREATE=\"SET_MATERIALS_UNITS_CREATE\",\r\n    SET_UNITS=\"SET_UNITS\",\r\n    SET_FOR_CHANGES=\"SET_FOR_CHANGES\",\r\n    FETCH=\"FETCH\"\r\n\r\n}\r\ninterface setUnitsAction {\r\n    type:editRawMaterialsActionsTypes.SET_UNITS,\r\n    payload:Units[]\r\n}\r\ninterface fetchAction {\r\n    type:editRawMaterialsActionsTypes.FETCH,\r\n    payload:boolean\r\n}\r\n\r\ninterface seChangesAction {\r\n    type:editRawMaterialsActionsTypes.SET_FOR_CHANGES,\r\n    payload:rawMaterial\r\n}\r\n\r\ninterface selectMaterialsNameCreateAction {\r\n    type:editRawMaterialsActionsTypes.SET_MATERIALS_NAME_CREATE,\r\n    payload:string\r\n}\r\n\r\ninterface selectMaterialsUnitCreateAction {\r\n    type:editRawMaterialsActionsTypes.SET_MATERIALS_UNIT_CREATE,\r\n    payload:string | null\r\n}\r\n\r\ninterface selectMaterialsAction {\r\n    type:editRawMaterialsActionsTypes.SELECT_MATERIAL,\r\n    payload:number | null\r\n}\r\n\r\ninterface getRawMaterialsAction {\r\n    type:editRawMaterialsActionsTypes.GET,\r\n    payload:Array<rawMaterial>\r\n}\r\n\r\ninterface readyForDeleteMaterialsAction {\r\n    type:editRawMaterialsActionsTypes.READY_FOR_DELETE,\r\n    payload:boolean\r\n}\r\n\r\ninterface createRawMaterialAction {\r\n    type:editRawMaterialsActionsTypes.CREATE,\r\n    payload:{name:string, id:number, units:string}\r\n}\r\n\r\ninterface changeRawMaterialAction {\r\n    type:editRawMaterialsActionsTypes.CHANGE,\r\n    payload:{name:string, id:number, units:string}\r\n}\r\ninterface deleteRawMaterialAction {\r\n    type:editRawMaterialsActionsTypes.DELETE,\r\n    payload:{ id:number}\r\n}\r\nexport type EditRawMaterialsActions =  \r\n    getRawMaterialsAction\r\n    | createRawMaterialAction\r\n    | changeRawMaterialAction\r\n    | deleteRawMaterialAction\r\n    | readyForDeleteMaterialsAction\r\n    | selectMaterialsAction\r\n    | selectMaterialsUnitCreateAction\r\n    | selectMaterialsNameCreateAction\r\n    | setUnitsAction\r\n    | seChangesAction\r\n    | fetchAction","import { Dispatch } from \"redux\";\r\nimport { EditRawMaterialsActions, editRawMaterialsActionsTypes, rawMaterial } from \"../../types/editRawMaterialsTypes\";\r\n\r\nexport const deleteRawMaterial = (id: number) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        // fetch delete\r\n        const fetchResult = { id: 2 };\r\n        dispatch({ type: editRawMaterialsActionsTypes.DELETE, payload: fetchResult });\r\n    };\r\n};\r\n\r\nexport const createRawMaterial = (name: string, units:string) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        // fetch post\r\n        const fetchResult = { name: 'asd222asd', id: 7, units:''};\r\n        dispatch({ type: editRawMaterialsActionsTypes.CREATE, payload: fetchResult   });\r\n    };\r\n};\r\n\r\nexport const changeRawMaterial = (name: string, id: number, units:string) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        // fetch put\r\n        const fetchResult = { name: 'asd222asd', id: 7, units:'' };\r\n        dispatch({ type: editRawMaterialsActionsTypes.CHANGE, payload: fetchResult });\r\n    };\r\n};\r\n\r\nexport const getRawMaterials = (materials:any[]) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.GET, payload: materials });\r\n    };\r\n};\r\nexport const readyForDeleteMaterial = (flag:boolean) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.READY_FOR_DELETE, payload: flag });\r\n    };\r\n};\r\nexport const selectMaterial = (id:number | null) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.SELECT_MATERIAL, payload: id });\r\n    };\r\n};\r\nexport const setMaterialName = (name:string) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.SET_MATERIALS_NAME_CREATE, payload: name });\r\n    };\r\n};\r\nexport const setMaterialUnit = (unit:string | null) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.SET_MATERIALS_UNIT_CREATE, payload: unit });\r\n    };\r\n};\r\nexport const getUnits = (units:Array<any>) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.SET_UNITS, payload: units });\r\n    };\r\n};\r\n\r\nexport const setChanges = (newMaterial:rawMaterial) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.SET_FOR_CHANGES, payload: newMaterial });\r\n    };\r\n};\r\n\r\nexport const fetchRawMaterials = (flag:boolean) => {\r\n    return async (dispatch: Dispatch<EditRawMaterialsActions>) => {\r\n        dispatch({ type: editRawMaterialsActionsTypes.FETCH, payload: flag });\r\n    };\r\n};","export type TypeMV=\r\nTypesofMW.CLIENT_CHANGE |\r\nTypesofMW.CLIENT_CREATE |\r\nTypesofMW.CLIENT_DELETE |\r\nTypesofMW.RAW_MATERIALS_CHANGE |\r\nTypesofMW.RAW_MATERIALS_CREATE |\r\nTypesofMW.RAW_MATERIALS_DELETE |\r\nTypesofMW.PRICE_CHANGE |\r\nTypesofMW.PRICE_DELETE |\r\nTypesofMW.PRICE_CREATE \r\n\r\nexport interface IModalWindowState {\r\n  visible: boolean,\r\n  confirmLoading: boolean,\r\n  typeMV:  TypeMV\r\n}\r\nexport enum TypesofMW {\r\n  CLIENT_CREATE=\"CLIENT_CREATE\",\r\n  CLIENT_DELETE=\"CLIENT_DELETE\",\r\n  CLIENT_CHANGE=\"CLIENT_CHANGE\",\r\n  RAW_MATERIALS_CREATE=\"RAW_MATERIALS_CREATE\",\r\n  RAW_MATERIALS_DELETE=\"RAW_MATERIALS_DELETE\",\r\n  RAW_MATERIALS_CHANGE=\"RAW_MATERIALS_CHANGE\",\r\n  PRICE_CREATE=\"PRICE_CREATE\",\r\n  PRICE_DELETE=\"PRICE_DELETE\",\r\n  PRICE_CHANGE=\"PRICE_CHANGE\",\r\n} ;\r\nexport enum ModalWindowTypeActions {\r\n  SET_VISIBLE=\"SET_VISIBLE\",\r\n  CONFIRM_LOADING=\"CONFIRM_LOADING\",\r\n  SET_TYPE=\"SET_TYPE\",\r\n} ;\r\n\r\ninterface SetVisible {\r\n  type:ModalWindowTypeActions.SET_VISIBLE,\r\n  payload: boolean\r\n}\r\n\r\ninterface SetConfirmLoading {\r\n  type:ModalWindowTypeActions.CONFIRM_LOADING,\r\n  payload: boolean\r\n}\r\n\r\ninterface SetType {\r\n  type:ModalWindowTypeActions.SET_TYPE,\r\n  payload: TypeMV\r\n}\r\nexport type ModalWindowActions = SetVisible | SetConfirmLoading | SetType\r\n","import { Dispatch } from \"redux\";\r\nimport { ModalWindowActions, ModalWindowTypeActions, TypeMV } from \"../../../types/ModalWindowTypes/ModalWindowTypes\";\r\n\r\nexport const setVisibleMW = (flag: boolean) => {\r\n  return async (dispatch: Dispatch<ModalWindowActions>) => {\r\n    dispatch({ type: ModalWindowTypeActions.SET_VISIBLE, payload: flag });\r\n  };\r\n};\r\n\r\nexport const setConfirmLoadingMW = (flag: boolean) => {\r\n  return async (dispatch: Dispatch<ModalWindowActions>) => {\r\n    dispatch({ type: ModalWindowTypeActions.CONFIRM_LOADING, payload: flag });\r\n  };\r\n};\r\n\r\nexport const setType = (type:TypeMV\r\n\r\n    ) => {\r\n  return async (dispatch: Dispatch<ModalWindowActions>) => {\r\n    dispatch({ type: ModalWindowTypeActions.SET_TYPE, payload: type });\r\n  };\r\n};","export enum  CascaderTypes {\r\n  SET_CLIENT_ORDER_CREATION=\"SET_CLIENT_ORDER_CREATION\",\r\n  SET_PRICE_ORDER_CREATION=\"SET_PRICE_ORDER_CREATION\",\r\n  SET_MATERIAL=\"SET_MATERIAL\",\r\n  SET_ORDER_VIEW=\"SET_ORDER_VIEW\",\r\n\r\n}","import * as OrderCreationActionCreaors from './orderCreationActions';\r\nimport * as ViewOrderActionCreaors from './veiwOrderActions';\r\nimport * as OptionActionCreaors from './optionActions';\r\nimport * as UserActionCreaors from './userAction';\r\nimport * as ClientActionCreaors from './editClientsActions';\r\nimport * as PriceActionCreaors from './priceActions';\r\nimport * as RawMaterialsActionCreaors from './editRawMaterialsActions';\r\nimport * as ModalWindowActionCreaors from './modalWindowActions/modalWindowActions';\r\n\r\n\r\nexport default {\r\n  ...OrderCreationActionCreaors,\r\n  ...ViewOrderActionCreaors,\r\n  ...OptionActionCreaors,\r\n  ...UserActionCreaors,\r\n  ...ClientActionCreaors,\r\n  ...PriceActionCreaors,\r\n  ...RawMaterialsActionCreaors,\r\n  ...ModalWindowActionCreaors,\r\n\r\n};","import {useDispatch} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport ActionCreators from '../store/actionCreators/rootActions';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(ActionCreators, dispatch);\r\n};","import { Cascader } from \"antd\";\r\nimport { CascaderOptionType, CascaderValueType } from \"antd/lib/cascader\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { ArrowDownOutlined } from '@ant-design/icons';\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { CascaderTypes } from \"../types/customCascaderTypes\";\r\n\r\ninterface CustomCascaderProps {\r\n  defaultValue: string\r\n  options: CascaderOptionType[]\r\n  setCallback?: any\r\n  clearCallback?: any\r\n  typeCascader?: CascaderTypes\r\n  index?:number \r\n}\r\n\r\n\r\n\r\n\r\nfunction filter(inputValue: string, path: CascaderOptionType[] | any): boolean {\r\n  return path.some((option: any) => option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1);\r\n}\r\n\r\n\r\nconst CustomCascader: FunctionComponent<CustomCascaderProps> = ({\r\n  defaultValue,\r\n  options,\r\n  typeCascader,\r\n  index\r\n}: CustomCascaderProps) => {\r\n\r\n  const {\r\n    removeClientOrderCreation,\r\n    removePriceOrderCreation,\r\n    setClientOrderCreation,\r\n    setPriceOrderCreation,\r\n    setRawMaterialNameOC,\r\n    removeRawMaterialName,\r\n    selectClientVO,\r\n  } = useActions();\r\n\r\n\r\n\r\n  function onChange(value: CascaderValueType, selectedOptions: CascaderOptionType[] | undefined) {\r\n    if (selectedOptions !== undefined) {\r\n      switch (typeCascader) {\r\n        case CascaderTypes.SET_CLIENT_ORDER_CREATION:\r\n          if (selectedOptions[0] === undefined) return removeClientOrderCreation();\r\n          return setClientOrderCreation(value[0], selectedOptions[0].label);\r\n        case CascaderTypes.SET_PRICE_ORDER_CREATION:\r\n          if (selectedOptions[0] === undefined) return removePriceOrderCreation();\r\n          return setPriceOrderCreation(value[0], selectedOptions[0].label);\r\n        case CascaderTypes.SET_MATERIAL:\r\n          if (selectedOptions[0] === undefined) return removeRawMaterialName(index as number);\r\n          return setRawMaterialNameOC( selectedOptions[0].label, index ,value[0], );\r\n          case CascaderTypes.SET_ORDER_VIEW:\r\n            if (selectedOptions[0] === undefined) return selectClientVO(null);\r\n            return selectClientVO({id:value[0] as number, name:selectedOptions[0].label as string});\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Cascader\r\n      options={options}\r\n      onChange={onChange}\r\n      placeholder=\"Please select...\"\r\n      showSearch={{ filter, matchInputWidth: true }}\r\n      changeOnSelect={true}\r\n      defaultValue={[defaultValue]}\r\n      displayRender={label => label.join(' ')}\r\n      notFoundContent={'Таков нетъ'}\r\n      suffixIcon={<ArrowDownOutlined />}\r\n      value={[defaultValue]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomCascader;\r\n\r\n\r\n","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { DatePicker } from \"antd\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\nimport { useActions } from \"../hooks/useActions\";\r\n\r\n\r\ninterface CustomDatePickerProps {\r\n  props: any\r\n}\r\n\r\nconst CustomDatePicker: FunctionComponent<CustomDatePickerProps> = ({ props }: CustomDatePickerProps) => {\r\n\r\n  const { clearDateOrderCreation, setDateOrderCreation } = useActions();\r\n\r\n\r\n  function onChange(date: moment.Moment | null, dateString: string) {\r\n    console.log(dateString);\r\n    setDateOrderCreation(dateString);\r\n  }\r\n  useEffect(() => {\r\n    return ()=>{\r\n      clearDateOrderCreation();\r\n    } ;\r\n  }, []);\r\n  return (\r\n    <DatePicker \r\n      // format={'DD/MM/YYYY'}\r\n      onChange={onChange} \r\n      locale={locale} \r\n      style={props.width} \r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","import { FunctionComponent, ReactNode } from \"react\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\n\r\ninterface FooterProps {\r\n  children?:ReactNode\r\n}\r\n\r\nconst Footer: FunctionComponent<FooterProps> = ({children}:FooterProps) => {\r\n    const {backBackgroundFooter} = useTypedSelector(state=>state.options);\r\n  return (\r\n    <footer \r\n      className=\"footer\"\r\n      style={{ \r\n        backgroundColor: generateCSSColor(backBackgroundFooter), \r\n      }} \r\n    >\r\n      {children}\r\n    </footer> \r\n  );\r\n};\r\n\r\nexport default Footer;","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\n\r\ninterface AddButtonProps {\r\n\r\n}\r\n\r\nconst {type} = customStyleButton;\r\n\r\nconst AddButton: FunctionComponent<AddButtonProps> = () => {\r\n  const {addRawMaterial} = useActions();\r\n  const {isFetch} = useTypedSelector(state=>state.orderCreation);\r\n  const handleClick=()=>{\r\n    addRawMaterial();\r\n  };\r\n  return (\r\n    <Button  \r\n      type={type}  \r\n      shape={'circle'} \r\n      className=\"add-button\" \r\n      icon={<PlusOutlined/>} \r\n      onClick={handleClick}\r\n      hidden={isFetch}\r\n    >\r\n        \r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddButton;","import { Space, Input } from 'antd';\r\nimport React, { FunctionComponent, useEffect } from 'react';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\ninterface CustomInputProps {\r\n  amount: number,\r\n  index: number,\r\n}\r\n\r\n\r\n\r\nconst CustomInput: FunctionComponent<CustomInputProps> = ({ amount, index }: CustomInputProps) => {\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n      amount = 0;\r\n    };\r\n  },[]);\r\n  const { setRawMaterialAmountOC } = useActions();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const amountToNumber = Number.parseInt(e.target.value);\r\n    setRawMaterialAmountOC( amountToNumber, index);\r\n  };\r\n\r\n  return (\r\n    <Space direction=\"vertical\">\r\n      <Input\r\n        onChange={e => handleChange(e)}\r\n        className=\"custom-input\"\r\n        addonAfter=\"кг\"\r\n        type=\"number\" min=\"0\"\r\n        value={amount}\r\n      />\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default CustomInput;","import { MinusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useState } from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomInput from \"../CustomInput\";\r\nimport { redColor, customStyleButton } from '../../custom-styles-for-antd/styleVariables';\r\nimport { CascaderTypes } from \"../../types/customCascaderTypes\";\r\n\r\ninterface RawMaterialItemProps {\r\n  index: number\r\n  options:any\r\n}\r\n\r\n\r\nconst RawMaterialItem: FunctionComponent<RawMaterialItemProps> = ({ index, options }: RawMaterialItemProps) => {\r\n\r\n  const { removeRawMaterial } = useActions();\r\n\r\n  const { rawMaterialList } = useTypedSelector(state => state.orderCreation);\r\n  const currentRawMaterial = rawMaterialList[index];\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const styleDeleteButton: CSSProperties = {\r\n    ...customStyleButton.style,\r\n    ...redColor,\r\n    visibility: isVisible && rawMaterialList.length > 1\r\n      ? 'visible'\r\n      : 'hidden'\r\n  };\r\n\r\n  const handleClickRemoveItem = () => {\r\n    removeRawMaterial(index);\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"raw-material-item\"\r\n      onMouseEnter={() => setIsVisible(true)}\r\n      onMouseLeave={() => setIsVisible(false)}\r\n    >\r\n      <CustomCascader\r\n        index={index}\r\n        defaultValue={currentRawMaterial.name}\r\n        options={options}\r\n        typeCascader={CascaderTypes.SET_MATERIAL}\r\n      />\r\n      <CustomInput amount={currentRawMaterial.amount} index={index}  />\r\n      <Button\r\n        shape={\"circle\"}\r\n        style={styleDeleteButton}\r\n        icon={<MinusCircleOutlined />}\r\n        className=\"raw-material-item__delete-btn\"\r\n        onClick={handleClickRemoveItem}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RawMaterialItem;","class ClientsAPI{\r\n  baseURL: string;\r\n  constructor(){\r\n    this.baseURL = 'http://localhost:8000/api/clients';\r\n  }\r\n\r\n  \r\n\r\n  async getClients() {\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method:'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error, 'clients');\r\n    }\r\n  }\r\n\r\n  async createClient (name:string, inn:number | null, phone:number| null) {\r\n    try {\r\n      const response = await fetch(this.baseURL + '/', {\r\n        method:'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({name, inn, phone})\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n      return data;\r\n\r\n    } catch (error) {\r\n      console.log(error, \"--error createClient--\");\r\n    }\r\n  };\r\n\r\n\r\n  async editClient (name:string, inn:number | null, phone:number| null, id : number) {\r\n    try {\r\n      console.log(name, inn, phone, id);\r\n\r\n      const response = await fetch(this.baseURL + '/', {\r\n        method:'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({name, inn, phone, id})\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n      return data;\r\n\r\n    } catch (error) {\r\n      console.log(error, \"--error editClient--\");\r\n    }\r\n  };\r\n\r\n  async deleteClients(id:number) {\r\n    try {\r\n      const response = await fetch(this.baseURL + `/${id}`, {\r\n        method:'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      console.log(data, '/');\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ClientsAPI();","import { CascaderOptionType } from 'antd/lib/cascader';\r\nimport { useTypedSelector } from './../hooks/useTypedSelector';\r\n\r\n\r\nexport function useGenerateOptionCascaderClient():CascaderOptionType[] {\r\n  const { clientList } = useTypedSelector(state => state.clients);\r\n\r\n  const options = clientList.map((item)=>({\r\n    value: item.id,\r\n    label: item.name\r\n  }));\r\n  return options;\r\n}\r\n\r\nexport function useGenerateOptionCascaderPrice():CascaderOptionType[] {\r\n  const { priceNames } = useTypedSelector(state => state.price);\r\n\r\n  const options = priceNames.map((item)=>({\r\n    value: item.nameId,\r\n    label: item.name\r\n  }));\r\n  return options;\r\n}\r\n\r\nexport function useGenerateOptionCascaderRawMaterials():CascaderOptionType[] {\r\n  const  rawMaterialsListFromDB  = useTypedSelector(state => state.rawMaterials.rawMaterialsList);\r\n  const options = rawMaterialsListFromDB.map((item)=>({\r\n    value: item.id,\r\n    label: item.name\r\n  }));\r\n  return options;\r\n}","export enum datapickerTypes {\r\n  ORDER_CREATION=\"ORDER_CREATION\",\r\n  ORDER_VIEW=\"ORDER_VIEW\"\r\n\r\n}","import { PriceType } from \"../types/priceTypes\";\r\n\r\n\r\nclass PriceAPI{\r\n  baseURL: string;\r\n  constructor(){\r\n    this.baseURL = 'http://localhost:8000/api/price';\r\n  }\r\n\r\n  \r\n\r\n  async getPrice(priceName:string) {\r\n    try {\r\n      const response = await fetch(this.baseURL + `/${priceName}`, {\r\n        method:'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      const priceList = data.map((itemPrice: { id_price: number; coast: number |null; raw_material_id: number; name: string; }):PriceType=>{\r\n        return {\r\n          id:itemPrice.id_price,\r\n          coast:itemPrice.coast,\r\n          rawMaterialId: itemPrice.raw_material_id,\r\n          name:itemPrice.name,\r\n        };\r\n      });\r\n      return priceList;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getRawMaterialsByPriceName() {\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method:'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getPriceNames() {\r\n    try {\r\n      const response = await fetch(this.baseURL + '/price-names', {\r\n        method:'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      const result = data.map((item: { id_price_name: any; price_name: any; })=>({\r\n        nameId:item.id_price_name,\r\n        name:item.price_name,\r\n      }));\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async createPrice(name:string) {\r\n    try {\r\n      const response = await fetch(this.baseURL + '/price-names', {\r\n        method:'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({name})\r\n\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      const result = data.map((item: { id_price_name: any; price_name: any; })=>({\r\n        nameId:item.id_price_name,\r\n        name:item.price_name,\r\n      }));\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async changePrice(array:Array<{coast:number, id:number}>) {\r\n    try {\r\n      const response = await fetch(this.baseURL , {\r\n        method:'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(array)\r\n\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deletePriceName(id:number) {\r\n    try {\r\n      const response = await fetch(this.baseURL +`/${id}` , {\r\n        method:'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      const result = data.map((item: { id_price_name: any; price_name: any; })=>({\r\n        nameId:item.id_price_name,\r\n        name:item.price_name,\r\n      }));\r\n      return result;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new PriceAPI();","import { rawMaterial } from \"../types/editRawMaterialsTypes\";\r\n\r\nclass RawMaterialAPI{\r\n  baseURL: string;\r\n  constructor(){\r\n    this.baseURL = 'http://localhost:8000/api/raw-materials';\r\n  }\r\n\r\n  async createRawMaterials(nameMaterial:string, units:string) {\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method:'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n\r\n        },\r\n        body: JSON.stringify({nameMaterial, units})\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      if (data.name === \"error\") {\r\n        return data;\r\n      }\r\n      const rawMaterials = data.map((material: { name: any; raw_material_id: any; unit_name:string;})=>({\r\n        name:material.name, \r\n        id:material.raw_material_id,\r\n        units: material.unit_name\r\n      }));\r\n      \r\n      return rawMaterials;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async changeRawMaterials(valuesForChange:rawMaterial) {\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method:'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n\r\n        },\r\n        body: JSON.stringify({...valuesForChange})\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      if (data.name === \"error\") {\r\n        return data;\r\n      }\r\n      const rawMaterials = data.map((material: { name: any; raw_material_id: any; unit_name:string;})=>({\r\n        name:material.name, \r\n        id:material.raw_material_id,\r\n        units: material.unit_name\r\n      }));\r\n      \r\n      return rawMaterials;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  async getRawMaterials() {\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method:'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      const rawMaterials = data.map((material: { name: any; raw_material_id: any; unit_name:string;})=>({\r\n        name:material.name, \r\n        id:material.raw_material_id,\r\n        units: material.unit_name\r\n      }));\r\n      \r\n      return rawMaterials;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteRawMaterials(id : number) {\r\n    try {\r\n      const response = await fetch(this.baseURL + `/${id}`, {\r\n        method:'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      const rawMaterials = data.map((material: { name: any; raw_material_id: any; unit_name:string;})=>({\r\n        name:material.name, \r\n        id:material.raw_material_id,\r\n        units: material.unit_name\r\n      }));\r\n      \r\n      return rawMaterials;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getRawMaterialsAndUnits() {\r\n    try {\r\n      const response = await fetch(this.baseURL + '/materials-and-units', {\r\n        method:'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n\r\n      const units = data.units.map((unit: { unit_name: any; id_unit_name: any; })=>({\r\n        name:unit.unit_name, \r\n        id:unit.id_unit_name\r\n      }));\r\n\r\n      const rawMaterials = data.rawMaterials.map((material: {unit_name:string; name: string; raw_material_id: number; })=>({\r\n        name:material.name, \r\n        id:material.raw_material_id,\r\n        units:material.unit_name\r\n      }));\r\n      \r\n      return {rawMaterials, units};\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new RawMaterialAPI();","import moment from \"moment\";\r\nimport { ICreateOrderAPI } from \"../types/orderCreationTypes\";\r\n\r\n\r\n\r\nclass OrderAPI {\r\n  baseURL: string;\r\n\r\n  constructor() {\r\n    this.baseURL = \"http://localhost:8000/api/orders\";\r\n  }\r\n\r\n  async getOrdersByClient(\r\n    clientId: number,\r\n    dateStart: string | Date | null,\r\n    dateEnd: string | Date | null\r\n  ) {\r\n    try {\r\n      dateStart =\r\n        dateStart && moment(dateStart, \"YYYY-MM-DD\").toISOString().slice(0, 10);\r\n      dateEnd =\r\n        dateEnd && moment(dateEnd, \"YYYY-MM-DD\").toISOString().slice(0, 10);\r\n      const response = await fetch(\r\n        this.baseURL + `/client/${clientId}/${dateStart}/${dateEnd}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  \r\n  async getOrders(\r\n    dateStart: string | Date | null,\r\n    dateEnd: string | Date | null\r\n  ) {\r\n    try {\r\n      dateStart =\r\n        dateStart && moment(dateStart, \"YYYY-MM-DD\").toISOString().slice(0, 10);\r\n      dateEnd =\r\n        dateEnd && moment(dateEnd, \"YYYY-MM-DD\").toISOString().slice(0, 10);\r\n      const response = await fetch(\r\n        this.baseURL + `/all-orders/${dateStart}/${dateEnd}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  createOrderAdapter(data: any): ICreateOrderAPI {\r\n    return {\r\n      client: data.client,\r\n      price: data.price,\r\n      date: data.date,\r\n      rawMaterialList: data.rawMaterialList,\r\n    };\r\n  }\r\n\r\n  async createOrder(orderData: ICreateOrderAPI) {\r\n    try {\r\n      const response = await fetch(this.baseURL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify(orderData),\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getExelFile(tableData:any) {\r\n    try {\r\n      const response = await fetch(this.baseURL +'/createExele', {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({orderData: tableData}),\r\n      });\r\n      if (response.status === 401) {\r\n        return 401;\r\n      }\r\n      if (response.status === 200) {\r\n        const blob = await response.blob();\r\n        const downloadUrl = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = downloadUrl;\r\n        link.download = 'export.xlsx';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        link.remove();\r\n    }\r\n    } catch (error) {\r\n      alert(error);\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nexport default new OrderAPI();\r\n","import { CSSProperties, FunctionComponent, useEffect } from \"react\";\r\nimport { Row, Col, Button, Spin } from \"antd\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomDatePicker from \"../CustomDatePicker\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport AddButton from \"../buttons/AddButton\";\r\nimport RawMaterialItem from \"../RawMaterialItem/RawMaterialItem\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport clientsAPI from \"../../backendAPI/clientsAPI\";\r\nimport { useGenerateOptionCascaderClient, useGenerateOptionCascaderPrice, useGenerateOptionCascaderRawMaterials } from \"../../utils/generateOptionCascader\";\r\nimport priceAPI from \"../../backendAPI/priceAPI\";\r\nimport { CascaderTypes } from \"../../types/customCascaderTypes\";\r\nimport { datapickerTypes } from \"../../types/dataPickerTypes\";\r\nimport rawMaterialAPI from \"../../backendAPI/rawMaterialAPI\";\r\nimport OrderAPI from \"../../backendAPI/OrderAPI\";\r\n\r\ninterface OrderCreationCNProps {\r\n\r\n}\r\n\r\n\r\nconst width: CSSProperties = {\r\n  minWidth: 196\r\n};\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\n\r\nconst OrderCreationCN: FunctionComponent<OrderCreationCNProps> = () => {\r\n  const history = useHistory();\r\n  const {\r\n    isContentOnRight: isOnRight,\r\n    isNextBtnDisabled,\r\n    client,\r\n    price,\r\n    date,\r\n    rawMaterialList,\r\n    isFetch\r\n  } = useTypedSelector(state => state.orderCreation);\r\n\r\n  const {\r\n    setOnRight,\r\n    setOnLeft,\r\n    getClients,\r\n    getPriceNames,\r\n    setIsButtomUndisabled,\r\n    setIsButtomDisabled,\r\n    getRawMaterials,\r\n    removeClientOrderCreation,\r\n    removePriceOrderCreation,\r\n    clearDateOrderCreation,\r\n    toggleFetchOrderCreation,\r\n    clearRawMaterialsListOrderCreation\r\n  } = useActions();\r\n\r\n  const clearOrderCreationStore = () => {\r\n    removeClientOrderCreation();\r\n    removePriceOrderCreation();\r\n    clearDateOrderCreation();\r\n    toggleFetchOrderCreation(false);\r\n  };\r\n\r\n  const {\r\n    backBackgroundBack,\r\n    backBackgroundNext,\r\n    btnColorBack,\r\n    btnColorNext,\r\n    generalBackground,\r\n    generalColor,\r\n  } = useTypedSelector(state => state.options);\r\n\r\n  const handleGetClients = async () => {\r\n    const data = await clientsAPI.getClients();\r\n    if (data === 401) {\r\n      return history.goBack();\r\n    }\r\n    getClients(data);\r\n  };\r\n\r\n  const handleGetPriceNames = async () => {\r\n    const data = await priceAPI.getPriceNames();\r\n    if (data === 401) {\r\n      return history.goBack();\r\n    }\r\n    getPriceNames(data);\r\n  };\r\n\r\n  const handleGetRawMaterials = async () => {\r\n    const materials = await rawMaterialAPI.getRawMaterials();\r\n    if (materials === 401) {\r\n      return history.goBack();\r\n    }\r\n    getRawMaterials(materials);\r\n  };\r\n\r\n  const createOrderHandle = async () => {\r\n    toggleFetchOrderCreation(true);\r\n    const normalazeData = OrderAPI.createOrderAdapter({ rawMaterialList, client, price, date });\r\n    const orderResponse = await OrderAPI.createOrder(normalazeData);\r\n    clearRawMaterialsListOrderCreation();\r\n    toggleFetchOrderCreation(false);\r\n    if (orderResponse.message) {\r\n      clearRawMaterialsListOrderCreation();\r\n      alert(orderResponse.message);\r\n      return (history.goBack());\r\n    }\r\n  };\r\n\r\n  useEffect(function () {\r\n    toggleFetchOrderCreation(true);\r\n    Promise.all([handleGetClients(), handleGetPriceNames(), handleGetRawMaterials()])\r\n      .finally(() => {\r\n        toggleFetchOrderCreation(false);\r\n      });\r\n\r\n    return () => {\r\n      setOnLeft();\r\n      setIsButtomDisabled();\r\n      clearOrderCreationStore();\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(function () {\r\n\r\n    isOnRight && rawMaterialList.some(material => {\r\n      return material.name;\r\n    })\r\n      ? setIsButtomUndisabled()\r\n      : setIsButtomDisabled();\r\n\r\n  }, [isOnRight, rawMaterialList]);\r\n\r\n\r\n\r\n  useEffect(function () {\r\n\r\n    client && price && date ? setIsButtomUndisabled() : setIsButtomDisabled();\r\n\r\n  }, [client, price, date]);\r\n\r\n  const rawMaterialsNames = useGenerateOptionCascaderRawMaterials();\r\n\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.orderCreation} />\r\n      <div\r\n        style={\r\n          {\r\n            backgroundColor: generateCSSColor(generalBackground),\r\n            color: generateCSSColor(generalColor)\r\n          }}\r\n        className={isOnRight ? \"transform-translate order-creation\" : 'order-creation'}\r\n      >\r\n        <section\r\n          className=\"order-creation__section\"\r\n        >\r\n          <Spin spinning={isFetch} tip=\"Loading...\">\r\n            <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n\r\n              <Col span={24} className=\"order-creation__item\">\r\n                <CustomCascader\r\n                  index={0}\r\n                  defaultValue={client?.name || ''}\r\n                  options={useGenerateOptionCascaderClient()}\r\n                  typeCascader={CascaderTypes.SET_CLIENT_ORDER_CREATION}\r\n                />\r\n              </Col>\r\n\r\n              <Col span={24} className=\"order-creation__item\">\r\n                <CustomCascader\r\n                  index={0}\r\n                  defaultValue={price?.name || ''}\r\n                  options={useGenerateOptionCascaderPrice()}\r\n                  typeCascader={CascaderTypes.SET_PRICE_ORDER_CREATION}\r\n\r\n                />\r\n              </Col>\r\n\r\n              <Col span={24} className=\"order-creation__item\">\r\n                <CustomDatePicker\r\n                  props={{\r\n                    width: width,\r\n                    type: datapickerTypes.ORDER_CREATION\r\n                  }}\r\n                />\r\n              </Col>\r\n\r\n            </Row>\r\n          </Spin>\r\n        </section>\r\n\r\n        <section className=\"order-creation__section order-creation__section_j-c-center\">\r\n          <Spin spinning={isFetch} tip=\"Loading...\">\r\n            {rawMaterialList.map((rawMaterial, index: number) => {\r\n              return <RawMaterialItem key={index} index={index} options={rawMaterialsNames} />;\r\n            })}\r\n          </Spin>\r\n\r\n            <AddButton />\r\n        </section>\r\n\r\n      </div>\r\n      <Footer >\r\n\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={routesEnum.ORDER_MANAGER} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{\r\n                ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundBack),\r\n                color: generateCSSColor(btnColorBack)\r\n              }}\r\n            >\r\n              {customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{\r\n                ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundNext),\r\n                color: generateCSSColor(btnColorNext),\r\n                opacity: isNextBtnDisabled ? 0.5 : 1\r\n              }}\r\n              onClick={isOnRight ? createOrderHandle : setOnRight}\r\n              disabled={isNextBtnDisabled}\r\n            >\r\n              {customButtonsStyleType.next}\r\n            </Button>\r\n          </div>\r\n\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderCreationCN;","import { Col, DatePicker, Row } from \"antd\";\r\nimport { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useStore } from \"react-redux\";\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\ninterface CustomRangePickerProps {\r\n  \r\n}\r\n\r\nconst CustomRangePicker: FunctionComponent<CustomRangePickerProps> = () => {\r\n  const {selectDateStatrVO, selectDateEndVO} = useActions();\r\n  const {selectedDateStart,selectedDateEnd} = useTypedSelector(state=>state.viewOrder);\r\n  const [endOpen,setEndOpen] = useState(false);\r\n  useEffect(function () {\r\n    return () => {\r\n      selectDateStatrVO(null);\r\n      selectDateEndVO(null);\r\n    };\r\n  }, []);\r\n\r\n  const disabledStartDate = (startValue: any) => {\r\n    if (!startValue || !selectedDateEnd) {\r\n      return false;\r\n    }\r\n    return startValue.valueOf() > selectedDateEnd.valueOf();\r\n  };\r\n\r\n  const disabledEndDate = (endValue: any)=> {\r\n    if (!endValue || !selectedDateStart) {\r\n      return false;\r\n    }\r\n    return endValue.valueOf() <= selectedDateStart.valueOf();\r\n  };\r\n\r\n\r\n  const handleStartOpenChange = (open: any) => {\r\n    if (!open) {\r\n      setEndOpen( true);\r\n    }\r\n  };\r\n\r\n  const handleEndOpenChange = (open: boolean ) => {\r\n    setEndOpen( open);\r\n  };\r\n\r\n\r\n\r\n  return ( \r\n    <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n    \r\n    <Col span={24} className=\"order-creation__item\">\r\n      <DatePicker\r\n        disabledDate={disabledStartDate}\r\n        value={selectedDateStart as any}\r\n        style={{ maxWidth: 300 }}\r\n        onChange={(dates, dateStrings) => {\r\n          console.log(dates, dateStrings);\r\n          if (dates) {\r\n            return selectDateStatrVO(dates as unknown as Date);\r\n          }\r\n          selectDateStatrVO(null);\r\n        }}\r\n        onOpenChange={handleStartOpenChange}\r\n        placeholder='начало'\r\n      />\r\n    </Col>\r\n\r\n    <Col span={24} className=\"order-creation__item\">\r\n      <DatePicker\r\n        disabledDate={disabledEndDate}\r\n        style={{ maxWidth: 300 }}\r\n        onChange={(dates, dateStrings) => {\r\n          console.log(typeof dateStrings);\r\n          if (dates) {\r\n            return selectDateEndVO(dates as unknown as Date);\r\n          }\r\n          selectDateEndVO(null);\r\n        }}\r\n        placeholder='конец'\r\n        open={endOpen}\r\n        onOpenChange={handleEndOpenChange}\r\n\r\n      />\r\n    </Col>\r\n  </Row>\r\n\r\n  );\r\n};\r\n\r\nexport default CustomRangePicker;","import { FunctionComponent } from \"react\";\r\nimport { Row, Col } from 'antd';\r\n\r\ninterface ClientViewProps {\r\n  name: string,\r\n  sum: number\r\n}\r\n\r\nconst ClientView: FunctionComponent<ClientViewProps> = ({name, sum}) => {\r\n  return ( \r\n<Row gutter={16} >\r\n      <Col className=\"gutter-row\" span={24-8} >\r\n        <div className=\"client-view__bolder\">{name}</div>\r\n      </Col>\r\n      <Col className=\"gutter-row\" span={8} >\r\n        <div className=\"client-view__bolder\">{sum.toString() + ' руб'}</div>\r\n      </Col>\r\n  </Row>\r\n  );\r\n};\r\n\r\nexport default ClientView;","import { FunctionComponent } from \"react\";\r\nimport { Table } from 'antd';\r\nimport { IMaterialList } from \"../types/dataColumn\";\r\nimport { ColumnsType } from 'antd/es/table';\r\n\r\ninterface CustomTableItemProps {\r\n  showHeader: boolean\r\n  materialList: IMaterialList[]\r\n}\r\n\r\nconst addKG = (amount: number, unitsId: number): string => {\r\n  const unitName =  unitsId===1 ? ' кг' : ' шт';\r\n  if (amount === null) {\r\n    amount = 0;\r\n  }\r\n  return amount.toString() + unitName;\r\n};\r\nconst addRub = (amount: number): string => {\r\n  if (amount === null) {\r\n    amount = 0;\r\n  }\r\n  return amount.toString() + ' руб.';\r\n};\r\n\r\ninterface INewMaterialList {\r\n  rawMaterial: string,\r\n  amount: string,\r\n  price: string,\r\n  priceByOne: number,\r\n\r\n}\r\nconst columns: ColumnsType<INewMaterialList> = [\r\n  {\r\n    title: 'Сырье',\r\n    dataIndex: 'rawMaterial',\r\n    key: 'rawMaterial',\r\n    width: 110,\r\n    fixed: 'left',\r\n  },\r\n  {\r\n    title: 'Кол-во',\r\n    dataIndex: 'amount',\r\n    key: 'amount',\r\n  },\r\n  {\r\n    title: 'Цена за ед.',\r\n    dataIndex: 'priceByOne',\r\n    key: 'priceByOne',\r\n    width: 100,\r\n\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    dataIndex: 'price',\r\n    key: 'price',\r\n    width: 100,\r\n\r\n  },\r\n\r\n];\r\n\r\nconst formateList = (materialList: IMaterialList[]): INewMaterialList[] => {\r\n  return materialList.map((item) => ({\r\n    ...item,\r\n    amount: addKG(item.amount, item.units),\r\n    price: addRub(item.price),\r\n    key: item.rawMaterialId\r\n  }));\r\n};\r\n\r\nconst CustomTableItem: FunctionComponent<CustomTableItemProps> = ({ showHeader, materialList }: CustomTableItemProps) => {\r\n\r\n\r\n  return (\r\n    <section style={{ backgroundColor: \"white\" }}>\r\n\r\n      <Table\r\n        dataSource={formateList(materialList)}\r\n        columns={columns}\r\n        bordered={true}\r\n        showHeader={showHeader}\r\n        pagination={false}\r\n        scroll={{ x: 400 }}\r\n        tableLayout='fixed'\r\n        onRow={(record, rowIndex) => {\r\n          return {\r\n            onDoubleClick: event => {\r\n              console.log(record, 'record', rowIndex);\r\n            }, \r\n          };\r\n        }}\r\n      />\r\n\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomTableItem;","import { FunctionComponent } from \"react\";\r\nimport { Row, Col } from 'antd';\r\n\r\ninterface OrderViewPanelProps {\r\n  sum: number,\r\n  date: string | DateConstructor,\r\n  id: number | null\r\n}\r\n\r\nconst OrderViewPanel: FunctionComponent<OrderViewPanelProps> = ({ sum, date, id }) => {\r\n  if (sum === null) {\r\n    sum = 0;\r\n  }\r\n  return (\r\n    <Row gutter={16} >\r\n      <Col className=\"gutter-row\" span={24 - 8} >\r\n        <div >{date}</div>\r\n      </Col>\r\n\r\n      <Col className=\"gutter-row\" span={8} >\r\n        <div >{sum.toString() + ' руб'}</div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default OrderViewPanel;","import { CSSProperties, FunctionComponent } from \"react\";\r\nimport { Collapse } from 'antd';\r\nimport ClientView from \"./ClientView\";\r\nimport { IOrder } from \"../types/dataColumn\";\r\nimport CustomTableItem from \"./CustomTableItem\";\r\nimport '../custom-styles-for-antd/styles.css';\r\nimport OrderViewPanel from \"./OrderViewPanel\";\r\ninterface HeaderRowOfTableProps {\r\n  name: string,\r\n  sum: number,\r\n  orders: IOrder[]\r\n}\r\nconst { Panel } = Collapse;\r\nconst width: CSSProperties = {\r\n  width: '100vw'\r\n};\r\n\r\nconst HeaderRowOfTable: FunctionComponent<HeaderRowOfTableProps> = ({ name, sum, orders }: HeaderRowOfTableProps) => {\r\n  return (\r\n    <Collapse accordion expandIconPosition='right' style={width}>\r\n\r\n      <Panel header={<ClientView name={name} sum={sum} />} key=\"1\" >\r\n        {orders.map(order => {\r\n          return (\r\n            <Collapse accordion expandIconPosition='right' style={width} key={order.orderId}>\r\n              <Panel header={<OrderViewPanel sum={order.price} date={order.date} id={order.orderId} />} key=\"1\" >\r\n                <CustomTableItem showHeader={true} materialList={order.materialList} />\r\n\r\n              </Panel>\r\n            </Collapse>\r\n\r\n          );\r\n        })}\r\n      </Panel>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default HeaderRowOfTable;","import { Alert } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport HeaderRowOfTable from \"./HeaderRowOfTable\";\r\n\r\ninterface TableProps {\r\n\r\n}\r\n\r\n\r\nconst Table: FunctionComponent<TableProps> = () => {\r\n  const {tableData} = useTypedSelector(state=>state.viewOrder);\r\n  return (\r\n\r\n  <div >\r\n    {\r\n      tableData.length \r\n      ? tableData.map(client => <HeaderRowOfTable name={client.name} sum={client.sum} orders={client.orders}  key={client.name} />)\r\n      : <Alert message=\"Нечего не найдено\" type=\"info\" />\r\n\r\n    }\r\n  </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Table;","import { Button, Col, Row, Spin } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport clientsAPI from \"../../backendAPI/clientsAPI\";\r\nimport OrderAPI from \"../../backendAPI/OrderAPI\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { CascaderTypes } from \"../../types/customCascaderTypes\";\r\nimport { IDatacolumn } from \"../../types/dataColumn\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport { useGenerateOptionCascaderClient } from \"../../utils/generateOptionCascader\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomRangePicker from \"../CustomRangePicker\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\nimport Table from \"../Table\";\r\n\r\ninterface OrderViewCNProps {\r\n\r\n}\r\n\r\nconst width: CSSProperties = {\r\n  minWidth: 196\r\n};\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\nconst OrderViewCN: FunctionComponent<OrderViewCNProps> = () => {\r\n  const { setOnLeftOrderViev, setOnRightOrderViev, getClients, selectDateStatrVO, selectDateEndVO, selectClientVO, setDisabledNextBtn, setUnaisabledNextBtn, setTableDataVO, toggleFetchVO } = useActions();\r\n  const { isDisabled, isFetch, isOnRight, selectedClient, selectedDateStart, selectedDateEnd, tableData } = useTypedSelector(state => state.viewOrder);\r\n  const {\r\n    backBackgroundBack,\r\n    backBackgroundNext,\r\n    btnColorBack,\r\n    btnColorNext,\r\n    generalBackground,\r\n    generalColor,\r\n  } = useTypedSelector(state => state.options);\r\n  const history = useHistory();\r\n\r\n\r\n  const handleGetClients = async () => {\r\n    try {\r\n      toggleFetchVO(true);\r\n      const data = await clientsAPI.getClients();\r\n      if (data.message) {\r\n        toggleFetchVO(false);\r\n        history.goBack();\r\n      }\r\n      if (data === 401) {\r\n        toggleFetchVO(false);\r\n        return history.goBack();\r\n      }\r\n      getClients(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally{\r\n      toggleFetchVO(false);\r\n    }\r\n  };\r\n\r\n  const showOrdersData = async () => {\r\n    try {\r\n      toggleFetchVO(true);\r\n      const ordersData = await OrderAPI.getOrdersByClient(selectedClient?.id as number, selectedDateStart, selectedDateEnd);\r\n      if (ordersData === 401) {\r\n        toggleFetchVO(false);\r\n        return history.goBack();\r\n      }\r\n      setTableDataVO(ordersData as IDatacolumn[]);\r\n      setOnRightOrderViev();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally{\r\n      toggleFetchVO(false);\r\n    }\r\n  };\r\n\r\n  const handleGetAllClients = async () => {\r\n    try {\r\n      toggleFetchVO(true);\r\n      const ordersData = await OrderAPI.getOrders(selectedDateStart, selectedDateEnd);\r\n      if (ordersData === 401) {\r\n        toggleFetchVO(false);\r\n        return history.goBack();\r\n      }\r\n      setTableDataVO(ordersData as IDatacolumn[]);\r\n      setOnRightOrderViev();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally{\r\n      toggleFetchVO(false);\r\n    }\r\n    \r\n\r\n  };\r\n  const getExelFile = async()=>{\r\n    const ordersData = await OrderAPI.getExelFile(tableData);\r\n    \r\n  };\r\n\r\n\r\n  useEffect(function () {\r\n    selectedClient ? setUnaisabledNextBtn() : setDisabledNextBtn();\r\n  }, [selectedClient]);\r\n\r\n  useEffect(function () {\r\n    handleGetClients();\r\n    return () => {\r\n      selectClientVO(null);\r\n      setOnLeftOrderViev();\r\n      selectDateStatrVO(null);\r\n      selectDateEndVO(null);\r\n      setTableDataVO([]);\r\n      toggleFetchVO(false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.listOrder} />\r\n      <div\r\n        style={\r\n          {\r\n            backgroundColor: generateCSSColor(generalBackground),\r\n            color: generateCSSColor(generalColor)\r\n          }\r\n        }\r\n        className={isOnRight ? \"transform-translate order-creation\" : 'order-creation'}>\r\n        <section\r\n          className=\"order-creation__section\"\r\n        >\r\n          <Spin spinning={isFetch} tip=\"Loading...\">\r\n\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomCascader\r\n                defaultValue={selectedClient ? selectedClient.name : ''}\r\n                options={useGenerateOptionCascaderClient()}\r\n                typeCascader={CascaderTypes.SET_ORDER_VIEW}\r\n              />\r\n            </Col>\r\n\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomRangePicker />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\" className=\"order-view__general-list-row\">\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <Button\r\n                shape={shape}\r\n                style={{ ...style, ...width }}\r\n                type={type}\r\n                onClick={handleGetAllClients}\r\n              >\r\n                Общий список\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          </Spin>\r\n        </section>\r\n\r\n\r\n        <section\r\n          className=\"order-creation__section order-creation__section_j-c-center\"\r\n        >\r\n          <Table />\r\n        </section>\r\n\r\n      </div>\r\n      <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={isOnRight ? routesEnum.ORDER_VIEW : routesEnum.ORDER_MANAGER} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{\r\n                ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundBack),\r\n                color: generateCSSColor(btnColorBack)\r\n              }}\r\n              onClick={isOnRight ? setOnLeftOrderViev : undefined}\r\n            >\r\n              {isOnRight ? customButtonsStyleType.back : customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n\r\n          {!isOnRight\r\n            ? <div className=\"order-creation__navlink\">\r\n              <Button\r\n                block={block}\r\n                type={type}\r\n                shape={shape}\r\n                style={{\r\n                  ...style,\r\n                  backgroundColor: generateCSSColor(backBackgroundNext),\r\n                  color: generateCSSColor(btnColorNext),\r\n                  opacity: isDisabled ? 0.5 : 1\r\n                }}\r\n\r\n                disabled={isDisabled}\r\n                onClick={showOrdersData}\r\n              >\r\n                {customButtonsStyleType.show}\r\n              </Button>\r\n            </div>\r\n            : \r\n            <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{\r\n                ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundNext),\r\n                color: generateCSSColor(btnColorNext),\r\n              }}\r\n\r\n              onClick={getExelFile}\r\n            >\r\n              {customButtonsStyleType.print}\r\n            </Button>\r\n          </div>}\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderViewCN;","import { Button } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport Header from \"../Header/Header\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { routesEnum } from '../../types/routes';\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\n\r\ninterface AdminCNProps {\r\n\r\n}\r\nconst { block, shape, type, style } = customStyleButton;\r\n\r\nconst AdminCN: FunctionComponent<AdminCNProps> = () => {\r\n\r\n  const { id, role } = useTypedSelector(state => state.user);\r\n\r\n  const { logout } = useActions();\r\n\r\n  const handleClick = () => {\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!id && <Redirect to={routesEnum.LOGIN} />}\r\n\r\n      <Header buttonName={customButtonsStyleType.admin} />\r\n\r\n      <section className=\"admin\">\r\n\r\n        {role === 'admin' &&\r\n          <NavLink to={routesEnum.ADMIN_CLIENTS}>\r\n            <Button block={block} shape={shape} type={type} style={style} className=\"admin__button\">\r\n              Редактировать БД клиентов\r\n            </Button>\r\n          </NavLink>\r\n        }\r\n\r\n        {role === 'admin' &&\r\n          <NavLink to={routesEnum.ADMIN_PRICE}>\r\n            <Button block={block} shape={shape} type={type} style={style} className=\"admin__button\">\r\n              Редактировать БД прайса\r\n            </Button>\r\n          </NavLink>\r\n        }\r\n\r\n        {role === 'admin' &&\r\n          <NavLink to={routesEnum.ADMIN_RAW_MATERIALS}>\r\n            <Button block={block} shape={shape} type={type} style={style} className=\"admin__button\">\r\n              Редактировать БД сырья\r\n            </Button>\r\n          </NavLink>\r\n        }\r\n\r\n        <Button\r\n          block={block}\r\n          shape={shape}\r\n          type={type}\r\n          style={style}\r\n          className=\"admin__button\"\r\n          onClick={handleClick}\r\n        >\r\n          Сменить пользователя\r\n        </Button>\r\n\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminCN;","import { Col, InputNumber, Row, Slider } from \"antd\";\r\nimport React, { FunctionComponent, useEffect, useRef } from \"react\";\r\n\r\ninterface ColorSlidersProps {\r\n  red: number\r\n  green: number\r\n  blue: number\r\n  callback: any\r\n}\r\n\r\nconst ColorSliders: FunctionComponent<ColorSlidersProps> = ({ blue, green, red, callback }: ColorSlidersProps) => {\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={16}>\r\n          <Slider\r\n            className=\"slider_red\"\r\n            min={0}\r\n            max={255}\r\n            onChange={n => callback(n, green, blue)}\r\n            value={typeof red === 'number' ? red : 0}\r\n            handleStyle={{touchAction:'none'}}\r\n            trackStyle={{touchAction:'none'}}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={255}\r\n            style={{ margin: '0 5px' }}\r\n            value={typeof red === 'number' ? red : 0}\r\n            onChange={n => callback(n, green, blue)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span={16}>\r\n          <Slider\r\n            className=\"slider_green\"\r\n            min={0}\r\n            max={255}\r\n            onChange={n => callback(red, n, blue)}\r\n            value={typeof green === 'number' ? green : 0}\r\n            style={{touchAction:'none'}}\r\n\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={255}\r\n            style={{ margin: '0 5px' }}\r\n            value={typeof green === 'number' ? green : 0}\r\n            onChange={n => callback(red, n, blue)}\r\n            \r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span={16}>\r\n          <Slider\r\n            min={0}\r\n            max={255}\r\n            onChange={n => callback(red, green, n)}\r\n            value={typeof blue === 'number' ? blue : 0}\r\n            style={{touchAction:'none'}}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={255}\r\n            style={{ margin: '0 5px' }}\r\n            value={typeof blue === 'number' ? blue : 0}\r\n            onChange={n => callback(red, green, n)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default ColorSliders;","import { Button, Divider, Radio} from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { customStyleButton} from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport ColorSliders from \"../ColorSliders\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface OptionsProps {\r\n  \r\n}\r\n\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\nconst Options: FunctionComponent<OptionsProps> = () => {\r\n  const {\r\n    backBackgroundBack,\r\n    backBackgroundBigBtn,\r\n    backBackgroundFooter,\r\n    backBackgroundHeader,\r\n    backBackgroundNext,\r\n    btnColorBack,\r\n    btnColorBig,\r\n    btnColorNext,\r\n    darkTheme,\r\n    default: defaultT,\r\n    generalBackground,\r\n    generalColor,\r\n    lightTheme\r\n  } = useTypedSelector(state=>state.options);\r\n\r\n  const {\r\n    installColorBack,\r\n    installColorBigBtn,\r\n    installColorGeneral,\r\n    installColorNext,\r\n    setBackBackGround,\r\n    setDefault,\r\n    setNextBackGround,\r\n    setFooterBackGround,\r\n    setDarkTheme,\r\n    setLightTheme,\r\n    setBigBtnBackGround,\r\n    setGeneralBackGround,\r\n    setHeaderBackGround,\r\n\r\n  } = useActions();\r\n\r\n  const setDefaultValueRadioBtn=()=>{\r\n    if (defaultT.isSelected) {\r\n      return 'default';\r\n    }\r\n    if (lightTheme.isSelected) {\r\n      return 'light';\r\n    }\r\n    if (darkTheme.isSelected) {\r\n      return'dark';\r\n    }\r\n  };\r\n\r\n  const saveToLocaleStorage = ()=>{\r\n    localStorage.setItem('options', JSON.stringify(\r\n      {\r\n        backBackgroundBack,\r\n        backBackgroundBigBtn,\r\n        backBackgroundFooter,\r\n        backBackgroundHeader,\r\n        backBackgroundNext,\r\n        btnColorBack,\r\n        btnColorBig,\r\n        btnColorNext,\r\n        generalBackground,\r\n        generalColor,\r\n      }\r\n    ));\r\n  };\r\n\r\n    return ( \r\n  <>\r\n        <Header buttonName={customButtonsStyleType.options} />\r\n        <section className=\"options\"\r\n                style={{\r\n                  color: generateCSSColor(generalColor)\r\n                  }}\r\n        >\r\n\r\n        <Divider                 style={{\r\n                  color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет фона</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={generalBackground.red} \r\n            green={generalBackground.green} \r\n            blue={generalBackground.blue} \r\n            callback={setGeneralBackGround}  />\r\n          </div>\r\n\r\n          <Divider         \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет текста фона</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={generalColor.red} \r\n            green={generalColor.green} \r\n            blue={generalColor.blue} \r\n            callback={installColorGeneral}  />\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет кнопки назад</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundBack.red} \r\n            green={backBackgroundBack.green} \r\n            blue={backBackgroundBack.blue} \r\n            callback={setBackBackGround}  />\r\n\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет текста кнопки назад</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={btnColorBack.red} \r\n            green={btnColorBack.green} \r\n            blue={btnColorBack.blue} \r\n            callback={installColorBack}  />\r\n\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет кнопки далее</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundNext.red} \r\n            green={backBackgroundNext.green} \r\n            blue={backBackgroundNext.blue}  \r\n            callback={setNextBackGround}  />\r\n\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет кнопки далее</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={btnColorNext.red} \r\n            green={btnColorNext.green} \r\n            blue={btnColorNext.blue}  \r\n            callback={installColorNext}  />\r\n\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет хедера</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundHeader.red} \r\n            green={backBackgroundHeader.green} \r\n            blue={backBackgroundHeader.blue}  \r\n            callback={setHeaderBackGround}  />\r\n\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет футера</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundFooter.red} \r\n            green={backBackgroundFooter.green} \r\n            blue={backBackgroundFooter.blue}  \r\n            callback={setFooterBackGround}  />\r\n\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет большой кнопки</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundBigBtn.red} \r\n            green={backBackgroundBigBtn.green} \r\n            blue={backBackgroundBigBtn.blue} \r\n            callback={setBigBtnBackGround}  />\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет текста большой кнопки</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={btnColorBig.red}\r\n            green={btnColorBig.green}\r\n            blue={btnColorBig.blue}\r\n            callback={installColorBigBtn}  />\r\n          </div>\r\n\r\n          <Divider\r\n            orientation=\"left\"\r\n            style={{\r\n              color: generateCSSColor(generalColor)\r\n            }}\r\n          >\r\n            Темы по умолчанию\r\n          </Divider>\r\n          \r\n          <Radio.Group \r\n            defaultValue={setDefaultValueRadioBtn()}\r\n            buttonStyle=\"solid\" \r\n            className=\"options__radio-group\"\r\n          >\r\n            <Radio.Button \r\n              value=\"default\"\r\n              onChange={setDefault}\r\n            >\r\n              Default\r\n            </Radio.Button>\r\n            <Radio.Button \r\n              value=\"light\"\r\n              onChange={setLightTheme}\r\n            >\r\n              Light\r\n            </Radio.Button>\r\n            <Radio.Button \r\n              value=\"dark\"\r\n              onChange={setDarkTheme}\r\n            >\r\n              Dark\r\n            </Radio.Button>\r\n\r\n          </Radio.Group>\r\n        </section>\r\n        \r\n        <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={routesEnum.ORDER_MANAGER} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundBack), \r\n                color: generateCSSColor(btnColorBack)\r\n              }}\r\n            >\r\n              {customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundNext), \r\n                color: generateCSSColor(btnColorNext)\r\n              }}        \r\n              disabled={false}\r\n              onClick={saveToLocaleStorage}\r\n            >\r\n              {customButtonsStyleType.save}\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Footer>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Options;","import { FunctionComponent } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface GraphProps {\r\n  \r\n}\r\n\r\nconst Graph: FunctionComponent<GraphProps> = () => {\r\n\r\n  const {id} = useTypedSelector(state => state.user);\r\n\r\n  return ( \r\n  <>\r\n      {!id&&<Redirect to={routesEnum.LOGIN}/>}\r\n\r\n\r\n    <Header buttonName={customButtonsStyleType.graph} />\r\n    <div className=\"admin\">\r\n      Tут будет графики или диаграммы по БД\r\n    </div>\r\n    </> \r\n    );\r\n};\r\n\r\nexport default Graph;","import { Input, Form, Select } from \"antd\";\r\nimport React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\n\r\ninterface FormAddMaterialProps {\r\n\r\n}\r\n\r\nconst FormAddMaterial: FunctionComponent<FormAddMaterialProps> = () => {\r\n  const { setMaterialName, setMaterialUnit } = useActions();\r\n  const { name, units: unit } = useTypedSelector(state => state.rawMaterials.creationFields);\r\n  const { units } = useTypedSelector(state => state.rawMaterials);\r\n\r\n  const handleChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMaterialName(e.target.value);\r\n  };\r\n\r\n  const handleChangeUnit = (value: any) => {\r\n    console.log(value);\r\n    setMaterialUnit(value);\r\n  };\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ name, units:unit });\r\n  }, [name, unit]);\r\n\r\n\r\n\r\n  const options = units.map((unit) => {\r\n    return (<Select.Option key={unit.id} value={unit.name}>{unit.name}</Select.Option>);\r\n  });\r\n\r\n  return (\r\n\r\n    <Form form={form}>\r\n      <Form.Item name=\"name\" label=\"Название\" rules={[{ required: true, message: 'Поле должно быть заполнено' }]}>\r\n        <Input\r\n          onChange={(e) => handleChangeName(e)}\r\n\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name=\"units\" label=\"Единицы\" rules={[{ required: true, message: 'Поле должно быть заполнено' }]}>\r\n        <Select\r\n          onChange={(value) => handleChangeUnit(value)}\r\n        >\r\n          {options}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormAddMaterial;","import { Input, Form, Select } from \"antd\";\r\nimport React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { rawMaterial } from \"../../../types/editRawMaterialsTypes\";\r\n\r\ninterface FormChangeMaterialProps {\r\n\r\n}\r\n\r\n\r\nconst FormChangeMaterial: FunctionComponent<FormChangeMaterialProps> = () => {\r\n  // const { setMaterialName, setMaterialUnit } = useActions();\r\n  const { materialSelected, units,rawMaterialsList } = useTypedSelector(state => state.rawMaterials);\r\n  const {setChanges} = useActions(); \r\n  const initFormValue = rawMaterialsList.find((material)=>material.id ===materialSelected);\r\n  const [form] = Form.useForm();\r\n\r\n\r\n  const handleChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChanges({...initFormValue as rawMaterial, name:form.getFieldValue(\"name\") ,units:form.getFieldValue('units') });\r\n  };\r\n\r\n  const handleChangeUnit = (value: any) => {\r\n    setChanges({...initFormValue as rawMaterial, name:form.getFieldValue(\"name\") ,units:value});\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({ name:initFormValue?.name, units:initFormValue?.units });\r\n  }, [materialSelected]);\r\n\r\n\r\n\r\n    const options = units.map((unit) => {\r\n      return (<Select.Option key={unit.id} value={unit.name}>{unit.name}</Select.Option>);\r\n    });\r\n  \r\n  return (\r\n\r\n    <Form form={form}>\r\n      <Form.Item name=\"name\" label=\"Название\" rules={[{ required: true, message: 'Поле должно быть заполнено' }]}>\r\n        <Input\r\n          onChange={(e) => handleChangeName(e)}\r\n\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name=\"units\" label=\"Единицы\" rules={[{ required: true, message: 'Поле должно быть заполнено' }]}>\r\n        <Select\r\n          onChange={(value) => handleChangeUnit(value)}\r\n        >\r\n          {options}\r\n        </Select>\r\n      </Form.Item>\r\n\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormChangeMaterial;","import { Input, Form } from \"antd\";\r\nimport { FunctionComponent, useEffect } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\n\r\ninterface FormDeleteMaterialProps {\r\n\r\n}\r\n\r\nconst FormDeleteMaterial: FunctionComponent<FormDeleteMaterialProps> = () => {\r\n  const { readyForDeleteMaterial } = useActions();\r\n  const [form] = Form.useForm();\r\n  const {visible} = useTypedSelector(state=>state.modalWindow);\r\n\r\n  useEffect(() => {\r\n    return ()=> {\r\n      form.setFieldsValue({ delete: '' });\r\n      readyForDeleteMaterial(false);\r\n  };\r\n  }, [visible]);\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Form form={form}>\r\n      <Form.Item name=\"delete\" label=\"Введите УДАЛИТЬ\" rules={[\r\n        {\r\n          validator: (_, value) => {\r\n            if (value === 'УДАЛИТЬ') {\r\n\r\n              readyForDeleteMaterial(true);\r\n              return Promise.resolve();\r\n            }\r\n            readyForDeleteMaterial(false);\r\n            return Promise.reject(new Error('должно быть написано \"УДАЛИТЬ\"'));\r\n          }\r\n          , message: 'должно быть написано \"УДАЛИТЬ\"'\r\n        }\r\n      ]}>\r\n        <Input />\r\n      </Form.Item>\r\n\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormDeleteMaterial;","import { Modal } from \"antd\";\r\nimport { FunctionComponent, ReactNode, useEffect } from \"react\";\r\nimport clientsAPI from \"../../../backendAPI/clientsAPI\";\r\nimport priceAPI from \"../../../backendAPI/priceAPI\";\r\nimport rawMaterialAPI from \"../../../backendAPI/rawMaterialAPI\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { rawMaterial } from \"../../../types/editRawMaterialsTypes\";\r\nimport { TypeMV, TypesofMW } from \"../../../types/ModalWindowTypes/ModalWindowTypes\";\r\nimport { checkAllvaluesIsNotNull } from \"../../../utils/checkAllvaluesIsNotNull\";\r\n\r\ninterface ModlWindowProps {\r\n  children: ReactNode,\r\n  title: string,\r\n  type: TypeMV\r\n}\r\n\r\nconst ModlWindow: FunctionComponent<ModlWindowProps> = ({ children, title, type }) => {\r\n\r\n  const { setVisibleMW, setConfirmLoadingMW, getClients,\r\n    setClientNames, setClientINN, setClientPhone,\r\n    setClientNamesForChange, setClientINNForChange, setClientPhoneForChange,\r\n    getRawMaterials,\r\n    setMaterialName, setMaterialUnit, selectMaterial,\r\n    getPriceNames, setNameForCreation, readyForDeletePrice, selectPriceNames, arrayForChangePrice, readyForChangePrice,\r\n  } = useActions();\r\n  const { confirmLoading, visible } = useTypedSelector(state => state.modalWindow);\r\n  const { name, phone, inn } = useTypedSelector(state => state.clients.formFields);\r\n\r\n  const { name: nameMaterial, units } = useTypedSelector(state => state.rawMaterials.creationFields);\r\n  const { readyForDelete: readyForDeleteMaterial, materialSelected, valuesForChange } = useTypedSelector(state => state.rawMaterials);\r\n\r\n  const { fieldForCreationPrice, redyForDeletePrice, selectedPrice, readyForChange, arrayForChange } = useTypedSelector(state => state.price);\r\n\r\n\r\n  const { name: nameForChange, phone: phoneForChange, inn: innForChange, id } = useTypedSelector(state => state.clients.selectedClientsFields);\r\n  const { readyForDelete } = useTypedSelector(state => state.clients);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      switch (type) {\r\n        case TypesofMW.CLIENT_CREATE:\r\n          if (name) {\r\n            const clients = await clientsAPI.createClient(name, inn, phone);\r\n            if (clients.name === \"error\") {\r\n              alert(clients.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getClients(clients);\r\n            setVisibleMW(false);\r\n            setClientNames('');\r\n            setClientINN(null);\r\n            setClientPhone(null);\r\n          }\r\n          break;\r\n        case TypesofMW.CLIENT_DELETE:\r\n          if (id) {\r\n            const clients = await clientsAPI.deleteClients(id);\r\n            if (clients.name === \"error\") {\r\n              alert(clients.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getClients(clients);\r\n            setVisibleMW(false);\r\n          }\r\n          break;\r\n        case TypesofMW.CLIENT_CHANGE:\r\n          if (nameForChange) {\r\n            console.log(nameForChange, id);\r\n\r\n            const clients = await clientsAPI.editClient(nameForChange, innForChange, phoneForChange as number, id);\r\n            if (clients.name === \"error\") {\r\n              alert(clients.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getClients(clients);\r\n            setVisibleMW(false);\r\n            setClientNamesForChange('');\r\n            setClientINNForChange(null);\r\n            setClientPhoneForChange(null);\r\n          }\r\n          break;\r\n        case TypesofMW.RAW_MATERIALS_CREATE:\r\n          if (nameMaterial && units) {\r\n            const materials = await rawMaterialAPI.createRawMaterials(nameMaterial, units);\r\n            if (materials.name === \"error\") {\r\n              alert(materials.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getRawMaterials(materials);\r\n            setVisibleMW(false);\r\n            setMaterialName('');\r\n            setMaterialUnit(null);\r\n          }\r\n          break;\r\n        case TypesofMW.RAW_MATERIALS_DELETE:\r\n          if (materialSelected) {\r\n            const materials = await rawMaterialAPI.deleteRawMaterials(materialSelected);\r\n            if (materials.name === \"error\") {\r\n              alert(materials.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getRawMaterials(materials);\r\n            setVisibleMW(false);\r\n            selectMaterial(null);\r\n          }\r\n          break;\r\n        case TypesofMW.RAW_MATERIALS_CHANGE:\r\n\r\n          if (valuesForChange) {\r\n            console.log(valuesForChange, 'valuesForChange');\r\n\r\n            const materials = await rawMaterialAPI.changeRawMaterials(valuesForChange as rawMaterial);\r\n            if (materials.name === \"error\") {\r\n              alert(materials.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getRawMaterials(materials);\r\n            setVisibleMW(false);\r\n          }\r\n          break;\r\n        case TypesofMW.PRICE_CREATE:\r\n          if (fieldForCreationPrice) {\r\n            const newPriceNames = await priceAPI.createPrice(fieldForCreationPrice);\r\n            if (newPriceNames.name === \"error\") {\r\n              alert(newPriceNames.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getPriceNames(newPriceNames);\r\n            setVisibleMW(false);\r\n            setNameForCreation('');\r\n          }\r\n          break;\r\n        case TypesofMW.PRICE_DELETE:\r\n          if (selectedPrice) {\r\n            const priceNmaes = await priceAPI.deletePriceName(selectedPrice);\r\n            if (priceNmaes.name === \"error\") {\r\n              alert(priceNmaes.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            getPriceNames(priceNmaes);\r\n            setVisibleMW(false);\r\n            readyForDeletePrice(false);\r\n            selectPriceNames(null);\r\n          }\r\n          break;\r\n        case TypesofMW.PRICE_CHANGE:\r\n          if (arrayForChange) {\r\n            const price = await priceAPI.changePrice(arrayForChange);\r\n            if (price.name === \"error\") {\r\n              alert(price.detail || \"Ошибка\");\r\n              break;\r\n            }\r\n            selectPriceNames(null);\r\n            readyForChangePrice(false);\r\n            setVisibleMW(false);\r\n          }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.log(error, 'ModlWindow');\r\n    }\r\n    finally {\r\n      setConfirmLoadingMW(false);\r\n    }\r\n\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoadingMW(true);\r\n    fetchData();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    switch (type) {\r\n      case TypesofMW.CLIENT_CREATE:\r\n        setClientNames('');\r\n        setClientINN(null);\r\n        setClientPhone(null);\r\n        setVisibleMW(false);\r\n        break;\r\n      case TypesofMW.RAW_MATERIALS_CREATE:\r\n        setMaterialName('');\r\n        setMaterialUnit(null);\r\n        setVisibleMW(false);\r\n        break;\r\n      case TypesofMW.PRICE_CREATE:\r\n        setNameForCreation('');\r\n        setVisibleMW(false);\r\n        break;\r\n        // case TypesofMW.PRICE_CHANGE:\r\n        //   setVisibleMW(false);\r\n\r\n        //   break;\r\n      default:\r\n        setVisibleMW(false);\r\n    }\r\n\r\n  };\r\n\r\n  const setOkButtonProps = () => {\r\n    switch (type) {\r\n      case TypesofMW.CLIENT_CREATE:\r\n        return { disabled: !name };\r\n      case TypesofMW.CLIENT_CHANGE:\r\n        return { disabled: !nameForChange };\r\n      case TypesofMW.CLIENT_DELETE:\r\n        return { disabled: !readyForDelete };\r\n      case TypesofMW.RAW_MATERIALS_CREATE:\r\n        return { disabled: !nameMaterial && !units };\r\n      case TypesofMW.RAW_MATERIALS_DELETE:\r\n        return { disabled: !readyForDeleteMaterial };\r\n      case TypesofMW.PRICE_CREATE:\r\n        return { disabled: !fieldForCreationPrice };\r\n      case TypesofMW.PRICE_DELETE:\r\n        return { disabled: !redyForDeletePrice };\r\n      case TypesofMW.PRICE_CHANGE:\r\n        return { disabled: !readyForChange };\r\n      default:\r\n        return undefined;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    return () => {\r\n\r\n      setVisibleMW(false);\r\n    };\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n\r\n    <Modal\r\n      cancelText='Отмена'\r\n      title={title}\r\n      visible={visible}\r\n      onOk={handleOk}\r\n      confirmLoading={confirmLoading}\r\n      onCancel={handleCancel}\r\n      okButtonProps={setOkButtonProps()}\r\n    >\r\n      {children}\r\n    </Modal>\r\n\r\n  );\r\n};\r\n\r\nexport default ModlWindow;","import { MenuOutlined, UpSquareOutlined } from \"@ant-design/icons\";\r\nimport { Collapse } from \"antd\";\r\nimport { FunctionComponent, ReactNode } from \"react\";\r\n\r\ninterface WrapperButtonsProps {\r\n  buttons: ReactNode\r\n}\r\nconst { Panel } = Collapse;\r\n\r\nconst WrapperButtons: FunctionComponent<WrapperButtonsProps> = ({ buttons }) => {\r\n  return (\r\n\r\n    <Collapse\r\n      accordion\r\n      expandIconPosition='right'\r\n      className=\"client_collapse\"\r\n      ghost={true}\r\n      expandIcon={({ isActive }) => isActive\r\n        ? <UpSquareOutlined style={{ fontSize: '20px' }} />\r\n        : <MenuOutlined style={{ fontSize: '20px' }} />\r\n      }\r\n    >\r\n      <Panel header={''} key=\"1\"\r\n        className=\"client_panel\"\r\n      >\r\n        {buttons}\r\n      </Panel>\r\n\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default WrapperButtons;","import { Table } from 'antd';\r\nimport { CompareFn } from 'antd/lib/table/interface';\r\nimport { FunctionComponent } from 'react';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\n\r\n\r\n\r\ninterface MaterialsTableProps {\r\n  dataTable:Array<any>\r\n}\r\n\r\n\r\nconst columns : any[] = [\r\n  {\r\n    title: 'Название',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    defaultSortOrder: 'descend',\r\n    sorter: (a: { name: number; }, b: { name: number; }) => a.name > b.name,\r\n\r\n  },\r\n  {\r\n    title: 'Единицы измерения',\r\n    dataIndex: 'units',\r\n    key: 'units',\r\n    width: '40%',\r\n  },\r\n\r\n];\r\nconst MaterialsTable: FunctionComponent<MaterialsTableProps> = ({dataTable}) => {\r\n\r\n  const {selectMaterial} = useActions();\r\n  const {materialSelected} = useTypedSelector(state=>state.rawMaterials);\r\n  function onChange( filters: any, sorter: any) {\r\n    console.log('params',  filters, sorter);\r\n  }\r\n\r\n  const dataTableAdapter = dataTable.map((material)=>({...material, key:material.id}));\r\n\r\n  return ( \r\n    <Table \r\n      columns={columns} \r\n      dataSource={dataTableAdapter} \r\n      onChange={onChange} \r\n      pagination={false} \r\n      onRow={(record) => ({\r\n        onClick: () => {\r\n          selectMaterial(record.key);\r\n        }\r\n\r\n      })\r\n    }\r\n    rowSelection={{\r\n      selectedRowKeys:[materialSelected as number]\r\n    }}\r\n    onHeaderRow={(columns, index) => {\r\n      return {\r\n        onClick: () => selectMaterial(null)\r\n      };\r\n    }}\r\n      />\r\n  );\r\n};\r\n\r\nexport default MaterialsTable;","import { Button, Spin } from \"antd\";\r\nimport { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport rawMaterialAPI from \"../../../backendAPI/rawMaterialAPI\";\r\nimport { blackText, customStyleButton, redColor, whiteColor } from \"../../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../../types/buttonTypes\";\r\nimport { TypesofMW } from \"../../../types/ModalWindowTypes/ModalWindowTypes\";\r\nimport { routesEnum } from \"../../../types/routes\";\r\nimport Footer from \"../../Footer/Footer\";\r\nimport Header from \"../../Header/Header\";\r\nimport FormAddMaterial from \"./FormAddMaterial\";\r\nimport FormChangeMaterial from \"./FormChangeMaterial\";\r\nimport FormDeleteMaterial from \"./FormDeleteMaterial\";\r\nimport {TypeMV as TypesMW} from \"../../../types/ModalWindowTypes/ModalWindowTypes\";\r\nimport ModlWindow from \"../ModalWindow/ModalWindow\";\r\nimport WrapperButtons from \"../WrapperButtons\";\r\nimport MaterialsTable from \"./MaterialsTable\";\r\n\r\ninterface EditRawMaterialsProps {\r\n\r\n}\r\n\r\nconst { block, shape, type, style } = customStyleButton;\r\nconst Buttons: FunctionComponent = () => {\r\n  const { materialSelected,isFetch } = useTypedSelector(state => state.rawMaterials);\r\n  const [refreshDisabled, setRefreshDisabled] = useState(false);\r\n  const adapterToButtonDisabled = ():boolean=>{\r\n    if (materialSelected === 0) {\r\n      return !true;\r\n    }\r\n    return !materialSelected;\r\n  };\r\n  const { getRawMaterials, fetchRawMaterials,setVisibleMW, setType } = useActions();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleGetMaterials = async () => {\r\n    try {\r\n      fetchRawMaterials(true);\r\n      setRefreshDisabled(true);\r\n      const data = await rawMaterialAPI.getRawMaterials();\r\n      if (data === 401) {\r\n        fetchRawMaterials(false);\r\n        return history.goBack();\r\n      }\r\n      getRawMaterials(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    finally {\r\n      setRefreshDisabled(false);\r\n      fetchRawMaterials(false);\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={style}\r\n        className=\"admin__button\"\r\n        onClick={() => {\r\n          setType(TypesofMW.RAW_MATERIALS_CREATE);\r\n          setVisibleMW(true);\r\n        }}\r\n      >\r\n        Добавить сырье\r\n      </Button>\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={{ ...style, ...redColor }}\r\n        className=\"admin__button\"\r\n        disabled={ adapterToButtonDisabled() }\r\n        onClick={() => {\r\n          setType(TypesofMW.RAW_MATERIALS_DELETE);\r\n          setVisibleMW(true);\r\n        }}\r\n      >\r\n        Удалить сырье\r\n      </Button>\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={style}\r\n        className=\"admin__button\"\r\n        disabled={ adapterToButtonDisabled() }\r\n        onClick={() => {\r\n          setType(TypesofMW.RAW_MATERIALS_CHANGE);\r\n          setVisibleMW(true);\r\n        }}\r\n      >\r\n        Редактировать сырье\r\n      </Button>\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={style}\r\n        loading={refreshDisabled}\r\n        className=\"admin__button\"\r\n        onClick={() => handleGetMaterials()}\r\n      >\r\n        Обновить таблицу\r\n      </Button>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nconst EditRawMaterials: FunctionComponent<EditRawMaterialsProps> = () => {\r\n  const { rawMaterialsList, isFetch } = useTypedSelector(state => state.rawMaterials);\r\n  const { typeMV } = useTypedSelector(state => state.modalWindow);\r\n\r\n  const { getRawMaterials, setType, getUnits, fetchRawMaterials } = useActions();\r\n  const history = useHistory();\r\n\r\n  const handleGetMaterials = async () => {\r\n    try {\r\n      fetchRawMaterials(true);\r\n      const data = await rawMaterialAPI.getRawMaterialsAndUnits();\r\n      if (data === 401) {\r\n        fetchRawMaterials(false);\r\n        return history.goBack();\r\n      }\r\n      getRawMaterials(data?.rawMaterials);\r\n      getUnits(data?.units);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      fetchRawMaterials(false);\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    setType(TypesofMW.RAW_MATERIALS_CREATE);\r\n    handleGetMaterials();\r\n    return()=>{fetchRawMaterials(false);};\r\n  }, []);\r\n\r\n\r\n  const swichPropsMW = (type: TypesMW):{title: string,children: React.ReactNode} => {\r\n\r\n    let children, title;\r\n\r\n      switch (type) {\r\n        case TypesofMW.RAW_MATERIALS_CREATE:\r\n          title = \"Добавить сырье\";\r\n          children = <FormAddMaterial />;\r\n          return {  title, children };\r\n        case TypesofMW.RAW_MATERIALS_DELETE:\r\n          title = \"Удалить сырье\";\r\n          children = <FormDeleteMaterial />;\r\n          return {  title, children };\r\n        case TypesofMW.RAW_MATERIALS_CHANGE:\r\n          title = \"Редактировать сырье\";\r\n          children = <FormChangeMaterial />;\r\n          return {  title, children };\r\n        default:\r\n          return {  title:'Ошибка', children };\r\n      }\r\n    };\r\n  \r\n    return (\r\n  \r\n      <>\r\n  \r\n        <Header buttonName={customButtonsStyleType.rawMaterials} />\r\n        <ModlWindow\r\n          children={swichPropsMW(typeMV).children}\r\n          title={swichPropsMW(typeMV).title}\r\n          type={typeMV}\r\n        />\r\n        <div className={'order-creation'}>\r\n          <section className=\"order-creation__section\">\r\n            <Spin spinning={isFetch} tip=\"Loading...\">\r\n              <WrapperButtons buttons={<Buttons />} />\r\n              <MaterialsTable dataTable={rawMaterialsList} />\r\n            </Spin>\r\n          </section>\r\n        </div>\r\n  \r\n  \r\n        <Footer >\r\n          <div className=\"order-creation__button-wrapper\">\r\n            <NavLink\r\n              to={true ? routesEnum.ADMIN : routesEnum.ADMIN}\r\n              className=\"order-creation__navlink\"\r\n            >\r\n              <Button\r\n                block={block}\r\n                type={type}\r\n                shape={shape}\r\n                style={{ ...blackText, ...whiteColor, ...style }}\r\n                onClick={undefined}\r\n              >\r\n                {true ? customButtonsStyleType.back : customButtonsStyleType.cancel}\r\n              </Button>\r\n            </NavLink>\r\n            \r\n          </div>\r\n        </Footer>\r\n      </>\r\n    );\r\n\r\n};\r\n\r\nexport default EditRawMaterials;","import { Input, Form } from \"antd\";\r\nimport React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\n\r\ninterface FormAddPriceProps {\r\n\r\n}\r\n\r\nconst FormAddPrice: FunctionComponent<FormAddPriceProps> = () => {\r\n  const {setNameForCreation} = useActions();\r\n  const {fieldForCreationPrice} = useTypedSelector(state=>state.price);\r\n\r\n  const handleChangeName =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    setNameForCreation(e.target.value);\r\n  };\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(()=>{\r\n    form.setFieldsValue({name: fieldForCreationPrice});\r\n    },[fieldForCreationPrice]);\r\n\r\n  return (\r\n\r\n    <Form form={form}>\r\n      <Form.Item name=\"name\" label=\"Название прайса\" rules={[{ required: true }]}>\r\n        <Input \r\n          onChange={(e)=>handleChangeName(e)}\r\n\r\n        />\r\n        </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormAddPrice;","import { Input, Form } from \"antd\";\r\nimport { FunctionComponent, useEffect } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\n\r\ninterface FormDeletePriceProps {\r\n\r\n}\r\n\r\nconst FormDeletePrice: FunctionComponent<FormDeletePriceProps> = () => {\r\n  const { readyForDeletePrice } = useActions();\r\n  const [form] = Form.useForm();\r\n  const {visible} = useTypedSelector(state=>state.modalWindow);\r\n\r\n  useEffect(() => {\r\n    return ()=> {\r\n      form.setFieldsValue({ delete: '' });\r\n      readyForDeletePrice(false);\r\n  };\r\n  }, [visible]);\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Form form={form}>\r\n      <Form.Item name=\"delete\" label=\"Введите УДАЛИТЬ\" rules={[\r\n        {\r\n          validator: (_, value) => {\r\n            if (value === 'УДАЛИТЬ') {\r\n\r\n              readyForDeletePrice(true);\r\n              return Promise.resolve();\r\n            }\r\n            readyForDeletePrice(false);\r\n            return Promise.reject(new Error('должно быть написано \"УДАЛИТЬ\"'));\r\n          }\r\n          , message: 'должно быть написано \"УДАЛИТЬ\"'\r\n        }\r\n      ]}>\r\n        <Input />\r\n      </Form.Item>\r\n\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormDeletePrice;","import { Input, Form } from \"antd\";\r\nimport React, { FunctionComponent, useEffect } from \"react\";\r\nimport priceAPI from \"../../../backendAPI/priceAPI\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { checkAllvaluesIsNotNull } from \"../../../utils/checkAllvaluesIsNotNull\";\r\n\r\ninterface FormChangePriceProps {\r\n\r\n}\r\n\r\n\r\nconst FormChangePrice: FunctionComponent<FormChangePriceProps> = () => {\r\n  const { fetchPriceList, setPriceList, arrayForChangePrice, readyForChangePrice } = useActions();\r\n\r\n  const { selectedPrice, priceNames, priceList,arrayForChange } = useTypedSelector(state => state.price);\r\n\r\n\r\n  const fieldList = priceList.map(materialItem => (\r\n    {\r\n      [materialItem.id]: materialItem.coast\r\n    }\r\n  ));\r\n\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const getPriceByPriceName = async () => {\r\n\r\n    if (selectedPrice) {\r\n      const selectedPriceName = priceNames.find(name => name.nameId === selectedPrice);\r\n      if (selectedPriceName) {\r\n        try {\r\n          fetchPriceList(true);\r\n          const materials = await priceAPI.getPrice(selectedPriceName.name);\r\n          if (materials === 401) {\r\n            fetchPriceList(false);\r\n        }\r\n          setPriceList(materials);\r\n        }\r\n        catch (error) {\r\n          console.log(error, 'getPriceByPriceName');\r\n        }\r\n        finally {\r\n          fetchPriceList(false);\r\n        }\r\n      };\r\n    };\r\n  };\r\n  useEffect(() => {\r\n    return ()=>{fetchPriceList(false);};    \r\n  }, []);\r\n  useEffect(() => {\r\n    getPriceByPriceName();\r\n    return ()=>{readyForChangePrice(false);};    \r\n  }, [selectedPrice]);\r\n\r\n  useEffect(() => {\r\n    fieldList.forEach(field=>form.setFieldsValue(field));\r\n    priceList.forEach(priceItem=>readyForChangePrice(!!priceItem.coast && priceItem.coast>0 ));\r\n    \r\n  }, [priceList]);\r\n\r\n  return (\r\n\r\n    <Form\r\n      form={form}\r\n      layout='vertical'\r\n      labelCol={{ span: 16 }}\r\n      wrapperCol={{ span: 8 }}\r\n      size='small'\r\n      onFieldsChange={(_, allFields) => {\r\n        readyForChangePrice(checkAllvaluesIsNotNull(arrayForChange));\r\n        arrayForChangePrice(allFields.map(field=>({\r\n          coast :  Number.parseInt(field.value),\r\n          id : Number.parseFloat(field.name.toString()),\r\n        })));\r\n\r\n      }}\r\n    >\r\n      {priceList.map(materialItem => <Form.Item\r\n        name={materialItem.id}\r\n        label={materialItem.name}\r\n        key={materialItem.rawMaterialId}\r\n        rules={[\r\n          {required: true, message: \"должно быть заполнено\" },\r\n          {validator: (_, value) => {\r\n            if (value >0) {\r\n\r\n              readyForChangePrice(true);\r\n              return Promise.resolve();\r\n            }\r\n            readyForChangePrice(false);\r\n            return Promise.reject(new Error('должно быть больше 0'));\r\n          }\r\n          , message: 'должно быть больше 0'\r\n          },\r\n        ]}\r\n\r\n      >\r\n        <Input\r\n          type='number'\r\n          addonAfter=\"руб.\"\r\n          addonBefore=\"Стоимость\"\r\n        />\r\n      </Form.Item>\r\n      )}\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormChangePrice;","export function checkAllvaluesIsNotNull(array:Array<{coast:number, id:number}> | null):boolean {\r\n  if (!array) {\r\n    return false;\r\n  }\r\n\r\n  return array.every(item=>item.coast > 0);\r\n\r\n}","import { Table } from 'antd';\r\nimport { FunctionComponent, useState } from 'react';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\n\r\n\r\n\r\ninterface PriceTableProps {\r\n  dataTable:Array<any>\r\n}\r\n\r\n\r\nconst columns:any[] = [\r\n  {\r\n    title: 'Название',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    width: '90%',\r\n    sorter: (a: { name: number; }, b: { name: number; }) => a.name > b.name,\r\n\r\n  },\r\n\r\n];\r\nconst PriceTable: FunctionComponent<PriceTableProps> = ({dataTable}) => {\r\n\r\n  const {selectPriceNames} = useActions();\r\n  const {selectedPrice} = useTypedSelector(state=>state.price);\r\n  function onChange( filters: any, sorter: any) {\r\n    console.log('params',  filters, sorter);\r\n  }\r\n\r\n  const dataTableAdapter = dataTable.map((price)=>({...price, key:price.nameId}));\r\n\r\n  return ( \r\n    <Table \r\n      columns={columns} \r\n      dataSource={dataTableAdapter} \r\n      onChange={onChange} \r\n      pagination={false} \r\n      onRow={(record) => ({\r\n\r\n        onClick: () => \r\n        \r\n        selectPriceNames(record.key)\r\n        \r\n\r\n      })\r\n    }\r\n    rowSelection={{\r\n      // onChange: \r\n      selectedRowKeys:[selectedPrice as number]\r\n    }}\r\n    onHeaderRow={(columns, index) => {\r\n      return {\r\n        onClick: () => selectPriceNames(null)\r\n      };\r\n    }}\r\n      />\r\n  );\r\n};\r\n\r\nexport default PriceTable;","import { Button, Spin } from \"antd\";\r\nimport { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport priceAPI from \"../../../backendAPI/priceAPI\";\r\nimport { blackText, customStyleButton, redColor, whiteColor } from \"../../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../../types/buttonTypes\";\r\nimport { TypesofMW, TypeMV as TypesMW} from \"../../../types/ModalWindowTypes/ModalWindowTypes\";\r\nimport { routesEnum } from \"../../../types/routes\";\r\nimport Header from \"../../Header/Header\";\r\nimport ModlWindow from \"../ModalWindow/ModalWindow\";\r\nimport WrapperButtons from \"../WrapperButtons\";\r\nimport Footer from \"../../Footer/Footer\";\r\nimport FormAddPrice from \"./FormAddPrice\";\r\nimport FormDeletePrice from \"./FormDeletePrice\";\r\nimport FormChangePrice from \"./FormChangePrice\";\r\nimport PriceTable from \"./PriceTable\";\r\n\r\ninterface EditPriceProps {\r\n\r\n}\r\nconst { block, shape, type, style } = customStyleButton;\r\nconst Buttons: FunctionComponent = () => {\r\n    const { selectedPrice } = useTypedSelector(state => state.price);\r\n    const [refreshDisabled, setRefreshDisabled] = useState(false);\r\n    const adapterToButtonDisabled = (): boolean => {\r\n        if (selectedPrice === 0) {\r\n            return !true;\r\n        }\r\n        return !selectedPrice;\r\n    };\r\n    const { getPriceNames } = useActions();\r\n    const history = useHistory();\r\n\r\n\r\n    const handleGetPriceNames = async () => {\r\n        try {\r\n            fetchPriceList(true);\r\n            setRefreshDisabled(true);\r\n            const data = await priceAPI.getPriceNames();\r\n            if (data === 401) {\r\n                fetchPriceList(false);\r\n                return history.goBack();\r\n            }\r\n            getPriceNames(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            setRefreshDisabled(false);\r\n            fetchPriceList(false);\r\n        }\r\n    };\r\n\r\n    const { setVisibleMW, setType, fetchPriceList } = useActions();\r\n\r\n    return (\r\n        <>\r\n\r\n            <Button\r\n                block={block}\r\n                shape={shape}\r\n                type={type}\r\n                style={style}\r\n                className=\"admin__button\"\r\n                onClick={() => {\r\n\r\n                    setType(TypesofMW.PRICE_CREATE);\r\n                    setVisibleMW(true);\r\n                }}\r\n            >\r\n                Добавить новый прайс\r\n            </Button>\r\n            <Button\r\n                block={block}\r\n                shape={shape}\r\n                type={type}\r\n                style={{ ...style, ...redColor }}\r\n                className=\"admin__button\"\r\n                disabled={adapterToButtonDisabled()}\r\n                onClick={() => {\r\n                    setType(TypesofMW.PRICE_DELETE);\r\n                    setVisibleMW(true);\r\n                }}\r\n            >\r\n                Удалить прайс\r\n            </Button>\r\n            <Button\r\n                block={block}\r\n                shape={shape}\r\n                type={type}\r\n                style={style}\r\n                className=\"admin__button\"\r\n                disabled={adapterToButtonDisabled()}\r\n                onClick={() => {\r\n                    setType(TypesofMW.PRICE_CHANGE);\r\n                    setVisibleMW(true);\r\n                }}\r\n            >\r\n                Редактировать прайс\r\n            </Button>\r\n            <Button\r\n                block={block}\r\n                shape={shape}\r\n                type={type}\r\n                style={style}\r\n                loading={refreshDisabled}\r\n                className=\"admin__button\"\r\n                onClick={() => handleGetPriceNames()}\r\n            >\r\n                Обновить прайсы\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst EditPrice: FunctionComponent<EditPriceProps> = () => {\r\n    const { priceNames, isFetchPriceList } = useTypedSelector(state => state.price);\r\n    const { typeMV } = useTypedSelector(state => state.modalWindow);\r\n\r\n    const { getPriceNames, setType,fetchPriceList } = useActions();\r\n\r\n    const history = useHistory();\r\n\r\n    const handleGetPriceNames = async () => {\r\n        try {\r\n            fetchPriceList(true);\r\n            const data = await priceAPI.getPriceNames();\r\n            if (data === 401) {\r\n                fetchPriceList(false);\r\n                return history.goBack();\r\n            }\r\n            getPriceNames(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            fetchPriceList(false);\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        setType(TypesofMW.PRICE_CREATE);\r\n        handleGetPriceNames();\r\n        return ()=>{fetchPriceList(false);};\r\n\r\n    }, []);\r\n\r\n\r\n    const swichPropsMW = (type: TypesMW): { title: string, children: React.ReactNode } => {\r\n\r\n        let children, title;\r\n\r\n        switch (type) {\r\n            case TypesofMW.PRICE_CREATE:\r\n                title = \"Добавить новый прайс\";\r\n                children = <FormAddPrice />;\r\n                return { title, children };\r\n            case TypesofMW.PRICE_DELETE:\r\n                title = \"Удалить прайс\";\r\n                children = <FormDeletePrice />;\r\n                return { title, children };\r\n            case TypesofMW.PRICE_CHANGE:\r\n                title = \"Редактировать прайс\";\r\n                children = <FormChangePrice />;\r\n                return { title, children };\r\n            default:\r\n                return { title: 'Ошибка', children };\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header buttonName={customButtonsStyleType.price} />\r\n            <ModlWindow\r\n                children={swichPropsMW(typeMV).children}\r\n                title={swichPropsMW(typeMV).title}\r\n                type={typeMV}\r\n            />\r\n            <div className={'order-creation'}>\r\n                <section className=\"order-creation__section\">\r\n                <Spin tip=\"Loading...\" spinning={isFetchPriceList}>\r\n                        <WrapperButtons buttons={<Buttons />} />\r\n                        <PriceTable dataTable={priceNames} />\r\n                        </Spin>\r\n                </section>\r\n            </div>\r\n\r\n            <Footer >\r\n                <div className=\"order-creation__button-wrapper\">\r\n                    <NavLink\r\n                        to={true ? routesEnum.ADMIN : routesEnum.ADMIN}\r\n                        className=\"order-creation__navlink\"\r\n                    >\r\n                        <Button\r\n                            block={block}\r\n                            type={type}\r\n                            shape={shape}\r\n                            style={{ ...blackText, ...whiteColor, ...style }}\r\n                            onClick={undefined}\r\n                        >\r\n                            {true ? customButtonsStyleType.back : customButtonsStyleType.cancel}\r\n                        </Button>\r\n                    </NavLink>\r\n                </div>\r\n            </Footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditPrice;","import { Table } from 'antd';\r\nimport { FunctionComponent } from 'react';\r\nimport { useActions } from '../../../hooks/useActions';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\n\r\n\r\n\r\ninterface ClientTableProps {\r\n  dataTable:Array<any>\r\n}\r\n\r\n\r\nconst columns:any[] = [\r\n  {\r\n    title: 'Название',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    width: '30%',\r\n    sorter: (a: { name: number; }, b: { name: number; }) => a.name > b.name,\r\n\r\n  },\r\n  {\r\n    title: 'ИНН',\r\n    dataIndex: 'inn',\r\n    key: 'inn',\r\n    width: '20%',\r\n  },\r\n  {\r\n    title: 'Телефон',\r\n    dataIndex: 'phone',\r\n    key: 'phone',\r\n\r\n  }\r\n];\r\nconst ClientTable: FunctionComponent<ClientTableProps> = ({dataTable}) => {\r\n\r\n  const {selectClient} = useActions();\r\n  const {isSelect} = useTypedSelector(state=>state.clients);\r\n  function onChange( filters: any, sorter: any) {\r\n    console.log('params',  filters, sorter);\r\n  }\r\n\r\n  const dataTableAdapter = dataTable.map((client, index)=>({...client, key:index}));\r\n\r\n  return ( \r\n    <Table \r\n      columns={columns} \r\n      dataSource={dataTableAdapter} \r\n      onChange={onChange} \r\n      pagination={false} \r\n      scroll={{ x: 100}}\r\n      onRow={(record) => ({\r\n\r\n        onClick: () => \r\n        \r\n          selectClient(record.key)\r\n        \r\n\r\n      })\r\n    }\r\n    rowSelection={{\r\n      selectedRowKeys:[isSelect as number]\r\n    }}\r\n    onHeaderRow={(columns, index) => {\r\n      return {\r\n        onClick: () => selectClient(null)\r\n      };\r\n    }}\r\n      />\r\n  );\r\n};\r\n\r\nexport default ClientTable;","import { Input, Form } from \"antd\";\r\nimport React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\n\r\ninterface FormAddClientProps {\r\n\r\n}\r\n\r\nconst FormAddClient: FunctionComponent<FormAddClientProps> = () => {\r\n  const {setClientNames, setClientINN, setClientPhone} = useActions();\r\n  const {name, inn, phone} = useTypedSelector(state=>state.clients.formFields);\r\n\r\n  const handleChangeName =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    setClientNames(e.target.value);\r\n  };\r\n  const handleChangeINN =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    setClientINN(Number.parseInt(e.target.value));\r\n  };\r\n  const handleChangePhone =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    setClientPhone(Number.parseInt(e.target.value));\r\n  };\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(()=>{\r\n    form.setFieldsValue({name, inn, phone});\r\n    },[name, inn, phone]);\r\n\r\n  return (\r\n\r\n    <Form form={form}>\r\n      <Form.Item name=\"name\" label=\"Название\" rules={[{ required: true }]}>\r\n        <Input \r\n          onChange={(e)=>handleChangeName(e)}\r\n\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name=\"inn\" label=\"ИНН\">\r\n        <Input \r\n          type='number' \r\n          onChange={(e)=>handleChangeINN(e)}\r\n\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name=\"phone\" label=\"Телефон\">\r\n        <Input \r\n          type='number' // phone type\r\n          onChange={(e)=>handleChangePhone(e)}\r\n        />\r\n      </Form.Item>\r\n    \r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormAddClient;","import { Input, Form } from \"antd\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useStore } from \"react-redux\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\n\r\ninterface FormChangeClientProps {\r\n\r\n}\r\ninterface FieldData {\r\n  name: string | number | (string | number)[];\r\n  value?: any;\r\n  touched?: boolean;\r\n  validating?: boolean;\r\n  errors?: string[];\r\n}\r\n\r\nconst FormChangeClient: FunctionComponent<FormChangeClientProps> = () => {\r\n  const {setClientNamesForChange, setClientINNForChange, setClientPhoneForChange} = useActions();\r\n  const {name, inn, phone, id} = useTypedSelector(state=>state.clients.selectedClientsFields);\r\n\r\n\r\n  const handleChangeName =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    setClientNamesForChange(e.target.value);\r\n  };\r\n  const handleChangeINN =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    setClientINNForChange(Number.parseInt(e.target.value));\r\n  };\r\n  const handleChangePhone =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    setClientPhoneForChange(Number.parseInt(e.target.value));\r\n  };\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(()=>{\r\n    form.setFieldsValue({name, inn, phone});\r\n    },[name, inn, phone]);\r\n\r\n  return (\r\n\r\n    <Form\r\n      form={form}\r\n    >\r\n      <Form.Item name=\"name\" label=\"Название\" rules={[{ required: true }]}>\r\n        <Input \r\n          onChange={(e)=>handleChangeName(e)}\r\n\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name=\"inn\" label=\"ИНН\">\r\n        <Input \r\n          type='number' \r\n          onChange={(e)=>handleChangeINN(e)}\r\n          \r\n        />\r\n      </Form.Item>\r\n      <Form.Item name=\"phone\" label=\"Телефон\">\r\n        <Input \r\n          type='number' // phone type\r\n          onChange={(e)=>handleChangePhone(e)}\r\n          value={phone?.toString() }  \r\n        />\r\n      </Form.Item>\r\n    \r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormChangeClient;","import { Input, Form } from \"antd\";\r\nimport { FunctionComponent, useEffect } from \"react\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\n\r\ninterface FormDeleteClientProps {\r\n\r\n}\r\n\r\nconst FormDeleteClient: FunctionComponent<FormDeleteClientProps> = () => {\r\n  const { readyForDeleteClient } = useActions();\r\n  const [form] = Form.useForm();\r\n  const {visible} = useTypedSelector(state=>state.modalWindow);\r\n\r\n  useEffect(() => {\r\n    return ()=> {\r\n      form.setFieldsValue({ delete: '' });\r\n      readyForDeleteClient(false);\r\n  };\r\n  }, [visible]);\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Form form={form}>\r\n      <Form.Item name=\"delete\" label=\"Введите УДАЛИТЬ\" rules={[\r\n        {\r\n          validator: (_, value) => {\r\n            if (value === 'УДАЛИТЬ') {\r\n\r\n              readyForDeleteClient(true);\r\n              return Promise.resolve();\r\n            }\r\n            readyForDeleteClient(false);\r\n            return Promise.reject(new Error('должно быть написано \"УДАЛИТЬ\"'));\r\n          }\r\n          , message: 'должно быть написано \"УДАЛИТЬ\"'\r\n        }\r\n      ]}>\r\n        <Input />\r\n      </Form.Item>\r\n\r\n\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormDeleteClient;","import { Button, Spin } from \"antd\";\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { blackText, customStyleButton, redColor, whiteColor } from \"../../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../../types/buttonTypes\";\r\nimport { routesEnum } from \"../../../types/routes\";\r\nimport Footer from \"../../Footer/Footer\";\r\nimport Header from \"../../Header/Header\";\r\nimport ClientTable from \"./ClientsTable\";\r\nimport ModlWindow from \"../ModalWindow/ModalWindow\";\r\nimport WrapperButtons from \"../WrapperButtons\";\r\nimport FormAddClient from \"./FormAddClient\";\r\nimport clientsAPI from \"../../../backendAPI/clientsAPI\";\r\nimport { TypeMV as TypesMW, TypesofMW } from \"../../../types/ModalWindowTypes/ModalWindowTypes\";\r\nimport FormChangeClient from \"./FormChangeClient\";\r\nimport FormDeleteClient from \"./FormDeleteClient\";\r\n\r\ninterface EditClientsProps {\r\n\r\n}\r\n\r\nconst { block, shape, type, style } = customStyleButton;\r\nconst Buttons: FunctionComponent = () => {\r\n  const { isSelect } = useTypedSelector(state => state.clients);\r\n  const [refreshDisabled, setRefreshDisabled] = useState(false);\r\n  const adapterToButtonDisabled = ():boolean=>{\r\n    if (isSelect === 0) {\r\n      return !true;\r\n    }\r\n    return !isSelect;\r\n  };\r\n  const { getClients } = useActions();\r\n\r\n  const handleGetClients = async () => {\r\n    try {\r\n      setRefreshDisabled(true);\r\n      const data = await clientsAPI.getClients();\r\n      getClients(data);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    finally {\r\n      setRefreshDisabled(false);\r\n    }\r\n\r\n  };\r\n\r\n  const { setVisibleMW, setType } = useActions();\r\n\r\n  return (\r\n    <>\r\n\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={style}\r\n        className=\"admin__button\"\r\n        onClick={() => {\r\n\r\n          setType(TypesofMW.CLIENT_CREATE);\r\n          setVisibleMW(true);\r\n        }}\r\n      >\r\n        Добавить клиента\r\n      </Button>\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={{ ...style, ...redColor }}\r\n        className=\"admin__button\"\r\n        disabled={ adapterToButtonDisabled() }\r\n        onClick={() => {\r\n          setType(TypesofMW.CLIENT_DELETE);\r\n          setVisibleMW(true);\r\n        }}\r\n      >\r\n        Удалить клиента\r\n      </Button>\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={style}\r\n        className=\"admin__button\"\r\n        disabled={ adapterToButtonDisabled() }\r\n        onClick={() => {\r\n          setType(TypesofMW.CLIENT_CHANGE);\r\n          setVisibleMW(true);\r\n        }}\r\n      >\r\n        Редактировать клиента\r\n      </Button>\r\n      <Button\r\n        block={block}\r\n        shape={shape}\r\n        type={type}\r\n        style={style}\r\n        loading={refreshDisabled}\r\n        className=\"admin__button\"\r\n        onClick={() => handleGetClients()}\r\n      >\r\n        Обновить таблицу\r\n      </Button>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\nconst EditClients: FunctionComponent<EditClientsProps> = () => {\r\n\r\n  const { clientList, isFetching } = useTypedSelector(state => state.clients);\r\n  const { typeMV } = useTypedSelector(state => state.modalWindow);\r\n\r\n  const { getClients, setType,toggleFetchingClient } = useActions();\r\n  const history = useHistory();\r\n\r\n\r\n  const handleGetClients = async () => {\r\n    try {\r\n      toggleFetchingClient(true);\r\n      const data = await clientsAPI.getClients();\r\n      if (data === 401) {\r\n        toggleFetchingClient(false);\r\n        return history.goBack();\r\n      }\r\n      getClients(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      toggleFetchingClient(false);\r\n    }\r\n    \r\n  };\r\n  \r\n  useEffect(() => {\r\n    setType(TypesofMW.CLIENT_CREATE);\r\n    handleGetClients();\r\n    return()=>{\r\n      toggleFetchingClient(false);\r\n    };\r\n  }, []);\r\n\r\n\r\n  const swichPropsMW = (type: TypesMW):{title: string,children: React.ReactNode} => {\r\n\r\n    let children, title;\r\n\r\n    switch (type) {\r\n      case TypesofMW.CLIENT_CREATE:\r\n        title = \"Добавить клиента\";\r\n        children = <FormAddClient />;\r\n        return {  title, children };\r\n      case TypesofMW.CLIENT_DELETE:\r\n        title = \"Удалить клиента\";\r\n        children = <FormDeleteClient />;\r\n        return {  title, children };\r\n      case TypesofMW.CLIENT_CHANGE:\r\n        title = \"Редактировать клиента\";\r\n        children = <FormChangeClient />;\r\n        return {  title, children };\r\n      default:\r\n        return {  title:'Ошибка', children };\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n      <Header buttonName={customButtonsStyleType.clients} />\r\n      <ModlWindow\r\n        children={swichPropsMW(typeMV).children}\r\n        title={swichPropsMW(typeMV).title}\r\n        type={typeMV}\r\n      />\r\n      <div className={'order-creation'}>\r\n        <section className=\"order-creation__section\">\r\n          <Spin tip=\"Loading...\" spinning={isFetching}>\r\n            <WrapperButtons buttons={<Buttons />} />\r\n            <ClientTable dataTable={clientList} />\r\n          </Spin>\r\n        </section>\r\n      </div>\r\n\r\n\r\n      <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink\r\n            to={true ? routesEnum.ADMIN : routesEnum.ADMIN}\r\n            className=\"order-creation__navlink\"\r\n          >\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...blackText, ...whiteColor, ...style }}\r\n              onClick={undefined}\r\n            >\r\n              {true ? customButtonsStyleType.back : customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          \r\n        </div>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditClients;","export const check401Err = (response:Response)=>{\r\n  if (response.status === 401) {\r\n    window.history.back();\r\n    throw new Error(response.statusText);\r\n\r\n  }\r\n};","import { check401Err } from './../utils/check401Err';\r\n\r\n\r\nclass UserAPI{\r\n  baseURL: string;\r\n  constructor(){\r\n    this.baseURL = 'http://localhost:8000/api/user';\r\n  }\r\n\r\n  async login(eMail:string, password:string) {\r\n    try {\r\n      const response = await fetch(this.baseURL + '/login', {\r\n        method:'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({email:eMail, password})\r\n      });\r\n      const data = await response.json();\r\n      console.log(data, '/login');\r\n      const {id, email, role, token} = data;\r\n      console.log(id);\r\n\r\n      localStorage.setItem('token', token);\r\n      return {id, email, role};\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    \r\n  }\r\n\r\n  async auth() {\r\n    try {\r\n      const response = await fetch(this.baseURL + '/auth', {\r\n        method:'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n      });\r\n      check401Err(response);\r\n      const data = await response.json();\r\n      const {id, email, role} = data;\r\n      console.log(data, '/auth');\r\n      return {id,email, role};\r\n    } catch (error) {\r\n      console.log(error);\r\n      localStorage.removeItem('token');\r\n    }\r\n  }\r\n\r\n  async registration (email:string, password:string) {\r\n    try {\r\n      const response = await fetch(this.baseURL + '/registration', {\r\n        method:'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({email, password})\r\n      });\r\n      const data = await response.json();\r\n      if (data.result) {\r\n        alert(\"Пользователь создан\");\r\n      }\r\n      else{\r\n        alert(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.log(error, \"--error AUTH--\");\r\n    }\r\n  };\r\n\r\n}\r\n\r\nexport default new UserAPI();","import { FunctionComponent } from \"react\";\r\nimport { Form, Input, Button } from 'antd';\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport Header from \"../Header/Header\";\r\nimport usersAPI from \"../../backendAPI/usersAPI\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\n\r\ninterface RegistrationProps {\r\n\r\n}\r\nconst {  shape, type, style } = customStyleButton;\r\n\r\nconst RegistrationCN: FunctionComponent<RegistrationProps> = () => {\r\n\r\n\r\n  const {setIsFetching} = useActions();\r\n  const {isFetching } = useTypedSelector(state=>state.user);\r\n\r\n  const onFinish = async (values: any) => {\r\n    setIsFetching(true);\r\n    await usersAPI.registration(values.email, values.password);\r\n    setIsFetching(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.login} />\r\n      <section className=\"admin\">\r\n\r\n        <Form\r\n          name=\"login\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          // initialValues={{ remember: true }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        // autoComplete=\"off\"\r\n        >\r\n\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[{ required: true, message: 'Введите Email' }]}\r\n          >\r\n            <Input type='email' />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            rules={[\r\n              { required: true, message: 'Введите пароль' },\r\n              { min: 4, message: 'Пароль должен быть более 3 символов' },\r\n              { max: 16, message: 'Пароль должен быть менее 16 символов' },\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          {/* <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\r\n        <Checkbox>Запомнить меня</Checkbox>\r\n      </Form.Item> */}\r\n\r\n          <Form.Item \r\n            className=\"registration__button\"\r\n          >\r\n            <Button shape={shape} type={type} style={style} disabled={isFetching} htmlType=\"submit\">\r\n              Зарегистрироваться\r\n            </Button>\r\n          </Form.Item>\r\n\r\n        </Form>\r\n\r\n        <NavLink\r\n          to={routesEnum.ADMIN}\r\n          className=\"registration__button\"\r\n        >\r\n          <Button shape={shape} type={type} style={style}>\r\n            Назад \r\n          </Button>\r\n        </NavLink>\r\n\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationCN;","import { FunctionComponent, useEffect} from \"react\";\r\nimport { Form, Input, Button, Spin } from 'antd';\r\nimport Header from \"../Header/Header\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport usersAPI from \"../../backendAPI/usersAPI\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\n\r\ninterface LoginCNProps {\r\n\r\n}\r\nconst {  shape, type, style } = customStyleButton;\r\n\r\n\r\nconst LoginCN: FunctionComponent<LoginCNProps> = () => {\r\n  const {id} = useTypedSelector(state => state.user);\r\n\r\n  const {setUser, setIsFetching} = useActions();\r\n  const {isFetching } = useTypedSelector(state=>state.user);\r\n\r\n  const onFinish = async(values: any) => {\r\n    try {\r\n      setIsFetching(true);\r\n      const data  = await usersAPI.login(values.email, values.password);\r\n      setUser(data?.id, data?.email, data?.role);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally{\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    return()=>{setIsFetching(false);};\r\n  },[]);\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <>\r\n      {id && <Redirect to={routesEnum.ORDER_MANAGER} />}\r\n\r\n      <Header buttonName={customButtonsStyleType.login} />\r\n      <section className=\"admin\">\r\n      <Spin spinning={isFetching} tip=\"Loading...\">\r\n        <Form\r\n          name=\"login\"\r\n          labelCol={{ span: 8 }}\r\n          wrapperCol={{ span: 16 }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            rules={[{ required: true, message: 'Введите Email' }]}\r\n          >\r\n            <Input type='email' />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Пароль\"\r\n            name=\"password\"\r\n            rules={[\r\n              { required: true, message: 'Введите пароль' },\r\n              { min: 4, message: 'Пароль должен быть более 3 символов' },\r\n              { max: 16, message: 'Пароль должен быть менее 16 символов' },\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item \r\n            className=\"registration__button\"\r\n          >\r\n            <Button shape={shape} type={type} style={style} disabled={isFetching} htmlType=\"submit\">\r\n              Войти\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </Spin>\r\n        <NavLink\r\n          hidden={isFetching}\r\n          to={routesEnum.REGISTRATION}\r\n          className=\"registration__button\"\r\n        >\r\n          <Button shape={shape} type={type} style={style}>\r\n            Регистрация \r\n          </Button>\r\n        </NavLink>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginCN;","import React, { CSSProperties, useEffect } from 'react';\nimport './custom-styles-for-antd/styles.css';\n\nimport { Route, Switch } from 'react-router';\nimport OrderManager from './components/OrderManager/OrderManager';\nimport OrderCreationCN from './components/contentNodes/OrderCreationCN';\nimport OrderViewCN from './components/contentNodes/OrderViewCN';\nimport AdminCN from './components/contentNodes/AdminCN';\nimport Options from './components/contentNodes/Options';\nimport { routesEnum } from './types/routes';\nimport Graph from './components/contentNodes/Graph';\nimport EditRawMaterials from './components/AdminsEditing/RawMaterialEditing/EditRawMaterials';\nimport EditPrice from './components/AdminsEditing/PriceEditing/EditPrice';\nimport EditClients from './components/AdminsEditing/ClientEditing/EditClients';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { generateCSSColor } from './utils/generateCSSColor';\nimport usersAPI from './backendAPI/usersAPI';\nimport RegistrationCN from './components/contentNodes/RegistrationCN';\nimport LoginCN from './components/contentNodes/LoginCN';\nimport { useActions } from './hooks/useActions';\n\nconst mainStyle: CSSProperties = {\n  maxWidth: '100vw',\n  overflowX: 'hidden',\n};\n\nfunction App() {\n  const {\n    generalBackground,\n    generalColor,\n  } = useTypedSelector(state => state.options);\n\n  const {setUser, setIsFetching, setAllStyleFromLocStor} = useActions();\n  const handleAuth = async() =>{\n    try {\n      setIsFetching(true);\n      const data  = await usersAPI.auth();\n      setUser(data?.id, data?.email, data?.role);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsFetching(false);\n    }\n  };\n\n  useEffect(\n    () => {\n      if (localStorage.getItem('options')) {\n        const options = JSON.parse(localStorage.getItem('options') as string);\n        setAllStyleFromLocStor(options);\n      }\n      handleAuth();\n    },\n    []\n  );\n\n  \n  return (\n    <main\n      style={{\n        ...mainStyle,\n        backgroundColor: generateCSSColor(generalBackground),\n        color: generateCSSColor(generalColor)\n      }}\n    >\n      <Switch>\n    \n        <Route path={routesEnum.ORDER_CREATION} exact>\n          <OrderCreationCN />\n        </Route>\n\n        <Route path={routesEnum.ORDER_VIEW} exact>\n          <OrderViewCN />\n        </Route>\n\n        <Route path={routesEnum.ADMIN} exact>\n          <AdminCN />\n        </Route>\n\n        <Route path={routesEnum.ADMIN_RAW_MATERIALS} exact>\n          <EditRawMaterials />\n        </Route>\n\n        <Route path={routesEnum.ADMIN_CLIENTS} exact>\n          <EditClients />\n        </Route>\n\n        <Route path={routesEnum.ADMIN_PRICE} exact>\n          <EditPrice />\n        </Route>\n\n        <Route path={routesEnum.OPTIONS} exact>\n          <Options />\n        </Route>\n\n        <Route path={routesEnum.GRAPH} exact>\n          <Graph />\n        </Route>\n\n        <Route path={routesEnum.LOGIN} exact>\n          <LoginCN />\n        </Route>\n\n        <Route path={routesEnum.REGISTRATION} exact>\n          <RegistrationCN />\n        </Route>\n\n        <Route path={routesEnum.ORDER_MANAGER}>\n          <OrderManager />\n        </Route>\n\n\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  clientActionsTypes,\r\n  EditClientsActions,\r\n  IClientsState,\r\n} from \"../../types/editClientsTypes\";\r\n\r\nconst initialState: IClientsState = {\r\n  clientList: [],\r\n  formFields: {\r\n    name: \"\",\r\n    inn: null,\r\n    phone: null,\r\n  },\r\n  isSelect: null,\r\n  selectedClientsFields: {\r\n    name: \"\",\r\n    inn: null,\r\n    phone: null,\r\n    id: 1,\r\n  },\r\n  readyForDelete:false,\r\n  isFetching:false\r\n};\r\n\r\nexport const editClientsReducer = (\r\n  state = initialState,\r\n  action: EditClientsActions\r\n): IClientsState => {\r\n  switch (action.type) {\r\n    case clientActionsTypes.GET:\r\n      return {\r\n        ...state,\r\n        clientList: [...action.payload],\r\n      };\r\n    case clientActionsTypes.SET_NAME_CLIENT:\r\n      return {\r\n        ...state,\r\n        formFields: {\r\n          ...state.formFields,\r\n          name: action.payload,\r\n        },\r\n      };\r\n    case clientActionsTypes.SET_PHONE_CLIENT:\r\n      return {\r\n        ...state,\r\n        formFields: {\r\n          ...state.formFields,\r\n          phone: action.payload,\r\n        },\r\n      };\r\n    case clientActionsTypes.SET_INN_CLIENT:\r\n      return {\r\n        ...state,\r\n        formFields: {\r\n          ...state.formFields,\r\n          inn: action.payload,\r\n        },\r\n      };\r\n      case clientActionsTypes.SET_NAME_CLIENT_FOR_CHANGE:\r\n        return {\r\n          ...state,\r\n          selectedClientsFields: {\r\n            ...state.selectedClientsFields,\r\n            name: action.payload,\r\n          },\r\n        };\r\n      case clientActionsTypes.SET_PHONE_CLIENT_FOR_CHANGE:\r\n        return {\r\n          ...state,\r\n          selectedClientsFields: {\r\n            ...state.selectedClientsFields,\r\n            phone: action.payload,\r\n          },\r\n        };\r\n      case clientActionsTypes.SET_INN_CLIENT_FOR_CHANGE:\r\n        return {\r\n          ...state,\r\n          selectedClientsFields: {\r\n            ...state.selectedClientsFields,\r\n            inn: action.payload,\r\n          },\r\n        };\r\n    case clientActionsTypes.SELECT_CLIENT:\r\n      return {\r\n        ...state,\r\n        selectedClientsFields:\r\n          state.clientList.find((client, index) => {\r\n            return index === action.payload;\r\n          }) || state.selectedClientsFields,\r\n        isSelect: action.payload,\r\n      };\r\n      case clientActionsTypes.READY_FOR_DELETE:\r\n        return {\r\n          ...state,\r\n            readyForDelete:action.payload\r\n          };\r\n          case clientActionsTypes.TOGGLE_FETCH:\r\n            return {\r\n              ...state,\r\n                isFetching:action.payload\r\n              };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  EditRawMaterialsActions,\r\n  editRawMaterialsActionsTypes,\r\n  IEditRawMaterialsState,\r\n} from \"../../types/editRawMaterialsTypes\";\r\n\r\nconst initialState: IEditRawMaterialsState = {\r\n  rawMaterialsList: [],\r\n  readyForDelete: false,\r\n  materialSelected: null,\r\n  units: [],\r\n  creationFields: {\r\n    name: \"\",\r\n    units: null,\r\n  },\r\n  valuesForChange: {},\r\n  isFetch:false\r\n};\r\n\r\nexport const editRawMaterialsReducer = (\r\n  state = initialState,\r\n  action: EditRawMaterialsActions\r\n): IEditRawMaterialsState => {\r\n  switch (action.type) {\r\n    case editRawMaterialsActionsTypes.GET:\r\n      return {\r\n        ...state,\r\n        rawMaterialsList: [...action.payload],\r\n      };\r\n    case editRawMaterialsActionsTypes.SET_MATERIALS_UNIT_CREATE:\r\n      return {\r\n        ...state,\r\n        creationFields: { ...state.creationFields, units: action.payload },\r\n      };\r\n    case editRawMaterialsActionsTypes.SET_MATERIALS_NAME_CREATE:\r\n      return {\r\n        ...state,\r\n        creationFields: { ...state.creationFields, name: action.payload },\r\n      };\r\n    case editRawMaterialsActionsTypes.SELECT_MATERIAL:\r\n      return {\r\n        ...state,\r\n        materialSelected: action.payload,\r\n      };\r\n    case editRawMaterialsActionsTypes.SET_UNITS:\r\n      return {\r\n        ...state,\r\n        units: action.payload,\r\n      };\r\n    case editRawMaterialsActionsTypes.READY_FOR_DELETE:\r\n      return {\r\n        ...state,\r\n        readyForDelete: action.payload,\r\n      };\r\n      case editRawMaterialsActionsTypes.SET_FOR_CHANGES:\r\n        return {\r\n          ...state,\r\n          valuesForChange: {...action.payload},\r\n        };\r\n        case editRawMaterialsActionsTypes.FETCH:\r\n          return {\r\n            ...state,\r\n            isFetch: action.payload,\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IModalWindowState,\r\n  ModalWindowActions,\r\n  ModalWindowTypeActions,\r\n  TypesofMW,\r\n} from \"../../../types/ModalWindowTypes/ModalWindowTypes\";\r\n\r\nconst initialState: IModalWindowState = {\r\n  confirmLoading: false,\r\n  visible: false,\r\n  typeMV:TypesofMW.CLIENT_CREATE\r\n};\r\n\r\nexport const modalWindowReducer = (\r\n  state: IModalWindowState = initialState,\r\n  action: ModalWindowActions\r\n): IModalWindowState => {\r\n  switch (action.type) {\r\n    case ModalWindowTypeActions.SET_VISIBLE:\r\n      return {\r\n        ...state,\r\n        visible: action.payload,\r\n      };\r\n    case ModalWindowTypeActions.CONFIRM_LOADING:\r\n      return {\r\n        ...state,\r\n        confirmLoading: action.payload,\r\n      };\r\n      case ModalWindowTypeActions.SET_TYPE:\r\n        return {\r\n          ...state,\r\n          typeMV: action.payload,\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { OptionsActions, OptionsActionTypes } from \"./../../types/optionsTypes\";\r\nimport { IOptionStateType } from \"../../types/optionsTypes\";\r\n\r\nconst initialState: IOptionStateType = {\r\n  generalBackground: {\r\n    blue: 166,\r\n    red: 166,\r\n    green: 166,\r\n  },\r\n  backBackgroundBack: {\r\n    blue: 255,\r\n    red: 255,\r\n    green: 255,\r\n  },\r\n  backBackgroundBigBtn: {\r\n    blue: 0,\r\n    red: 91,\r\n    green: 140,\r\n  },\r\n  backBackgroundFooter: {\r\n    blue: 166,\r\n    red: 166,\r\n    green: 166,\r\n  },\r\n  backBackgroundHeader: {\r\n    blue: 41,\r\n    red: 0,\r\n    green: 21,\r\n  },\r\n  backBackgroundNext: {\r\n    blue: 255,\r\n    red: 24,\r\n    green: 144,\r\n  },\r\n  btnColorBack: {\r\n    blue: 0,\r\n    red: 0,\r\n    green: 0,\r\n  },\r\n  btnColorBig: {\r\n    blue: 255,\r\n    red: 255,\r\n    green: 255,\r\n  },\r\n  btnColorNext: {\r\n    blue: 255,\r\n    red: 255,\r\n    green: 255,\r\n  },\r\n  generalColor: {\r\n    blue: 0,\r\n    red: 0,\r\n    green: 0,\r\n  },\r\n  darkTheme: {\r\n    generalBackground: {\r\n      blue: 45,\r\n      red: 45,\r\n      green: 45,\r\n    },\r\n    backBackgroundBack: {\r\n      blue: 234,\r\n      red: 23,\r\n      green: 234,\r\n    },\r\n    backBackgroundBigBtn: {\r\n      blue: 234,\r\n      red: 23,\r\n      green: 234,\r\n    },\r\n    backBackgroundFooter: {\r\n      blue: 45,\r\n      red: 45,\r\n      green: 45,\r\n    },\r\n    backBackgroundHeader: {\r\n      blue: 45,\r\n      red: 45,\r\n      green: 45,\r\n    },\r\n    backBackgroundNext: {\r\n      blue: 255,\r\n      red: 70,\r\n      green: 255,\r\n    },\r\n    btnColorBack: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorBig: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorNext: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    generalColor: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    isSelected: false,\r\n  },\r\n  lightTheme: {\r\n    generalBackground: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    backBackgroundBack: {\r\n      blue: 207,\r\n      red: 207,\r\n      green: 207,\r\n    },\r\n    backBackgroundBigBtn: {\r\n      blue: 234,\r\n      red: 200,\r\n      green: 234,\r\n    },\r\n    backBackgroundFooter: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    backBackgroundHeader: {\r\n      blue: 207,\r\n      red: 207,\r\n      green: 207,\r\n    },\r\n    backBackgroundNext: {\r\n      blue: 234,\r\n      red: 23,\r\n      green: 234,\r\n    },\r\n    btnColorBack: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorBig: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorNext: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    generalColor: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    isSelected: false,\r\n  },\r\n  default: {\r\n    generalBackground: {\r\n      blue: 166,\r\n      red: 166,\r\n      green: 166,\r\n    },\r\n    backBackgroundBack: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    backBackgroundBigBtn: {\r\n      blue: 0,\r\n      red: 91,\r\n      green: 140,\r\n    },\r\n    backBackgroundFooter: {\r\n      blue: 166,\r\n      red: 166,\r\n      green: 166,\r\n    },\r\n    backBackgroundHeader: {\r\n      blue: 41,\r\n      red: 0,\r\n      green: 21,\r\n    },\r\n    backBackgroundNext: {\r\n      blue: 255,\r\n      red: 24,\r\n      green: 144,\r\n    },\r\n    btnColorBack: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorBig: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    btnColorNext: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    generalColor: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    isSelected: true,\r\n  },\r\n};\r\n\r\nexport const optionReducer = (\r\n  state = initialState,\r\n  action: OptionsActions\r\n): IOptionStateType => {\r\n  switch (action.type) {\r\n    case OptionsActionTypes.COLOR_BACK:\r\n      return {\r\n        ...state,\r\n        btnColorBack: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.COLOR_NEXT:\r\n      return {\r\n        ...state,\r\n        btnColorNext: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.COLOR_GENERAL:\r\n      return {\r\n        ...state,\r\n        generalColor: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.COLOR_BIG_BUTTON:\r\n      return {\r\n        ...state,\r\n        btnColorBig: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_BACK_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundBack: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_BIG_BUTTON_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundBigBtn: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_NEXT_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundNext: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_GENERAL_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        generalBackground: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_HEADER_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundHeader: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_FOOTER_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundFooter: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_DARK_THEME:\r\n      return {\r\n        ...state,\r\n        ...state.darkTheme,\r\n        default: { ...state.default, isSelected: false },\r\n        lightTheme: { ...state.lightTheme, isSelected: false },\r\n        darkTheme: { ...state.darkTheme, isSelected: true },\r\n      };\r\n    case OptionsActionTypes.SET_LIGHT_THEME:\r\n      return {\r\n        ...state,\r\n        ...state.lightTheme,\r\n        default: { ...state.default, isSelected: false },\r\n        lightTheme: { ...state.lightTheme, isSelected: true },\r\n        darkTheme: { ...state.darkTheme, isSelected: false },\r\n      };\r\n    case OptionsActionTypes.SET_DEFAULT:\r\n      return {\r\n        ...state,\r\n        ...state.default,\r\n        default: { ...state.default, isSelected: true },\r\n        lightTheme: { ...state.lightTheme, isSelected: false },\r\n        darkTheme: { ...state.darkTheme, isSelected: false },\r\n      };\r\n      case OptionsActionTypes.SET_ALL:\r\n        return {\r\n          ...state,\r\n          default: { ...state.default, isSelected: false },\r\n          lightTheme: { ...state.lightTheme, isSelected: false },\r\n          darkTheme: { ...state.darkTheme, isSelected: false },\r\n          generalBackground: action.payload.generalBackground,\r\n          backBackgroundBack:action.payload.backBackgroundBack,\r\n          backBackgroundNext:action.payload.backBackgroundNext,\r\n          backBackgroundHeader:action.payload.backBackgroundHeader,\r\n          backBackgroundFooter:action.payload.backBackgroundFooter,\r\n          backBackgroundBigBtn:action.payload.backBackgroundBigBtn,\r\n          generalColor:action.payload.generalColor,\r\n          btnColorBack:action.payload.btnColorBack,\r\n          btnColorNext:action.payload.btnColorNext,\r\n          btnColorBig:action.payload.btnColorBig\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IOrderCreationState,\r\n  OrderCreationAction,\r\n  orderCreationTypes,\r\n  rawMaterial,\r\n} from \"../../types/orderCreationTypes\";\r\n\r\nconst initialState: IOrderCreationState = {\r\n  isContentOnRight: false,\r\n  isNextBtnDisabled: true,\r\n  renderCreateButton: false,\r\n  rawMaterialList: [{ amount: 0, name: \"\",id:0 }],\r\n  client: null,\r\n  price: null,\r\n  date: null,\r\n  isFetch: false\r\n};\r\n\r\nexport const orderCreationReducer = (\r\n  state = initialState,\r\n  action: OrderCreationAction\r\n): IOrderCreationState => {\r\n  switch (action.type) {\r\n    case orderCreationTypes.SET_BUTTON_DISABLED:\r\n      return { ...state, isNextBtnDisabled: true };\r\n    case orderCreationTypes.SET_BUTTON_UNDISABLED:\r\n      return { ...state, isNextBtnDisabled: false };\r\n    case orderCreationTypes.SET_IS_RIGHT:\r\n      return { ...state, isContentOnRight: true };\r\n    case orderCreationTypes.SET_IS_LEFT:\r\n      return { ...state, isContentOnRight: false };\r\n    case orderCreationTypes.RENDER_CREATE_BUTTON:\r\n      return { ...state, isContentOnRight: !state.renderCreateButton };\r\n    case orderCreationTypes.SET_RAW_MATERIAL_NAME:\r\n      return {\r\n        ...state,\r\n        rawMaterialList: state.rawMaterialList.map(\r\n          (rawMaterial: rawMaterial, index: number) => {\r\n            if (index === action.payload.index) {\r\n              return {...rawMaterial,\r\n                name: action.payload.name,\r\n                id:action.payload.id\r\n              };\r\n            }\r\n            return rawMaterial;\r\n          }\r\n        ),\r\n      };\r\n\r\n      case orderCreationTypes.REMOVE_RAW_MATERIAL_NAME:\r\n        return {\r\n          ...state,\r\n          rawMaterialList: state.rawMaterialList.map(\r\n            (rawMaterial: rawMaterial, index: number) => {\r\n              if (index === action.payload.index) {\r\n                return {...rawMaterial,\r\n                  name: '',\r\n                  id:0\r\n                };\r\n              }\r\n              return rawMaterial;\r\n            }\r\n          ),\r\n        };\r\n    case orderCreationTypes.SET_RAW_MATERIAL_AMOUNT:\r\n      return {\r\n        ...state,\r\n        rawMaterialList: state.rawMaterialList.map(\r\n          (rawMaterial: rawMaterial, index: number) => {\r\n            if (index === action.payload.index) {\r\n              return { ...rawMaterial,\r\n                amount: action.payload.amount,\r\n              };\r\n            }\r\n            return rawMaterial;\r\n          }\r\n        ),\r\n      };\r\n    case orderCreationTypes.ADD_RAW_MATERIAL:\r\n      return {\r\n        ...state,\r\n        rawMaterialList: [...state.rawMaterialList, { name: \"\", amount: 0,id:0 }],\r\n      };\r\n    case orderCreationTypes.REMOVE_RAW_MATERIAL:\r\n      const returnedArray = state.rawMaterialList.filter((material, index)=>(\r\n          index!==action.payload.index\r\n        ));\r\n      return {\r\n        ...state,\r\n        rawMaterialList: [...returnedArray],\r\n      };\r\n    case orderCreationTypes.SET_CLIENT:\r\n      return {\r\n        ...state,\r\n        client: action.payload,\r\n      };\r\n    case orderCreationTypes.REMOVE_CLIENT:\r\n      return {\r\n        ...state,\r\n        client: null,\r\n      };\r\n    case orderCreationTypes.SET_PRICE:\r\n      return {\r\n        ...state,\r\n        price: action.payload,\r\n      };\r\n    case orderCreationTypes.REMOVE_PRICE:\r\n      return {\r\n        ...state,\r\n        price: null,\r\n      };\r\n    case orderCreationTypes.SET_DATE:\r\n      return {\r\n        ...state,\r\n        date: action.payload,\r\n      };\r\n    case orderCreationTypes.CLEAR_DATE:\r\n      return {\r\n        ...state,\r\n        date: null,\r\n      };\r\n      case orderCreationTypes.TOGGLE_FETCH:\r\n        return {\r\n          ...state,\r\n          isFetch: action.payload,\r\n        };\r\n        case orderCreationTypes.CLEAR_RAW_MATERIALS:\r\n          return {\r\n            ...state,\r\n            rawMaterialList: [{ amount: 0, name: \"\",id:0 }],\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IOrderViewState,\r\n  OrderViewActions,\r\n  OrderViewActionTypes,\r\n} from \"../../types/orderViewTypes\";\r\n\r\nconst initialState: IOrderViewState = {\r\n  isDisabled: false,\r\n  isOnRight: false,\r\n  selectedClient: null,\r\n  selectedDateStart: null,\r\n  selectedDateEnd: null,\r\n  tableData: [],\r\n  isFetch: false,\r\n};\r\n\r\nexport const viewOrderReducer = (\r\n  state = initialState,\r\n  action: OrderViewActions\r\n): IOrderViewState => {\r\n  switch (action.type) {\r\n    case OrderViewActionTypes.TOGGLE_FETCH:\r\n      return {\r\n        ...state,\r\n        isFetch: action.payload,\r\n      };\r\n    case OrderViewActionTypes.SET_ON_RIGHT:\r\n      return {\r\n        ...state,\r\n        isOnRight: true,\r\n      };\r\n    case OrderViewActionTypes.SET_ON_LEFT:\r\n      return {\r\n        ...state,\r\n        isOnRight: false,\r\n      };\r\n    case OrderViewActionTypes.SET_DISABLED_NEXT:\r\n      return {\r\n        ...state,\r\n        isDisabled: true,\r\n      };\r\n    case OrderViewActionTypes.SET_UNABLED_NEXT:\r\n      return {\r\n        ...state,\r\n        isDisabled: false,\r\n      };\r\n    case OrderViewActionTypes.SELECT_CLIENT:\r\n      return {\r\n        ...state,\r\n        selectedClient: action.payload,\r\n      };\r\n    case OrderViewActionTypes.SELECT_DATE_START:\r\n      return {\r\n        ...state,\r\n        selectedDateStart: action.payload,\r\n      };\r\n    case OrderViewActionTypes.SELECT_DATE_END:\r\n      return {\r\n        ...state,\r\n        selectedDateEnd: action.payload,\r\n      };\r\n    case OrderViewActionTypes.SET_TABLE_DATA:\r\n      return {\r\n        ...state,\r\n        tableData: [...action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IPriceState,\r\n  PriceActions,\r\n  priceActionsTypes,\r\n} from \"../../types/priceTypes\";\r\n\r\nconst initialState: IPriceState = {\r\n  priceList: [],\r\n  isFetchPriceList: false,\r\n  priceNames: [],\r\n  selectedPrice: null,\r\n  fieldForCreationPrice: \"\",\r\n  redyForDeletePrice: false,\r\n  arrayForChange: null,\r\n  readyForChange:false\r\n};\r\n\r\nexport const priceReducer = (\r\n  state = initialState,\r\n  action: PriceActions\r\n): IPriceState => {\r\n  switch (action.type) {\r\n    case priceActionsTypes.GET:\r\n      return {\r\n        ...state,\r\n        priceList: [...action.payload],\r\n      };\r\n    case priceActionsTypes.GET_PRICE_NAMES:\r\n      return {\r\n        ...state,\r\n        priceNames: [...action.payload],\r\n      };\r\n    case priceActionsTypes.SELECT_PRICE_NAME:\r\n      return {\r\n        ...state,\r\n        selectedPrice: action.payload,\r\n      };\r\n    case priceActionsTypes.SET_NAME_FOR_CREATE:\r\n      return {\r\n        ...state,\r\n        fieldForCreationPrice: action.payload,\r\n      };\r\n    case priceActionsTypes.READY_FOR_DELETE_PRICE:\r\n      return {\r\n        ...state,\r\n        redyForDeletePrice: action.payload,\r\n      };\r\n    case priceActionsTypes.SET_PRICE_LIST:\r\n      return {\r\n        ...state,\r\n        priceList: [...action.payload],\r\n      };\r\n    case priceActionsTypes.FETCH_PRICE_LIST:\r\n      return {\r\n        ...state,\r\n        isFetchPriceList: action.payload,\r\n      };\r\n      case priceActionsTypes.ARRAY_FOR_CHANGE:\r\n        return {\r\n          ...state,\r\n          arrayForChange: [...action.payload],\r\n        };\r\n        case priceActionsTypes.READY_FOR_CHANGE:\r\n          return {\r\n            ...state,\r\n            readyForChange: action.payload,\r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IUserStateType, UserAction, userActionTypes } from \"../../types/userTypes\";\r\n\r\nconst initialState: IUserStateType = {\r\n  email: '',\r\n  id: null,\r\n  role:'',\r\n  isFetching: false\r\n};\r\n\r\nexport const userReducer = (state:IUserStateType = initialState, action:UserAction):IUserStateType=>{\r\n  switch (action.type) {\r\n    case userActionTypes.IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.payload\r\n      };\r\n      case userActionTypes.SET_USER:\r\n        return {\r\n          ...state,\r\n            isFetching: false,\r\n            id: action.payload.id,\r\n            email: action.payload.email,\r\n            role: action.payload.role\r\n        };\r\n        case userActionTypes.LOGOUT:\r\n          localStorage.removeItem('token');\r\n          return {\r\n            ...state,\r\n              email: '',\r\n              id: null,\r\n              role:''\r\n          };\r\n    default: \r\n      return state;\r\n  }\r\n};","import { combineReducers } from \"redux\";\r\nimport { editClientsReducer } from \"./editClientsReducer\";\r\nimport { editRawMaterialsReducer } from \"./editRawMaterialsReducer\";\r\nimport { modalWindowReducer } from \"./ModalWindowReducer/SetConfirmLoading\";\r\nimport { optionReducer } from \"./optionsReducer\";\r\nimport { orderCreationReducer } from \"./orderCreationReducer\";\r\nimport { viewOrderReducer } from \"./orderViewReducer\";\r\nimport { priceReducer } from \"./priceReducer\";\r\nimport { userReducer } from \"./userReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  orderCreation: orderCreationReducer,\r\n  viewOrder: viewOrderReducer,\r\n  options: optionReducer,\r\n  user: userReducer,\r\n  clients: editClientsReducer,\r\n  price: priceReducer,\r\n  rawMaterials: editRawMaterialsReducer,\r\n  modalWindow:modalWindowReducer,\r\n\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport const store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)) );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport 'antd/dist/antd.css';\nimport {\n  BrowserRouter as Router, HashRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter >\n    <Provider store={store}>\n    <App />\n  </Provider>\n  </HashRouter>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}