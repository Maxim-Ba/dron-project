{"version":3,"sources":["types/buttonTypes.ts","custom-styles-for-antd/styleVariables.ts","components/MainMenu.tsx","components/Header/Header.tsx","components/OrderManager/OrderManager.tsx","components/CustomCascader.tsx","components/CustomDatePicker.tsx","hooks/useTypedSelector.ts","components/Footer/Footer.tsx","components/contentNodes/OrderCreationCN.tsx","App.tsx","types/clientsTypes.ts","reportWebVitals.ts","store/reducers/clientReducer.ts","types/orderCreationTypes.ts","store/reducers/orderCreationReducer.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["customButtonsStyleType","customStyleButton","border","gray","backgroundColor","grey","limeColor","lime","menuStyle","position","top","left","zIndex","paddingLeft","paddingBottom","MainMenu","collapsed","className","style","mode","selectable","ItemGroup","type","block","shape","Header","buttonName","Layout","useState","setCollapsed","onClick","OrderManager","orderManager","to","createOrder","viewOrder","options","value","label","children","disabled","onChange","selectedOptions","console","log","filter","inputValue","path","some","option","toLowerCase","indexOf","CustomCascader","defaultValue","placeholder","showSearch","matchInputWidth","changeOnSelect","displayRender","join","notFoundContent","suffixIcon","ArrowDownOutlined","date","dateString","CustomDatePicker","props","locale","width","useTypedSelector","useSelector","Footer","minWidth","OrderCreationCN","isOnRight","state","orderCreation","isContentOnRight","gutter","justify","align","span","mainStyle","color","overflowX","App","ClientActionTypes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","orderCreationTypes","initialState","isFetching","clients","error","isNextBtnDisabled","renderCreateButton","rootReducer","combineReducers","client","action","FETCH_CLIENTS","payload","SET_CLIENTS","SET_ERROR","SET_BUTTON_DISABLED","SET_BUTTON_UNDISABLED","SET_IS_RIGHT","SET_IS_LEFT","RENDER_CREATE_BUTTON","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61e09639.chunk.js","sourcesContent":["import { ButtonShape, ButtonType } from \"antd/lib/button\";\r\n\r\nexport enum customButtonsStyleType {\r\n  createOrder = \"Создать заказ\",\r\n  viewOrder = \"Просмотр заказа\",\r\n  orderManager = \"Заказменеджер\",\r\n  orderCreation = \"Создание заказа\",\r\n  listOrder = \"Список заказов\",\r\n  cancel = \"Отмена\",\r\n  next = \"Далее\",\r\n  back = \"Назад\",\r\n  refresh = \"refresh\",\r\n  print = \"print\",\r\n  show = \"Показать\",\r\n  create = \"Создать\"\r\n\r\n}\r\nexport interface IButtonStyleType {\r\n  styleType:customButtonsStyleType\r\n}\r\nexport interface ICustomStyleButton {\r\n  type: ButtonType,\r\n  block: boolean,\r\n  icon?: React.ReactNode\r\n  shape: ButtonShape,\r\n  style: {\r\n    border: string,\r\n    backgroundColor?: string,\r\n    width?: string\r\n    color?: 'black' | 'white'\r\n  },\r\n}","import { lime, grey } from '@ant-design/colors';\r\nimport { CSSProperties } from 'react';\r\nimport { ICustomStyleButton } from '../types/buttonTypes';\r\nexport const styleVariables:CSSProperties = {\r\n  paddingTop: 64\r\n};\r\n\r\nexport const navLinkStyle:CSSProperties={\r\n  width: '50%'\r\n};\r\n\r\nexport const customStyleButton: ICustomStyleButton = {\r\n  type: 'primary',\r\n  block: true,\r\n  shape: 'round',\r\n  style: {\r\n    border: 'none',\r\n  },\r\n};\r\n// ------colors-------\r\nexport const gray:CSSProperties ={\r\n  backgroundColor: grey[0]\r\n} ;\r\nexport const limeColor:CSSProperties ={\r\n  backgroundColor: lime[7]\r\n} ;\r\n","import { Button, Menu } from \"antd\";\r\nimport React, { CSSProperties, FunctionComponent, ReactNode, useState } from \"react\";\r\nimport { customButtonsStyleType } from \"../types/buttonTypes\";\r\nimport CustomButton from \"./CustomButton\";\r\n\r\ninterface MainMenuProps {\r\n  collapsed: boolean\r\n}\r\nconst menuStyle:CSSProperties = {\r\n  position: 'fixed',\r\n  top: 64,\r\n  left: 0, \r\n  zIndex: 1001,\r\n  paddingLeft:5,\r\n  paddingBottom:10\r\n};\r\nconst MainMenu: FunctionComponent<MainMenuProps> = ({ collapsed }: MainMenuProps) => {\r\n\r\n  return (\r\n    <div className=\"menu-wrapper\">\r\n      {collapsed && <div className=\"main-menu\">\r\n        <div className=\"main-menu__background\" >\r\n        </div>\r\n\r\n        <Menu style={menuStyle } mode='inline' selectable={true}>\r\n          <Menu.ItemGroup>\r\n            1dfgdfgdfgdfgdfgdfgddd\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup>\r\n            2\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup>\r\n            3\r\n          </Menu.ItemGroup>\r\n        </Menu>\r\n      </div>}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default MainMenu;","import { Button, Layout } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useState } from \"react\";\r\nimport { customStyleButton, limeColor } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport MainMenu from \"../MainMenu\";\r\n\r\ninterface HeaderProps {\r\n  buttonName: customButtonsStyleType\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\nconst Header: FunctionComponent<HeaderProps> = ({buttonName}) => {\r\n  const { Header } = Layout;\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return ( \r\n    <div>\r\n      <MainMenu collapsed={collapsed} />\r\n      <Header  className=\"header\">\r\n        <Button type={type} block={block} shape={shape} style={{...limeColor,...style}} onClick={toggleCollapsed}>{buttonName}</Button>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import { Button, Layout } from \"antd\";\r\nimport { CSSProperties, FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport Header from \"../Header/Header\";\r\nimport { grey, lime } from '@ant-design/colors';\r\nimport { customStyleButton, gray } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface OrderManagerProps {\r\n\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\n\r\nconst OrderManager: FunctionComponent<OrderManagerProps> = () => {\r\n  return (\r\n    <Layout className='order-manager'>\r\n      <Header buttonName={customButtonsStyleType.orderManager}/>\r\n      <div style={gray} className='order-manager__container'>\r\n        <NavLink to=\"/order-creation\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.createOrder}\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink to=\"/order-view\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.viewOrder}\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderManager;","import { Cascader } from \"antd\";\r\nimport { CascaderOptionType, CascaderValueType } from \"antd/lib/cascader\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { ArrowDownOutlined } from '@ant-design/icons';\r\n\r\ninterface CustomCascaderProps {\r\n  defaultValue: string\r\n}\r\nconst options: CascaderOptionType[] = [\r\n  {\r\n    value: 'OOO',\r\n    label: 'OOO',\r\n    children: [\r\n      {\r\n        value: 'Заглушка',\r\n        label: 'Hangzhouadsadsasdasdasdasdasdasdasd',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n          {\r\n            value: 'xiasha',\r\n            label: 'Xia Sha',\r\n            disabled: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'ИП',\r\n    label: 'ИП',\r\n    children: [\r\n      {\r\n        value: '---',\r\n        label: '----',\r\n        children: [\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction onChange(value: CascaderValueType, selectedOptions: CascaderOptionType[] | undefined) {\r\n  console.log(value, selectedOptions);\r\n}\r\n\r\nfunction filter(inputValue: string, path: CascaderOptionType[] | any): boolean {\r\n  return path.some((option: any) => option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1);\r\n}\r\n\r\nconst CustomCascader: FunctionComponent<CustomCascaderProps> = ({ defaultValue }: CustomCascaderProps) => {\r\n  return (\r\n    <Cascader\r\n      options={options}\r\n      onChange={onChange}\r\n      placeholder=\"Please select...\"\r\n      showSearch={{ filter, matchInputWidth: true }}\r\n      changeOnSelect={true}\r\n      defaultValue={[defaultValue]}\r\n      displayRender={label => label.join(' ')}\r\n      notFoundContent={'Таков нетъ'}\r\n      suffixIcon= {<ArrowDownOutlined />}\r\n\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomCascader;","import React, { FunctionComponent } from \"react\";\r\nimport { DatePicker, Space } from \"antd\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\n\r\ninterface CustomDatePickerProps {\r\n  props: any\r\n}\r\n\r\nfunction onChange(date: moment.Moment | null, dateString: string) {\r\n  console.log(date);\r\n  console.log( dateString);\r\n}\r\n\r\nconst CustomDatePicker: FunctionComponent<CustomDatePickerProps> = ({props}:CustomDatePickerProps) => {\r\n\r\n  return (\r\n    // <Space direction=\"vertical\">\r\n      <DatePicker onChange={onChange} locale={locale} style={props.width}/>\r\n    // {/* </Space> */}\r\n  );\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers/rootReducer\";\r\n\r\nexport const useTypedSelector : TypedUseSelectorHook<RootState> = useSelector;","import { FunctionComponent, ReactNode } from \"react\";\r\n\r\ninterface FooterProps {\r\n  children?:ReactNode\r\n}\r\n\r\nconst Footer: FunctionComponent<FooterProps> = ({children}:FooterProps) => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      {children}\r\n    </footer> \r\n  );\r\n};\r\n\r\nexport default Footer;","import { CSSProperties, FunctionComponent, useEffect, useState } from \"react\";\r\nimport { grey } from '@ant-design/colors';\r\nimport Table from '../Table';\r\nimport { Row, Col, Button } from \"antd\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomDatePicker from \"../CustomDatePicker\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { gray } from \"../../custom-styles-for-antd/styleVariables\";\r\n\r\ninterface OrderCreationCNProps {\r\n\r\n}\r\n\r\n\r\nconst width: CSSProperties = {\r\n  minWidth: 196\r\n};\r\n\r\nconst OrderCreationCN: FunctionComponent<OrderCreationCNProps> = () => {\r\n  const isOnRight = useTypedSelector(state => state.orderCreation.isContentOnRight);\r\n\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.orderCreation} />\r\n      <div style={gray} className={isOnRight ? \"transform-translate order-creation\" : 'order-creation'}>\r\n        <section className=\"order-creation__section\">\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n            <Col span={24} className=\"order-creation__item\"><CustomCascader defaultValue={\"\"} /></Col>\r\n            <Col span={24} className=\"order-creation__item\"><CustomCascader defaultValue={\"\"} /></Col>\r\n            <Col span={24} className=\"order-creation__item\"><CustomDatePicker props={{ width: width }} /></Col>\r\n          </Row>\r\n        </section>\r\n        <section >\r\n          <CustomCascader defaultValue={\"\"} />\r\n        </section>\r\n        <Footer >\r\n          <Button>sdfsdf</Button>\r\n        </Footer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderCreationCN;","import React, { CSSProperties } from 'react';\nimport './custom-styles-for-antd/styles.css';\n\nimport { grey } from '@ant-design/colors';\nimport { Route, Switch } from 'react-router';\nimport { Footer } from 'antd/lib/layout/layout';\nimport OrderManager from './components/OrderManager/OrderManager';\nimport OrderCreationCN from './components/contentNodes/OrderCreationCN';\n\nconst mainStyle: CSSProperties = {\n  backgroundColor: grey[0],\n  color: 'black',\n  width: '100vw',\n  overflowX:'hidden',\n  \n  \n\n};\nconst divStyle: CSSProperties = {\n  backgroundColor: grey[0],\n  display: 'flex',\n  flexDirection: 'column',\n  minHeight: '190px',\n  padding: 10,\n  justifyContent: 'space-around'\n};\nfunction App() {\n  return (\n    <main style={mainStyle}>\n      <Switch>\n        <Route path=\"/order-creation\">\n          <OrderCreationCN />\n        </Route>\n        <Route path=\"/order-view\">\n        <Footer />\n        </Route>\n        <Route path=\"/\">\n          <OrderManager />\n        </Route>\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n\n","export interface IClientState {\r\n  isFetching : boolean;\r\n  error: null | string \r\n  clients: []\r\n};\r\n\r\nexport enum ClientActionTypes {\r\n  FETCH_CLIENTS = \"FETCH_CLIENTS\",\r\n  SET_ERROR = \"SET_ERROR\",\r\n  SET_CLIENTS = \"SET_CLIENTS\"\r\n}\r\n\r\ninterface IFetchClientAction {\r\n  type: ClientActionTypes.FETCH_CLIENTS,\r\n  payload: boolean\r\n}\r\ninterface ISetClientAction {\r\n  type: ClientActionTypes.SET_CLIENTS,\r\n  payload: []\r\n}\r\ninterface ISetErrorAction {\r\n  type: ClientActionTypes.SET_ERROR,\r\n  payload: string | null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport type ClientAction = \r\n  IFetchClientAction\r\n  | ISetClientAction\r\n  | ISetErrorAction","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ClientAction, ClientActionTypes } from \"./../../types/clientsTypes\";\r\nimport { IClientState } from \"../../types/clientsTypes\";\r\n\r\nconst initialState: IClientState = {\r\n  isFetching: false,\r\n  clients: [],\r\n  error: null,\r\n};\r\n\r\nexport const clientReducer = (\r\n  state = initialState,\r\n  action: ClientAction\r\n): IClientState => {\r\n  switch (action.type) {\r\n    case ClientActionTypes.FETCH_CLIENTS:\r\n      return { ...state, isFetching: action.payload };\r\n    case ClientActionTypes.SET_CLIENTS:\r\n      return { ...state, clients: action.payload };\r\n\r\n    case ClientActionTypes.SET_ERROR:\r\n      return { ...state, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export interface IOrderCreationState {\r\n  isContentOnRight: boolean,\r\n  isNextBtnDisabled: boolean,\r\n  renderCreateButton:boolean\r\n}\r\n\r\nexport enum orderCreationTypes {\r\n  SET_IS_RIGHT=\"SET_IS_RIGHT\",\r\n  SET_IS_LEFT=\"SET_IS_LEFT\",\r\n  SET_BUTTON_DISABLED=\"SET_BUTTON_DISABLED\",\r\n  SET_BUTTON_UNDISABLED=\"SET_BUTTON_UNDISABLED\",\r\n  RENDER_CREATE_BUTTON=\"RENDER_CREATE_BUTTON\"\r\n}\r\n\r\ninterface IBtnDisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_DISABLED,\r\n}\r\ninterface IBtnUndisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_UNDISABLED,\r\n}\r\ninterface IIsRightAction {\r\n  type: orderCreationTypes.SET_IS_RIGHT,\r\n}\r\ninterface IIsLeftAction {\r\n  type: orderCreationTypes.SET_IS_LEFT,\r\n}\r\ninterface IRenderCreateBtnAction {\r\n  type: orderCreationTypes.RENDER_CREATE_BUTTON,\r\n}\r\n\r\nexport type OrderCreationAction = \r\n  IBtnDisabledAction \r\n  | IIsRightAction \r\n  | IIsLeftAction \r\n  | IRenderCreateBtnAction\r\n  | IBtnUndisabledAction","import {\r\n  IOrderCreationState,\r\n  OrderCreationAction,\r\n  orderCreationTypes,\r\n} from \"../../types/orderCreationTypes\";\r\n\r\nconst initialState: IOrderCreationState = {\r\n  isContentOnRight: false,\r\n  isNextBtnDisabled: true,\r\n  renderCreateButton: false,\r\n};\r\n\r\nexport const orderCreationReducer = (\r\n  state = initialState,\r\n  action: OrderCreationAction\r\n): IOrderCreationState => {\r\n  switch (action.type) {\r\n    case orderCreationTypes.SET_BUTTON_DISABLED:\r\n      return { ...state, isNextBtnDisabled: true };\r\n      case orderCreationTypes.SET_BUTTON_UNDISABLED:\r\n        return { ...state, isNextBtnDisabled: false };\r\n    case orderCreationTypes.SET_IS_RIGHT:\r\n      return { ...state, isContentOnRight: true };\r\n      case orderCreationTypes.SET_IS_LEFT:\r\n        return { ...state, isContentOnRight: false };\r\n    case orderCreationTypes.RENDER_CREATE_BUTTON:\r\n      return { ...state, isContentOnRight: !state.renderCreateButton };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { clientReducer } from \"./clientReducer\";\r\nimport { orderCreationReducer } from \"./orderCreationReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  client: clientReducer,\r\n  orderCreation: orderCreationReducer,\r\n\r\n\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport 'antd/dist/antd.css';\nimport {\n  BrowserRouter as Router, HashRouter\n} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst customHistory = createBrowserHistory();\nReactDOM.render(\n  <HashRouter >\n    <Provider store={store}>\n    <App />\n  </Provider>\n  </HashRouter>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}