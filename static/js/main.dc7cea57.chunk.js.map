{"version":3,"sources":["types/buttonTypes.ts","custom-styles-for-antd/styleVariables.ts","hooks/useTypedSelector.ts","utils/generateCSSColor.ts","types/routes.ts","components/MainMenu.tsx","components/Header/Header.tsx","components/OrderManager/OrderManager.tsx","components/CustomCascader.tsx","components/CustomDatePicker.tsx","types/orderCreationTypes.ts","store/actionCreators/orderCreationActions.ts","types/orderViewTypes.ts","store/actionCreators/veiwOrderActions.ts","types/optionsTypes.ts","store/actionCreators/optionActions.ts","store/actionCreators/rootActions.ts","hooks/useActions.ts","components/Footer/Footer.tsx","components/buttons/AddButton.tsx","components/CustomInput.tsx","components/RawMaterialItem/RawMaterialItem.tsx","components/contentNodes/OrderCreationCN.tsx","components/ClientView.tsx","components/CustomTableItem.tsx","components/HeaderRowOfTable.tsx","components/Table.tsx","components/contentNodes/OrderViewCN.tsx","components/contentNodes/AdminCN.tsx","components/ColorSliders.tsx","components/contentNodes/Options.tsx","components/contentNodes/Graph.tsx","components/AdminsEditing/EditRawMaterials.tsx","components/AdminsEditing/EditPrice.tsx","components/AdminsEditing/EditClients.tsx","App.tsx","reportWebVitals.ts","store/reducers/optionsReducer.ts","store/reducers/orderCreationReducer.ts","store/reducers/orderViewReducer.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["customButtonsStyleType","customStyleButton","type","block","shape","style","border","margin","undefined","blackText","color","whiteColor","grey","lime","backgroundColor","redColor","useTypedSelector","useSelector","generateCSSColor","red","green","blue","routesEnum","menuStyle","position","top","left","zIndex","paddingLeft","paddingBottom","MainMenu","collapsed","onClick","location","useLocation","className","mode","selectable","pathname","ORDER_MANAGER","Item","to","ADMIN","OPTIONS","GRAPH","Header","buttonName","Layout","useState","setCollapsed","state","options","backBackgroundBigBtn","backBackgroundHeader","btnColorBig","toggleCollapsed","OrderManager","generalBackground","generalColor","orderManager","createOrder","viewOrder","value","label","children","disabled","onChange","selectedOptions","console","log","filter","inputValue","path","some","option","toLowerCase","indexOf","CustomCascader","defaultValue","placeholder","showSearch","matchInputWidth","changeOnSelect","displayRender","join","notFoundContent","suffixIcon","ArrowDownOutlined","date","dateString","orderCreationTypes","CustomDatePicker","props","locale","width","OrderViewActionTypes","setOnRight","dispatch","a","SET_IS_RIGHT","setOnLeft","SET_IS_LEFT","setIsButtomDisabled","SET_BUTTON_DISABLED","setIsButtomUndisabled","SET_BUTTON_UNDISABLED","renderCreateBtn","RENDER_CREATE_BUTTON","addRawMaterial","ADD_RAW_MATERIAL","setRawMaterial","name","amount","index","SET_RAW_MATERIAL","payload","removeRawMaterial","REMOVE_RAW_MATERIAL","OptionsActionTypes","setOnRightOrderViev","SET_ON_RIGHT","setOnLeftOrderViev","SET_ON_LEFT","setDisabledNextBtn","SET_DISABLED_NEXT","setUnaisabledNextBtn","SET_UNABLED_NEXT","setGeneralBackGround","SET_GENERAL_BACKGROUND","setNextBackGround","SET_NEXT_BACKGROUND","setBackBackGround","SET_BACK_BACKGROUND","setHeaderBackGround","SET_HEADER_BACKGROUND","setFooterBackGround","SET_FOOTER_BACKGROUND","setBigBtnBackGround","SET_BIG_BUTTON_BACKGROUND","installColorBack","COLOR_BACK","installColorNext","COLOR_NEXT","installColorBigBtn","COLOR_BIG_BUTTON","installColorGeneral","COLOR_GENERAL","setLightTheme","SET_LIGHT_THEME","setDarkTheme","SET_DARK_THEME","setDefault","SET_DEFAULT","OrderCreationActionCreaors","ViewOrderActionCreaors","OptionActionCreaors","useActions","useDispatch","bindActionCreators","ActionCreators","Footer","backBackgroundFooter","AddButton","icon","PlusOutlined","CustomInput","direction","e","amountToNumber","Number","parseInt","target","handleChange","addonAfter","min","RawMaterialItem","rawMaterialList","orderCreation","currentRawMaterial","isVisible","setIsVisible","styleDeleteButton","visibility","length","onMouseEnter","onMouseLeave","MinusCircleOutlined","minWidth","OrderCreationCN","isOnRight","isContentOnRight","isNextBtnDisabled","backBackgroundBack","backBackgroundNext","btnColorBack","btnColorNext","useEffect","gutter","justify","align","span","map","rawMaterial","cancel","next","ClientView","sum","toString","addRub","columns","title","dataIndex","key","fixed","formateOrders","orders","order","price","CustomTableItem","showHeader","dataSource","bordered","pagination","scroll","x","tableLayout","Panel","Collapse","HeaderRowOfTable","accordion","expandIconPosition","header","dateNow","Date","toISOString","slice","gettingPropsFromStore","Table","client","OrderViewCN","isDisabled","listOrder","ORDER_VIEW","back","show","AdminCN","admin","ADMIN_CLIENTS","ADMIN_PRICE","ADMIN_RAW_MATERIALS","ColorSliders","callback","max","n","Options","darkTheme","defaultT","default","lightTheme","orientation","Group","isSelected","buttonStyle","Button","save","Graph","graph","EditRawMaterials","rawMaterials","EditPrice","EditClients","clients","mainStyle","overflowX","App","ORDER_CREATION","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","renderCreateButton","rootReducer","combineReducers","action","returnedArray","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc7cea57.chunk.js","sourcesContent":["import { ButtonShape, ButtonType } from \"antd/lib/button\";\r\n\r\nexport enum customButtonsStyleType {\r\n  createOrder = \"Создать заказ\",\r\n  viewOrder = \"Просмотр заказа\",\r\n  orderManager = \"Заказменеджер\",\r\n  orderCreation = \"Создание заказа\",\r\n  listOrder = \"Список заказов\",\r\n  cancel = \"Отмена\",\r\n  next = \"Далее\",\r\n  back = \"Назад\",\r\n  refresh = \"refresh\",\r\n  print = \"print\",\r\n  show = \"Показать\",\r\n  create = \"Создать\",\r\n  admin=\"Админка\",\r\n  options=\"Настройки\",\r\n  graph=\"Графики\",\r\n  clients=\"Редактировать БД клиентов\",\r\n  rawMaterials=\"Редактировать БД сырья\",\r\n  price=\"Редактировать БД прайса\",\r\n  save=\"Сохранить\"\r\n\r\n}\r\nexport interface IButtonStyleType {\r\n  styleType:customButtonsStyleType\r\n}\r\nexport interface ICustomStyleButton {\r\n  type: ButtonType,\r\n  block: boolean,\r\n  icon?: React.ReactNode\r\n  shape: ButtonShape,\r\n  style: {\r\n    border: string,\r\n    backgroundColor?: string,\r\n    width?: string\r\n    color?: 'black' | 'white'\r\n    margin?: '0 5px'\r\n  },\r\n}","import { lime, grey } from '@ant-design/colors';\r\nimport { CSSProperties } from 'react';\r\nimport { ICustomStyleButton } from '../types/buttonTypes';\r\nexport const styleVariables:CSSProperties = {\r\n  paddingTop: 64\r\n};\r\n\r\nexport const navLinkStyle:CSSProperties={\r\n  width: '50%'\r\n};\r\n\r\nexport const customStyleButton: ICustomStyleButton = {\r\n  type: 'primary',\r\n  block: true,\r\n  shape: 'round',\r\n  style: {\r\n    border: 'none',\r\n    margin: undefined,\r\n    \r\n\r\n  },\r\n};\r\nexport const blackText:CSSProperties ={\r\n  color: 'black'\r\n} ;\r\n// ------colors-------\r\nexport const gray:CSSProperties ={\r\n  backgroundColor: grey[0]\r\n} ;\r\nexport const limeColor:CSSProperties ={\r\n  backgroundColor: lime[7]\r\n} ;\r\nexport const whiteColor:CSSProperties ={\r\n  backgroundColor: 'white'\r\n} ;\r\nexport const redColor:CSSProperties ={\r\n  backgroundColor: 'red'\r\n} ;","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers/rootReducer\";\r\n\r\nexport const useTypedSelector : TypedUseSelectorHook<RootState> = useSelector;","import { CSSProperties } from 'react';\r\nimport { rgb } from '../types/optionsTypes';\r\n\r\n\r\nexport function generateCSSColor({red,green,blue}:rgb) {\r\n  return `rgb(${red} ${green} ${blue})`;\r\n}","export enum routesEnum {\r\n  ORDER_CREATION=\"/order-creation\",\r\n  ORDER_VIEW=\"/order-view\",\r\n  ADMIN=\"/admin\",\r\n  ADMIN_CLIENTS=\"/admin/clients\",\r\n  ADMIN_PRICE=\"/admin/price\",\r\n  ADMIN_RAW_MATERIALS=\"/admin/raw-materials\",\r\n  OPTIONS=\"/options\",\r\n  ORDER_MANAGER=\"/\",\r\n  GRAPH='/GRAPH',\r\n}","import { Menu } from \"antd\";\r\nimport React, { CSSProperties, FunctionComponent } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { routesEnum } from \"../types/routes\";\r\ninterface MainMenuProps {\r\n  collapsed: boolean\r\n  onClick: () => void\r\n}\r\nconst menuStyle: CSSProperties = {\r\n  position: 'fixed',\r\n  top: 64,\r\n  left: 0,\r\n  zIndex: 1001,\r\n  paddingLeft: 5,\r\n  paddingBottom: 10\r\n};\r\nconst MainMenu: FunctionComponent<MainMenuProps> = ({ collapsed, onClick }: MainMenuProps) => {\r\n  let location = useLocation();\r\n  return (\r\n    <div className=\"menu-wrapper\">\r\n      {collapsed && <div className=\"main-menu\">\r\n        <div className=\"main-menu__background\" onClick={() => onClick()}>\r\n        </div>\r\n\r\n        <Menu style={menuStyle} mode='inline' selectable={true}>\r\n          {location.pathname !== routesEnum.ORDER_MANAGER\r\n            ? <Menu.Item key=\"1\">\r\n              <NavLink to={routesEnum.ORDER_MANAGER}>\r\n                Заказменеджер\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.ADMIN\r\n            ? <Menu.Item key=\"2\">\r\n              <NavLink to={routesEnum.ADMIN}>\r\n                Админка\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.OPTIONS\r\n            ? <Menu.Item key=\"3\">\r\n              <NavLink to={routesEnum.OPTIONS}>\r\n                Настройки\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n          {location.pathname !== routesEnum.GRAPH\r\n            ? <Menu.Item key=\"4\">\r\n              <NavLink to={routesEnum.GRAPH}>\r\n                Графики\r\n              </NavLink>\r\n            </Menu.Item>\r\n            : null}\r\n\r\n        </Menu>\r\n      </div>}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default MainMenu;","import { Button, Layout } from \"antd\";\r\nimport { FunctionComponent, useState } from \"react\";\r\nimport { customStyleButton, limeColor } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport MainMenu from \"../MainMenu\";\r\n\r\ninterface HeaderProps {\r\n  buttonName: customButtonsStyleType\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\nconst Header: FunctionComponent<HeaderProps> = ({buttonName}) => {\r\n  const { Header } = Layout;\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const {\r\n    backBackgroundBigBtn,\r\n    backBackgroundHeader,\r\n    btnColorBig,\r\n\r\n  } = useTypedSelector(state=>state.options);\r\n  const toggleCollapsed = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n  return ( \r\n    <div>\r\n      <MainMenu collapsed={collapsed} onClick={toggleCollapsed} />\r\n      <Header  className=\"header\" style={{backgroundColor: generateCSSColor(backBackgroundHeader)}}>\r\n        <Button \r\n          type={type} \r\n          block={block} \r\n          shape={shape} \r\n          style={{ ...style,\r\n            backgroundColor: generateCSSColor(backBackgroundBigBtn), \r\n            color: generateCSSColor(btnColorBig)\r\n          }}            \r\n          onClick={toggleCollapsed}\r\n        >\r\n            {buttonName}\r\n        </Button>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import { Button, Layout } from \"antd\";\r\nimport { CSSProperties, FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport CustomButton from \"../CustomButton\";\r\nimport Header from \"../Header/Header\";\r\nimport { grey, lime } from '@ant-design/colors';\r\nimport { customStyleButton, gray } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\n\r\ninterface OrderManagerProps {\r\n\r\n}\r\n\r\nconst { type, block, shape, style } = customStyleButton;\r\n\r\nconst OrderManager: FunctionComponent<OrderManagerProps> = () => {\r\n  const {\r\n    generalBackground,\r\n    generalColor,\r\n  } = useTypedSelector(state=>state.options);\r\n  return (\r\n    <Layout \r\n      className='order-manager' \r\n      style={\r\n        {backgroundColor: generateCSSColor(generalBackground), \r\n        color: generateCSSColor(generalColor)}\r\n      }\r\n    >\r\n      <Header buttonName={customButtonsStyleType.orderManager}/>\r\n      <div \r\n      style={\r\n        {backgroundColor: generateCSSColor(generalBackground), \r\n        color: generateCSSColor(generalColor)}\r\n      }\r\n      className='order-manager__container'>\r\n        <NavLink to=\"/order-creation\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.createOrder}\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink to=\"/order-view\" className=\"order-manager__navlink\">\r\n          <Button type={type} block={block} shape={shape} style={style}>\r\n            {customButtonsStyleType.viewOrder}\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderManager;","import { Cascader } from \"antd\";\r\nimport { CascaderOptionType, CascaderValueType } from \"antd/lib/cascader\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { ArrowDownOutlined } from '@ant-design/icons';\r\n\r\ninterface CustomCascaderProps {\r\n  defaultValue: string\r\n}\r\nconst options: CascaderOptionType[] = [\r\n  {\r\n    value: 'OOO',\r\n    label: 'OOO',\r\n    children: [\r\n      {\r\n        value: 'Заглушка',\r\n        label: 'Hangzhouadsadsasdasdasdasdasdasdasd',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n          {\r\n            value: 'xiasha',\r\n            label: 'Xia Sha',\r\n            disabled: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'ИП',\r\n    label: 'ИП',\r\n    children: [\r\n      {\r\n        value: '---',\r\n        label: '----',\r\n        children: [\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction onChange(value: CascaderValueType, selectedOptions: CascaderOptionType[] | undefined) {\r\n  console.log(value, selectedOptions);\r\n}\r\n\r\nfunction filter(inputValue: string, path: CascaderOptionType[] | any): boolean {\r\n  return path.some((option: any) => option.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1);\r\n}\r\n\r\nconst CustomCascader: FunctionComponent<CustomCascaderProps> = ({ defaultValue }: CustomCascaderProps) => {\r\n  return (\r\n    <Cascader\r\n      options={options}\r\n      onChange={onChange}\r\n      placeholder=\"Please select...\"\r\n      showSearch={{ filter, matchInputWidth: true }}\r\n      changeOnSelect={true}\r\n      defaultValue={[defaultValue]}\r\n      displayRender={label => label.join(' ')}\r\n      notFoundContent={'Таков нетъ'}\r\n      suffixIcon= {<ArrowDownOutlined />}\r\n\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomCascader;","import React, { FunctionComponent } from \"react\";\r\nimport { DatePicker, Space } from \"antd\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport locale from 'antd/es/date-picker/locale/ru_RU';\r\n\r\n\r\ninterface CustomDatePickerProps {\r\n  props: any\r\n}\r\n\r\nfunction onChange(date: moment.Moment | null, dateString: string) {\r\n  console.log(date);\r\n  console.log( dateString);\r\n}\r\n\r\nconst CustomDatePicker: FunctionComponent<CustomDatePickerProps> = ({props}:CustomDatePickerProps) => {\r\n\r\n  return (\r\n    // <Space direction=\"vertical\">\r\n      <DatePicker onChange={onChange} locale={locale} style={props.width}/>\r\n    // {/* </Space> */}\r\n  );\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","export interface rawMaterial {\r\n  name:string,\r\n  amount:number\r\n}\r\nexport interface IOrderCreationState {\r\n  isContentOnRight: boolean,\r\n  isNextBtnDisabled: boolean,\r\n  renderCreateButton:boolean,\r\n  rawMaterialList: Array<rawMaterial> \r\n}\r\n\r\nexport enum orderCreationTypes {\r\n  SET_IS_RIGHT=\"SET_IS_RIGHT\",\r\n  SET_IS_LEFT=\"SET_IS_LEFT\",\r\n  SET_BUTTON_DISABLED=\"SET_BUTTON_DISABLED\",\r\n  SET_BUTTON_UNDISABLED=\"SET_BUTTON_UNDISABLED\",\r\n  RENDER_CREATE_BUTTON=\"RENDER_CREATE_BUTTON\",\r\n  ADD_RAW_MATERIAL=\"ADD_RAW_MATERIAL\",\r\n  SET_RAW_MATERIAL=\"SET_RAW_MATERIAL\",\r\n  REMOVE_RAW_MATERIAL=\"REMOVE_RAW_MATERIAL\",\r\n\r\n}\r\n\r\ninterface IBtnDisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_DISABLED,\r\n}\r\ninterface IBtnUndisabledAction {\r\n  type: orderCreationTypes.SET_BUTTON_UNDISABLED,\r\n}\r\ninterface IIsRightAction {\r\n  type: orderCreationTypes.SET_IS_RIGHT,\r\n}\r\ninterface IIsLeftAction {\r\n  type: orderCreationTypes.SET_IS_LEFT,\r\n}\r\ninterface IRenderCreateBtnAction {\r\n  type: orderCreationTypes.RENDER_CREATE_BUTTON,\r\n}\r\ninterface IAddRawMaterialAction {\r\n  type: orderCreationTypes.ADD_RAW_MATERIAL,\r\n}\r\ninterface ISetRawMaterialAction {\r\n  type: orderCreationTypes.SET_RAW_MATERIAL,\r\n  payload: {amount:number,name:string, index:number}\r\n}\r\ninterface IRemoveRawMaterialAction {\r\n  type: orderCreationTypes.REMOVE_RAW_MATERIAL,\r\n  payload: {index:number}\r\n}\r\n\r\nexport type OrderCreationAction = \r\n  IBtnDisabledAction \r\n  | IIsRightAction \r\n  | IIsLeftAction \r\n  | IRenderCreateBtnAction\r\n  | IBtnUndisabledAction\r\n  | IAddRawMaterialAction\r\n  | IRemoveRawMaterialAction\r\n  | ISetRawMaterialAction","import { Dispatch } from 'redux';\r\nimport { OrderCreationAction, orderCreationTypes } from '../../types/orderCreationTypes';\r\n\r\n\r\n\r\n\r\nexport const setOnRight = () =>{\r\n  return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n      dispatch({type:orderCreationTypes.SET_IS_RIGHT});\r\n  };\r\n};\r\nexport const setOnLeft = () =>{\r\n  return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n      dispatch({type:orderCreationTypes.SET_IS_LEFT});\r\n  };\r\n};\r\n  export const setIsButtomDisabled = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.SET_BUTTON_DISABLED});\r\n    };\r\n  };\r\n  export const setIsButtomUndisabled = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.SET_BUTTON_UNDISABLED});\r\n    };\r\n  };\r\n  export const renderCreateBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({type:orderCreationTypes.RENDER_CREATE_BUTTON});\r\n    };\r\n  };\r\n  export const addRawMaterial = () =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.ADD_RAW_MATERIAL\r\n        });\r\n    };\r\n  };\r\n  export const setRawMaterial = (name:string, amount:number, index:number) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.SET_RAW_MATERIAL,\r\n          payload:{\r\n            name,\r\n            amount,\r\n            index\r\n          }\r\n        });\r\n    };\r\n  };\r\n  export const removeRawMaterial = (index:number) =>{\r\n    return async (dispatch:Dispatch<OrderCreationAction>)=>{\r\n        dispatch({\r\n          type:orderCreationTypes.REMOVE_RAW_MATERIAL,\r\n          payload:{index}\r\n        });\r\n    };\r\n  };","export interface IOrderViewState {\r\n    isOnRight:boolean,\r\n    isDisabled:boolean,\r\n}\r\n\r\nexport enum OrderViewActionTypes {\r\n    SET_ON_RIGHT=\"SET_ON_RIGHT\",\r\n    SET_ON_LEFT=\"SET_ON_LEFT\",\r\n    SET_DISABLED_NEXT=\"SET_DISABLED_NEXT\",\r\n    SET_UNABLED_NEXT=\"SET_UNABLED_NEXT\",\r\n}\r\n\r\ninterface ISetOnRightAction {\r\n    type:OrderViewActionTypes.SET_ON_RIGHT\r\n}\r\ninterface ISetOnLeftAction {\r\n    type:OrderViewActionTypes.SET_ON_LEFT\r\n}\r\ninterface ISetDisabledNextAction {\r\n    type:OrderViewActionTypes.SET_DISABLED_NEXT\r\n}\r\ninterface ISetUnableNextAction {\r\n    type:OrderViewActionTypes.SET_UNABLED_NEXT\r\n}\r\n\r\nexport type OrderViewActions = \r\n    | ISetOnRightAction\r\n    | ISetOnLeftAction\r\n    | ISetDisabledNextAction\r\n    | ISetUnableNextAction\r\n","import { Dispatch } from \"redux\";\r\nimport { OrderViewActionTypes, OrderViewActions } from \"../../types/orderViewTypes\";\r\n\r\nexport const setOnRightOrderViev = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_ON_RIGHT});\r\n    };\r\n  };\r\n  export const setOnLeftOrderViev = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_ON_LEFT});\r\n    };\r\n  };\r\n  export const setDisabledNextBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_DISABLED_NEXT});\r\n    };\r\n  };\r\n  export const setUnaisabledNextBtn = () =>{\r\n    return async (dispatch:Dispatch<OrderViewActions>)=>{\r\n        dispatch({type:OrderViewActionTypes.SET_UNABLED_NEXT});\r\n    };\r\n  };","export type rgb = {red:number,green:number, blue:number}\r\n\r\ntype defaultT = {\r\n  generalBackground: rgb\r\n  backBackgroundBack:rgb\r\n  backBackgroundNext:rgb\r\n  backBackgroundHeader:rgb\r\n  backBackgroundFooter:rgb\r\n  backBackgroundBigBtn:rgb\r\n  generalColor:rgb\r\n  btnColorBack:rgb\r\n  btnColorNext:rgb\r\n  btnColorBig:rgb\r\n  isSelected:boolean\r\n}\r\nexport interface IOptionStateType{\r\n  generalBackground: rgb\r\n  backBackgroundBack:rgb\r\n  backBackgroundNext:rgb\r\n  backBackgroundHeader:rgb\r\n  backBackgroundFooter:rgb\r\n  backBackgroundBigBtn:rgb\r\n  generalColor:rgb\r\n  btnColorBack:rgb\r\n  btnColorNext:rgb\r\n  btnColorBig:rgb\r\n  lightTheme:defaultT\r\n  darkTheme:defaultT\r\n  default:defaultT\r\n}\r\n\r\nexport enum OptionsActionTypes {\r\n  SET_GENERAL_BACKGROUND=\"SET_GENERAL_BACKGROUND\",\r\n  SET_BACK_BACKGROUND=\"SET_BACK_BACKGROUND\",\r\n  SET_NEXT_BACKGROUND=\"SET_NEXT_BACKGROUND\",\r\n  SET_HEADER_BACKGROUND=\"SET_HEADER_BACKGROUND\",\r\n  SET_FOOTER_BACKGROUND=\"SET_FOOTER_BACKGROUND\",\r\n  SET_BIG_BUTTON_BACKGROUND=\"SET_BIG_BUTTON_BACKGROUND\",\r\n  SET_LIGHT_THEME=\"SET_LIGHT_THEME\",\r\n  SET_DARK_THEME=\"SET_DARK_THEME\",\r\n  SET_DEFAULT=\"SET_DEFAULT\",\r\n  COLOR_GENERAL=\"COLOR_GENERAL\",\r\n  COLOR_BIG_BUTTON=\"COLOR_BIG_BUTTON\",\r\n  COLOR_BACK=\"COLOR_BACK\",\r\n  COLOR_NEXT=\"COLOR_NEXT\",\r\n\r\n}\r\n\r\ninterface setGeneralBackGround {\r\n  type:OptionsActionTypes.SET_GENERAL_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setNextBackGround {\r\n  type:OptionsActionTypes.SET_NEXT_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setBackBackGround {\r\n  type:OptionsActionTypes.SET_BACK_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setHeaderBackGround {\r\n  type:OptionsActionTypes.SET_HEADER_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setFooterBackGround {\r\n  type:OptionsActionTypes.SET_FOOTER_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface setBigBtnBackGround {\r\n  type:OptionsActionTypes.SET_BIG_BUTTON_BACKGROUND\r\n  payload:rgb\r\n}\r\ninterface installColorBack {\r\n  type:OptionsActionTypes.COLOR_BACK\r\n  payload:rgb\r\n}\r\ninterface installColorNext {\r\n  type:OptionsActionTypes.COLOR_NEXT\r\n  payload:rgb\r\n}\r\ninterface installColorBigBtn {\r\n  type:OptionsActionTypes.COLOR_BIG_BUTTON\r\n  payload:rgb\r\n}\r\ninterface installColorGeneral {\r\n  type:OptionsActionTypes.COLOR_GENERAL\r\n  payload:rgb\r\n}\r\ninterface setLightTheme {\r\n  type:OptionsActionTypes.SET_LIGHT_THEME\r\n}\r\ninterface setDarkTheme {\r\n  type:OptionsActionTypes.SET_DARK_THEME\r\n}\r\ninterface setDefault {\r\n  type:OptionsActionTypes.SET_DEFAULT\r\n}\r\nexport type OptionsActions = \r\n  setGeneralBackGround\r\n  | setNextBackGround\r\n  | setBackBackGround\r\n  | setHeaderBackGround\r\n  | setFooterBackGround\r\n  | setBigBtnBackGround\r\n  | setNextBackGround\r\n  | setLightTheme\r\n  | setDarkTheme\r\n  | setDefault\r\n  | installColorBack\r\n  | installColorNext\r\n  | installColorBigBtn\r\n  | installColorGeneral","import { Dispatch } from 'redux';\r\nimport { OptionsActions, OptionsActionTypes } from '../../types/optionsTypes';\r\n\r\n\r\nexport const setGeneralBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_GENERAL_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setNextBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_NEXT_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setBackBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_BACK_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setHeaderBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_HEADER_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setFooterBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_FOOTER_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setBigBtnBackGround = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_BIG_BUTTON_BACKGROUND,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorBack = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_BACK,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorNext = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_NEXT,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorBigBtn = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_BIG_BUTTON,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const installColorGeneral = (red:number,green:number, blue:number)=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.COLOR_GENERAL,\r\n      payload:{red, green, blue}\r\n    });\r\n  };\r\n};\r\nexport const setLightTheme = ()=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_LIGHT_THEME,\r\n    });\r\n  };\r\n};\r\nexport const setDarkTheme = ()=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_DARK_THEME,\r\n    });\r\n  };\r\n};\r\nexport const setDefault = ()=>{\r\n  return async (dispatch:Dispatch<OptionsActions>)=>{\r\n    dispatch({\r\n      type:OptionsActionTypes.SET_DEFAULT,\r\n    });\r\n  };\r\n};","import * as OrderCreationActionCreaors from './orderCreationActions';\r\nimport * as ViewOrderActionCreaors from './veiwOrderActions';\r\nimport * as OptionActionCreaors from './optionActions';\r\n\r\n\r\nexport default {\r\n  ...OrderCreationActionCreaors,\r\n  ...ViewOrderActionCreaors,\r\n  ...OptionActionCreaors,\r\n};","import {useDispatch} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport ActionCreators from '../store/actionCreators/rootActions';\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(ActionCreators, dispatch);\r\n};","import { FunctionComponent, ReactNode } from \"react\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\n\r\ninterface FooterProps {\r\n  children?:ReactNode\r\n}\r\n\r\nconst Footer: FunctionComponent<FooterProps> = ({children}:FooterProps) => {\r\n    const {backBackgroundFooter} = useTypedSelector(state=>state.options);\r\n  return (\r\n    <footer \r\n      className=\"footer\"\r\n      style={{ \r\n        backgroundColor: generateCSSColor(backBackgroundFooter), \r\n      }} \r\n    >\r\n      {children}\r\n    </footer> \r\n  );\r\n};\r\n\r\nexport default Footer;","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { customStyleButton } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\n\r\ninterface AddButtonProps {\r\n\r\n}\r\n\r\nconst {type} = customStyleButton;\r\n\r\nconst AddButton: FunctionComponent<AddButtonProps> = () => {\r\n  const {addRawMaterial} = useActions();\r\n  const handleClick=()=>{\r\n    addRawMaterial()\r\n  }\r\n  return (\r\n    <Button  \r\n      type={type}  \r\n      shape={'circle'} \r\n      className=\"add-button\" \r\n      icon={<PlusOutlined/>} \r\n      onClick={handleClick}\r\n    >\r\n        \r\n    </Button>\r\n  )\r\n};\r\n\r\nexport default AddButton;","import { Space, Input } from 'antd';\r\nimport React, { FunctionComponent } from 'react';\r\nimport { useActions } from '../hooks/useActions';\r\n\r\ninterface CustomInputProps {\r\n  amount: number,\r\n  index: number,\r\n  name: string\r\n}\r\n\r\n\r\n\r\nconst CustomInput: FunctionComponent<CustomInputProps> = ({ amount, index, name }: CustomInputProps) => {\r\n\r\n  const { setRawMaterial } = useActions();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const amountToNumber = Number.parseInt(e.target.value);\r\n    setRawMaterial(name, amountToNumber, index);\r\n  };\r\n\r\n  return (\r\n    <Space direction=\"vertical\">\r\n      <Input\r\n        onChange={e => handleChange(e)}\r\n        className=\"custom-input\"\r\n        addonAfter=\"кг\"\r\n        type=\"number\" min=\"0\"\r\n        value={amount}\r\n      />\r\n    </Space>\r\n  );\r\n};\r\n\r\nexport default CustomInput;","import { MinusCircleOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useState } from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomInput from \"../CustomInput\";\r\nimport { redColor, customStyleButton } from '../../custom-styles-for-antd/styleVariables'\r\n\r\ninterface RawMaterialItemProps {\r\n  index: number\r\n}\r\n\r\n\r\nconst RawMaterialItem: FunctionComponent<RawMaterialItemProps> = ({ index }: RawMaterialItemProps) => {\r\n  \r\n  const { removeRawMaterial } = useActions()\r\n\r\n  const {rawMaterialList} = useTypedSelector(state => state.orderCreation)\r\n  const currentRawMaterial = rawMaterialList[index];\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  const styleDeleteButton: CSSProperties = {\r\n    ...customStyleButton.style,\r\n    ...redColor,\r\n    visibility: isVisible && rawMaterialList.length > 1\r\n      ? 'visible'\r\n      : 'hidden'\r\n  }\r\n\r\n  const handleClick = () => {\r\n    removeRawMaterial(index)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"raw-material-item\"\r\n      onMouseEnter={() => setIsVisible(true)}\r\n      onMouseLeave={() => setIsVisible(false)}\r\n    >\r\n      <CustomCascader defaultValue={currentRawMaterial.name} />\r\n      <CustomInput amount={currentRawMaterial.amount} index={index} name={currentRawMaterial.name}/>\r\n      <Button\r\n        shape={\"circle\"}\r\n        style={styleDeleteButton}\r\n        icon={<MinusCircleOutlined />}\r\n        className=\"raw-material-item__delete-btn\"\r\n        onClick={handleClick}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default RawMaterialItem;","import { CSSProperties, FunctionComponent, useEffect } from \"react\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomDatePicker from \"../CustomDatePicker\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { customStyleButton, gray} from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AddButton from \"../buttons/AddButton\";\r\nimport RawMaterialItem from \"../RawMaterialItem/RawMaterialItem\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\n\r\ninterface OrderCreationCNProps {\r\n\r\n}\r\n\r\n\r\nconst width: CSSProperties = {\r\n  minWidth: 196\r\n};\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\n\r\nconst OrderCreationCN: FunctionComponent<OrderCreationCNProps> = () => {\r\n  const {isContentOnRight:isOnRight,isNextBtnDisabled} = useTypedSelector(state => state.orderCreation);\r\n\r\n  const { setOnRight, setOnLeft } = useActions();\r\n  const rawMaterialList = useTypedSelector(state => state.orderCreation.rawMaterialList);\r\n  const {\r\n    backBackgroundBack,\r\n    backBackgroundNext,\r\n    btnColorBack,\r\n    btnColorNext,\r\n    generalBackground,\r\n    generalColor,\r\n  } = useTypedSelector(state=>state.options);\r\n  useEffect(function () {\r\n    return () => { setOnLeft();};\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.orderCreation} />\r\n      <div \r\n          style={\r\n            {\r\n              backgroundColor: generateCSSColor(generalBackground),\r\n              color: generateCSSColor(generalColor)\r\n            }}\r\n          className={isOnRight ? \"transform-translate order-creation\" : 'order-creation'}\r\n      >\r\n        <section \r\n          className=\"order-creation__section\"\r\n        >\r\n\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n            <Col span={24} className=\"order-creation__item\"><CustomCascader defaultValue={\"\"} /></Col>\r\n            <Col span={24} className=\"order-creation__item\"><CustomCascader defaultValue={\"\"} /></Col>\r\n            <Col span={24} className=\"order-creation__item\"><CustomDatePicker props={{ width: width }} /></Col>\r\n          </Row>\r\n        </section>\r\n\r\n        <section className=\"order-creation__section order-creation__section_j-c-center\">\r\n          {rawMaterialList.map((rawMaterial, index: number) => {\r\n            return <RawMaterialItem  key={index} index={index} />;\r\n                })}\r\n          <AddButton />\r\n        </section>\r\n\r\n      </div>\r\n      <Footer >\r\n\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={routesEnum.ORDER_MANAGER} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundBack), \r\n                color: generateCSSColor(btnColorBack)\r\n              }}\r\n            >\r\n              {customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          \r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundNext), \r\n                color: generateCSSColor(btnColorNext)\r\n              }}\r\n              disabled={!isNextBtnDisabled}\r\n              onClick={isOnRight ? undefined : setOnRight}\r\n            >\r\n              {customButtonsStyleType.next}\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderCreationCN;","import { FunctionComponent } from \"react\";\r\nimport { Row, Col } from 'antd';\r\n\r\ninterface ClientViewProps {\r\n  name: string,\r\n  sum: number\r\n}\r\n\r\nconst ClientView: FunctionComponent<ClientViewProps> = ({name, sum}) => {\r\n  return ( \r\n<Row gutter={16} >\r\n      <Col className=\"gutter-row\" span={24-8} >\r\n        <div >{name}</div>\r\n      </Col>\r\n      <Col className=\"gutter-row\" span={8} >\r\n        <div >{sum.toString() + ' руб'}</div>\r\n      </Col>\r\n  </Row>\r\n  );\r\n};\r\n\r\nexport default ClientView;","import { FunctionComponent, useState } from \"react\";\r\nimport { Table, Form,  Switch} from 'antd';\r\nimport { IOrder } from \"../types/dataColumn\";\r\nimport { ColumnsType } from 'antd/es/table';\r\n\r\ninterface CustomTableItemProps {\r\n  showHeader:boolean\r\n  orders: IOrder[]\r\n}\r\n\r\nconst addKG = (amount:number):string =>{\r\n  return amount.toString() + ' кг';\r\n};\r\nconst addRub = (amount:number):string =>{\r\n  return amount.toString() + ' руб.';\r\n};\r\n\r\ninterface INewOrder  {\r\n  date:string | DateConstructor,\r\n  rawMaterial:string,\r\n  amount:string ,\r\n  price:string \r\n}\r\nconst columns:ColumnsType<INewOrder> = [\r\n  {\r\n    title: 'Дата',\r\n    dataIndex: 'date',\r\n    key: 'date',\r\n    width: 110,\r\n    fixed: 'left',\r\n\r\n  },\r\n  {\r\n    title: 'Сырье',\r\n    dataIndex: 'rawMaterial',\r\n    key: 'rawMaterial',\r\n  },\r\n  {\r\n    title: 'Кол-во',\r\n    dataIndex: 'amount',\r\n    key: 'amount',\r\n  },\r\n  {\r\n    title: 'Цена',\r\n    dataIndex: 'price',\r\n    key: 'price',\r\n    width: 100,\r\n\r\n  },\r\n];\r\n\r\nconst formateOrders = (orders:IOrder[]):INewOrder[]=>{\r\n  return orders.map((order)=>({...order,\r\n      amount: addKG(order.amount),\r\n      price: addRub(500.0)\r\n  }));\r\n};\r\n\r\nconst CustomTableItem: FunctionComponent<CustomTableItemProps> = ({showHeader, orders}:CustomTableItemProps) => {\r\n  \r\n\r\n  return ( \r\n    <section style={{backgroundColor:\"white\"}}>\r\n\r\n      <Table\r\n        dataSource={formateOrders(orders)} \r\n        columns={columns} \r\n        bordered={true} \r\n        showHeader={showHeader} \r\n        pagination={false}\r\n        scroll={{x:400}}\r\n        tableLayout='fixed'\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CustomTableItem;","import { CSSProperties, FunctionComponent } from \"react\";\r\nimport { Collapse } from 'antd';\r\nimport ClientView from \"./ClientView\";\r\nimport { IOrder } from \"../types/dataColumn\";\r\nimport CustomTableItem from \"./CustomTableItem\";\r\nimport '../custom-styles-for-antd/styles.css';\r\ninterface HeaderRowOfTableProps {\r\n  name:string,\r\n  sum: number,\r\n  orders: IOrder[]\r\n}\r\nconst { Panel } = Collapse;\r\nconst width:CSSProperties ={\r\n  width:'100vw'\r\n};\r\n\r\nconst HeaderRowOfTable: FunctionComponent<HeaderRowOfTableProps> = ({name, sum, orders}:HeaderRowOfTableProps) => {\r\n  return (\r\n    <Collapse accordion expandIconPosition='right' style={width}>\r\n      \r\n      <Panel header={<ClientView name={name} sum={sum} />} key=\"1\" >\r\n        <CustomTableItem  showHeader={false} orders={orders} />\r\n      </Panel>\r\n    </Collapse>\r\n  );\r\n}; \r\n\r\nexport default HeaderRowOfTable;","import { FunctionComponent } from \"react\";\r\nimport { IDatacolumn } from \"../types/dataColumn\";\r\nimport HeaderRowOfTable from \"./HeaderRowOfTable\";\r\n\r\ninterface TableProps {\r\n\r\n}\r\n\r\n\r\nconst dateNow = new Date().toISOString().slice(0, 10);\r\nconst gettingPropsFromStore: IDatacolumn[] = [\r\n  {\r\n    name: 'one',\r\n    sum: 1000,\r\n    orders: [\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'govno',\r\n        amount: 1134,\r\n        price: 500.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'govno',\r\n        amount: 113,\r\n        price: 500.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'govno',\r\n        amount: 113,\r\n        price: 500.0\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    name: 'two',\r\n    sum: 1000,\r\n    orders: [\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '345',\r\n        amount: 113,\r\n        price: 6000.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '34555345345345',\r\n        amount: 113,\r\n        price: 50000.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '3345345',\r\n        amount: 113,\r\n        price: 50000.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: '555555',\r\n        amount: 113,\r\n        price: 500.0\r\n      },\r\n      {\r\n        date: dateNow,\r\n        rawMaterial: 'fffgovdfgdfgdfgdfnof',\r\n        amount: 1135,\r\n        price: 500500.0\r\n      },\r\n    ]\r\n  },\r\n];\r\nconst Table: FunctionComponent<TableProps> = () => {\r\n\r\n\r\n  return (\r\n  <div >\r\n    {gettingPropsFromStore.map(client => <HeaderRowOfTable name={client.name} sum={client.sum} orders={client.orders}  key={client.name} />)}\r\n  </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Table;","import { Button, Col, Row } from \"antd\";\r\nimport { CSSProperties, FunctionComponent, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { customStyleButton, gray } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport CustomCascader from \"../CustomCascader\";\r\nimport CustomDatePicker from \"../CustomDatePicker\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\nimport Table from \"../Table\";\r\n\r\ninterface OrderViewCNProps {\r\n\r\n}\r\n\r\nconst width: CSSProperties = {\r\n  minWidth: 196\r\n};\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\nconst OrderViewCN: FunctionComponent<OrderViewCNProps> = () => {\r\n  const { setOnLeftOrderViev, setOnRightOrderViev } = useActions();\r\n  const { isDisabled, isOnRight } = useTypedSelector(state => state.viewOrder);\r\n  const {\r\n    backBackgroundBack,\r\n    backBackgroundNext,\r\n    btnColorBack,\r\n    btnColorNext,\r\n    generalBackground,\r\n    generalColor,\r\n  } = useTypedSelector(state => state.options);\r\n  useEffect(function () {\r\n    return () => { setOnLeftOrderViev(); };\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header buttonName={customButtonsStyleType.listOrder} />\r\n      <div\r\n        style={\r\n          {\r\n            backgroundColor: generateCSSColor(generalBackground),\r\n            color: generateCSSColor(generalColor)\r\n          }\r\n        }\r\n        className={isOnRight ? \"transform-translate order-creation\" : 'order-creation'}>\r\n        <section\r\n          className=\"order-creation__section\"\r\n        >\r\n\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\">\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomCascader defaultValue={\"\"} />\r\n            </Col>\r\n\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomDatePicker props={{ width: width }} />\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* сделать период по дате */}\r\n          <Row gutter={[0, 16]} justify='center' align=\"top\" className=\"order-view__general-list-row\">\r\n\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <Button shape={shape} style={{ ...style, ...width }} type={type}>\r\n                Общий список\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col span={24} className=\"order-creation__item\">\r\n              <CustomDatePicker props={{ width: width }} />\r\n            </Col>\r\n          </Row>\r\n\r\n        </section>\r\n        <section\r\n          className=\"order-creation__section order-creation__section_j-c-center\"\r\n        >\r\n          <Table />\r\n        </section>\r\n\r\n      </div>\r\n      <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={isOnRight ? routesEnum.ORDER_VIEW : routesEnum.ORDER_MANAGER} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{\r\n                ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundBack),\r\n                color: generateCSSColor(btnColorBack)\r\n              }}\r\n              onClick={isOnRight ? setOnLeftOrderViev : undefined}\r\n            >\r\n              {isOnRight ? customButtonsStyleType.back : customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{\r\n                ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundNext),\r\n                color: generateCSSColor(btnColorNext)\r\n              }}\r\n              disabled={isDisabled}\r\n              onClick={isOnRight ? undefined : setOnRightOrderViev}\r\n            >\r\n              {customButtonsStyleType.show}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderViewCN;","import { Button } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport Header from \"../Header/Header\";\r\nimport {customStyleButton} from \"../../custom-styles-for-antd/styleVariables\"\r\nimport { routesEnum } from '../../types/routes';\r\n\r\n\r\ninterface AdminCNProps {\r\n  \r\n}\r\n\r\nconst {block,shape,type,style} = customStyleButton;\r\n\r\nconst AdminCN: FunctionComponent<AdminCNProps> = () => {\r\n  return ( \r\n<>\r\n<Header buttonName={customButtonsStyleType.admin} />\r\n\r\n<section className=\"admin\">\r\n\r\n  <NavLink to={routesEnum.ADMIN_CLIENTS}>\r\n    <Button block={block} shape={shape} type={type} style={style} className=\"admin__button\">\r\n      Редактировать БД клиентов\r\n    </Button>\r\n  </NavLink>\r\n\r\n  <NavLink to={routesEnum.ADMIN_PRICE}>\r\n    <Button block={block} shape={shape} type={type} style={style} className=\"admin__button\">\r\n      Редактировать БД прайса\r\n    </Button>\r\n  </NavLink>\r\n\r\n  <NavLink to={routesEnum.ADMIN_RAW_MATERIALS}>\r\n    <Button block={block} shape={shape} type={type} style={style} className=\"admin__button\">\r\n      Редактировать БД сырья\r\n    </Button>\r\n  </NavLink>\r\n    \r\n</section>\r\n</>\r\n  );\r\n};\r\n\r\nexport default AdminCN;","import { Col, InputNumber, Row, Slider } from \"antd\";\r\nimport React, { FunctionComponent, useEffect, useRef } from \"react\";\r\n\r\ninterface ColorSlidersProps {\r\n  red: number\r\n  green: number\r\n  blue: number\r\n  callback: any\r\n}\r\n\r\nconst ColorSliders: FunctionComponent<ColorSlidersProps> = ({ blue, green, red, callback }: ColorSlidersProps) => {\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={16}>\r\n          <Slider\r\n            className=\"slider_red\"\r\n            min={0}\r\n            max={255}\r\n            onChange={n => callback(n, green, blue)}\r\n            value={typeof red === 'number' ? red : 0}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={255}\r\n            style={{ margin: '0 5px' }}\r\n            value={typeof red === 'number' ? red : 0}\r\n            onChange={n => callback(n, green, blue)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span={16}>\r\n          <Slider\r\n            className=\"slider_green\"\r\n            min={0}\r\n            max={255}\r\n            onChange={n => callback(red, n, blue)}\r\n            value={typeof green === 'number' ? green : 0}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={255}\r\n            style={{ margin: '0 5px' }}\r\n            value={typeof green === 'number' ? green : 0}\r\n            onChange={n => callback(red, n, blue)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col span={16}>\r\n          <Slider\r\n            min={0}\r\n            max={255}\r\n            onChange={n => callback(red, green, n)}\r\n            value={typeof blue === 'number' ? blue : 0}\r\n          />\r\n        </Col>\r\n        <Col span={4}>\r\n          <InputNumber\r\n            min={0}\r\n            max={255}\r\n            style={{ margin: '0 5px' }}\r\n            value={typeof blue === 'number' ? blue : 0}\r\n            onChange={n => callback(red, green, n)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default ColorSliders;","import { Button, Divider, Radio} from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { customStyleButton} from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport { generateCSSColor } from \"../../utils/generateCSSColor\";\r\nimport ColorSliders from \"../ColorSliders\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface OptionsProps {\r\n  \r\n}\r\n\r\nconst { block, shape, style, type, } = customStyleButton;\r\n\r\nconst Options: FunctionComponent<OptionsProps> = () => {\r\n  const {\r\n    backBackgroundBack,\r\n    backBackgroundBigBtn,\r\n    backBackgroundFooter,\r\n    backBackgroundHeader,\r\n    backBackgroundNext,\r\n    btnColorBack,\r\n    btnColorBig,\r\n    btnColorNext,\r\n    darkTheme,\r\n    default: defaultT,\r\n    generalBackground,\r\n    generalColor,\r\n    lightTheme\r\n  } = useTypedSelector(state=>state.options);\r\n\r\n  const {\r\n    installColorBack,\r\n    installColorBigBtn,\r\n    installColorGeneral,\r\n    installColorNext,\r\n    setBackBackGround,\r\n    setDefault,\r\n    setNextBackGround,\r\n    setFooterBackGround,\r\n    setDarkTheme,\r\n    setLightTheme,\r\n    setBigBtnBackGround,\r\n    setGeneralBackGround,\r\n    setHeaderBackGround,\r\n\r\n  } = useActions();\r\n\r\n  const setDefaultValueRadioBtn=()=>{\r\n    if (defaultT.isSelected) {\r\n      return 'default';\r\n    }\r\n    if (lightTheme.isSelected) {\r\n      return 'light';\r\n    }\r\n    if (darkTheme.isSelected) {\r\n      return'dark';\r\n    }\r\n  };\r\n\r\n    return ( \r\n  <>\r\n        <Header buttonName={customButtonsStyleType.options} />\r\n        <section className=\"options\"\r\n                style={{\r\n                  color: generateCSSColor(generalColor)\r\n                  }}\r\n        >\r\n\r\n        <Divider                 style={{\r\n                  color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет фона</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={generalBackground.red} \r\n            green={generalBackground.green} \r\n            blue={generalBackground.blue} \r\n            callback={setGeneralBackGround}  />\r\n          </div>\r\n\r\n          <Divider         \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет текста фона</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={generalColor.red} \r\n            green={generalColor.green} \r\n            blue={generalColor.blue} \r\n            callback={installColorGeneral}  />\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет кнопки назад</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundBack.red} \r\n            green={backBackgroundBack.green} \r\n            blue={backBackgroundBack.blue} \r\n            callback={setBackBackGround}  />\r\n\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет текста кнопки назад</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={btnColorBack.red} \r\n            green={btnColorBack.green} \r\n            blue={btnColorBack.blue} \r\n            callback={installColorBack}  />\r\n\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет кнопки далее</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundNext.red} \r\n            green={backBackgroundNext.green} \r\n            blue={backBackgroundNext.blue}  \r\n            callback={setNextBackGround}  />\r\n\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет кнопки далее</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={btnColorNext.red} \r\n            green={btnColorNext.green} \r\n            blue={btnColorNext.blue}  \r\n            callback={installColorNext}  />\r\n\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет хедера</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundHeader.red} \r\n            green={backBackgroundHeader.green} \r\n            blue={backBackgroundHeader.blue}  \r\n            callback={setHeaderBackGround}  />\r\n\r\n          </div>\r\n                    \r\n        <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет футера</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundFooter.red} \r\n            green={backBackgroundFooter.green} \r\n            blue={backBackgroundFooter.blue}  \r\n            callback={setFooterBackGround}  />\r\n\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет большой кнопки</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={backBackgroundBigBtn.red} \r\n            green={backBackgroundBigBtn.green} \r\n            blue={backBackgroundBigBtn.blue} \r\n            callback={setBigBtnBackGround}  />\r\n          </div>\r\n\r\n          <Divider          \r\n                  style={{\r\n                    color: generateCSSColor(generalColor)\r\n                  }}\r\n                  orientation=\"left\">Цвет текста большой кнопки</Divider>\r\n          <div>\r\n          <ColorSliders \r\n            red={btnColorBig.red}\r\n            green={btnColorBig.green}\r\n            blue={btnColorBig.blue}\r\n            callback={installColorBigBtn}  />\r\n          </div>\r\n\r\n          <Divider\r\n            orientation=\"left\"\r\n            style={{\r\n              color: generateCSSColor(generalColor)\r\n            }}\r\n          >Темы по умолчанию</Divider>\r\n          <Radio.Group \r\n            defaultValue={setDefaultValueRadioBtn()}\r\n            buttonStyle=\"solid\" \r\n            className=\"options__radio-group\"\r\n          >\r\n            <Radio.Button \r\n              value=\"default\"\r\n              onChange={setDefault}\r\n            >\r\n              Default\r\n            </Radio.Button>\r\n            <Radio.Button \r\n              value=\"light\"\r\n              onChange={setLightTheme}\r\n            >\r\n              Light\r\n            </Radio.Button>\r\n            <Radio.Button \r\n              value=\"dark\"\r\n              onChange={setDarkTheme}\r\n            >\r\n              Dark\r\n            </Radio.Button>\r\n\r\n          </Radio.Group>\r\n        </section>\r\n        \r\n        <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n          <NavLink to={routesEnum.ORDER_MANAGER} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundBack), \r\n                color: generateCSSColor(btnColorBack)\r\n              }}\r\n            >\r\n              {customButtonsStyleType.cancel}\r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...style,\r\n                backgroundColor: generateCSSColor(backBackgroundNext), \r\n                color: generateCSSColor(btnColorNext)\r\n              }}        \r\n              disabled={false}\r\n            >\r\n              {customButtonsStyleType.save}\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Footer>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default Options;","import { FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface GraphProps {\r\n  \r\n}\r\n\r\nconst Graph: FunctionComponent<GraphProps> = () => {\r\n  return ( \r\n  <>\r\n    <Header buttonName={customButtonsStyleType.graph} />\r\n    <div className=\"admin\">\r\n      Tут будет графики или диаграммы по БД\r\n    </div>\r\n    </> \r\n    );\r\n};\r\n\r\nexport default Graph;","import { Button } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { blackText, customStyleButton, redColor, whiteColor } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { setOnLeftOrderViev } from \"../../store/actionCreators/veiwOrderActions\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface EditRawMaterialsProps {\r\n\r\n}\r\n\r\nconst { block, shape, type, style } = customStyleButton;\r\n\r\nconst EditRawMaterials: FunctionComponent<EditRawMaterialsProps> = () => {\r\n    return (\r\n        //   add edit delete\r\n        <>\r\n            <Header buttonName={customButtonsStyleType.rawMaterials} />\r\n\r\n            <div className={false ? \"transform-translate order-creation\" : 'order-creation'}>\r\n                <section className=\"order-creation__section\">\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={style}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Добавить сырье\r\n                    </Button>\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={{...style, ...redColor}}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Удалить сырье\r\n                    </Button>\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={style}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Редактировать сырье\r\n                    </Button>\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={style}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Таблица сырья\r\n                    </Button>\r\n                </section>\r\n\r\n\r\n            </div>\r\n            <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n        <NavLink to={true ? routesEnum.ADMIN_RAW_MATERIALS : routesEnum.ADMIN} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...blackText, ...whiteColor, ...style }}\r\n              onClick={true ? setOnLeftOrderViev : undefined} //поменять!!!!!!!\r\n\r\n            >\r\n              {true ? customButtonsStyleType.back : customButtonsStyleType.cancel} \r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={style}\r\n              disabled={true}\r\n            >\r\n              {customButtonsStyleType.next}\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditRawMaterials;","import { FunctionComponent } from \"react\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface EditPriceProps {\r\n\r\n}\r\n\r\n\r\nconst EditPrice: FunctionComponent<EditPriceProps> = () => {\r\n    return (\r\n        <>\r\n            <Header buttonName={customButtonsStyleType.admin} />\r\n\r\n            <section className=\"admin\">s\r\n\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditPrice;","import { Button } from \"antd\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { blackText, customStyleButton, redColor, whiteColor } from \"../../custom-styles-for-antd/styleVariables\";\r\nimport { setOnLeftOrderViev } from \"../../store/actionCreators/veiwOrderActions\";\r\nimport { customButtonsStyleType } from \"../../types/buttonTypes\";\r\nimport { routesEnum } from \"../../types/routes\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Header from \"../Header/Header\";\r\n\r\ninterface EditClientsProps {\r\n\r\n}\r\n\r\nconst { block, shape, type, style } = customStyleButton;\r\n\r\nconst EditClients: FunctionComponent<EditClientsProps> = () => {\r\n    return (\r\n        \r\n        <>\r\n            <Header buttonName={customButtonsStyleType.clients} />\r\n\r\n            <div className={false ? \"transform-translate order-creation\" : 'order-creation'}>\r\n                <section className=\"order-creation__section\">\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={style}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Добавить клиента\r\n                    </Button>\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={{...style, ...redColor}}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Удалить клиента\r\n                    </Button>\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={style}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Редактировать клиента\r\n                    </Button>\r\n                    <Button\r\n                        block={block}\r\n                        shape={shape}\r\n                        type={type}\r\n                        style={style}\r\n                        className=\"admin__button\"\r\n                    >\r\n                        Таблица клиентов\r\n                    </Button>\r\n                </section>\r\n\r\n\r\n            </div>\r\n            <Footer >\r\n        <div className=\"order-creation__button-wrapper\">\r\n        <NavLink to={true ? routesEnum.ADMIN_CLIENTS : routesEnum.ADMIN} className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={{ ...blackText, ...whiteColor, ...style }}\r\n              onClick={true ? setOnLeftOrderViev : undefined} //поменять!!!!!!!\r\n\r\n            >\r\n              {true ? customButtonsStyleType.back : customButtonsStyleType.cancel} \r\n            </Button>\r\n          </NavLink>\r\n          <div className=\"order-creation__navlink\">\r\n            <Button\r\n              block={block}\r\n              type={type}\r\n              shape={shape}\r\n              style={style}\r\n              disabled={true}\r\n            >\r\n              {customButtonsStyleType.next}\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </Footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditClients;","import React, { CSSProperties } from 'react';\nimport './custom-styles-for-antd/styles.css';\n\nimport { Route, Switch } from 'react-router';\nimport OrderManager from './components/OrderManager/OrderManager';\nimport OrderCreationCN from './components/contentNodes/OrderCreationCN';\nimport OrderViewCN from './components/contentNodes/OrderViewCN';\nimport AdminCN from './components/contentNodes/AdminCN';\nimport Options from './components/contentNodes/Options';\nimport { routesEnum } from './types/routes';\nimport Graph from './components/contentNodes/Graph';\nimport EditRawMaterials from './components/AdminsEditing/EditRawMaterials';\nimport EditPrice from './components/AdminsEditing/EditPrice';\nimport EditClients from './components/AdminsEditing/EditClients';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { generateCSSColor } from './utils/generateCSSColor';\n\nconst mainStyle: CSSProperties = {\n\n  width: '100vw',\n  overflowX:'hidden',\n};\n\nfunction App() {\n  const {\n    generalBackground,\n    generalColor,\n  } = useTypedSelector(state=>state.options);\n\n  return (\n    <main \n      style={{\n        ...mainStyle, \n        backgroundColor: generateCSSColor(generalBackground), \n        color: generateCSSColor(generalColor)\n        }}\n    >\n      <Switch>\n\n        <Route path={routesEnum.ORDER_CREATION} exact>\n          <OrderCreationCN />\n        </Route>\n\n        <Route path={routesEnum.ORDER_VIEW} exact>\n          <OrderViewCN />\n        </Route>\n\n        <Route path={routesEnum.ADMIN} exact>\n          <AdminCN />\n        </Route>\n\n        <Route path={routesEnum.ADMIN_RAW_MATERIALS} exact>\n          <EditRawMaterials />\n        </Route>\n\n        <Route path={routesEnum.ADMIN_CLIENTS} exact>\n          <EditClients />\n        </Route>\n\n        <Route path={routesEnum.ADMIN_PRICE} exact>\n          <EditPrice />\n        </Route>\n\n        <Route path={routesEnum.OPTIONS} exact>\n          <Options />\n        </Route>\n\n        <Route path={routesEnum.GRAPH} exact>\n          <Graph />\n        </Route>\n\n        <Route path={routesEnum.ORDER_MANAGER}>\n          <OrderManager />\n        </Route>\n        \n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { OptionsActions, OptionsActionTypes } from \"./../../types/optionsTypes\";\r\nimport { IOptionStateType } from \"../../types/optionsTypes\";\r\n\r\nconst initialState: IOptionStateType = {\r\n  generalBackground: {\r\n    blue: 166,\r\n    red: 166,\r\n    green: 166,\r\n  },\r\n  backBackgroundBack: {\r\n    blue: 255,\r\n    red: 255,\r\n    green: 255,\r\n  },\r\n  backBackgroundBigBtn: {\r\n    blue: 0,\r\n    red: 91,\r\n    green: 140,\r\n  },\r\n  backBackgroundFooter: {\r\n    blue: 166,\r\n    red: 166,\r\n    green: 166,\r\n  },\r\n  backBackgroundHeader: {\r\n    blue: 41,\r\n    red: 0,\r\n    green: 21,\r\n  },\r\n  backBackgroundNext: {\r\n    blue: 255,\r\n    red: 24,\r\n    green: 144,\r\n  },\r\n  btnColorBack: {\r\n    blue: 0,\r\n    red: 0,\r\n    green: 0,\r\n  },\r\n  btnColorBig: {\r\n    blue: 255,\r\n    red: 255,\r\n    green: 255,\r\n  },\r\n  btnColorNext: {\r\n    blue: 255,\r\n    red: 255,\r\n    green: 255,\r\n  },\r\n  generalColor: {\r\n    blue: 0,\r\n    red: 0,\r\n    green: 0,\r\n  },\r\n  darkTheme: {\r\n    generalBackground: {\r\n      blue: 45,\r\n      red: 45,\r\n      green: 45,\r\n    },\r\n    backBackgroundBack: {\r\n      blue: 234,\r\n      red: 23,\r\n      green: 234,\r\n    },\r\n    backBackgroundBigBtn: {\r\n      blue: 234,\r\n      red: 23,\r\n      green: 234,\r\n    },\r\n    backBackgroundFooter: {\r\n      blue: 45,\r\n      red: 45,\r\n      green: 45,\r\n    },\r\n    backBackgroundHeader: {\r\n      blue: 45,\r\n      red: 45,\r\n      green: 45,\r\n    },\r\n    backBackgroundNext: {\r\n      blue: 255,\r\n      red: 70,\r\n      green: 255,\r\n    },\r\n    btnColorBack: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorBig: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorNext: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    generalColor: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    isSelected: false,\r\n  },\r\n  lightTheme: {\r\n    generalBackground: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    backBackgroundBack: {\r\n      blue: 207,\r\n      red: 207,\r\n      green: 207,\r\n    },\r\n    backBackgroundBigBtn: {\r\n      blue: 234,\r\n      red: 200,\r\n      green: 234,\r\n    },\r\n    backBackgroundFooter: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    backBackgroundHeader: {\r\n      blue: 207,\r\n      red: 207,\r\n      green: 207,\r\n    },\r\n    backBackgroundNext: {\r\n      blue: 234,\r\n      red: 23,\r\n      green: 234,\r\n    },\r\n    btnColorBack: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorBig: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorNext: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    generalColor: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    isSelected: false,\r\n  },\r\n  default: {\r\n    generalBackground: {\r\n      blue: 166,\r\n      red: 166,\r\n      green: 166,\r\n    },\r\n    backBackgroundBack: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    backBackgroundBigBtn: {\r\n      blue: 0,\r\n      red: 91,\r\n      green: 140,\r\n    },\r\n    backBackgroundFooter: {\r\n      blue: 166,\r\n      red: 166,\r\n      green: 166,\r\n    },\r\n    backBackgroundHeader: {\r\n      blue: 41,\r\n      red: 0,\r\n      green: 21,\r\n    },\r\n    backBackgroundNext: {\r\n      blue: 255,\r\n      red: 24,\r\n      green: 144,\r\n    },\r\n    btnColorBack: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    btnColorBig: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    btnColorNext: {\r\n      blue: 255,\r\n      red: 255,\r\n      green: 255,\r\n    },\r\n    generalColor: {\r\n      blue: 0,\r\n      red: 0,\r\n      green: 0,\r\n    },\r\n    isSelected: true,\r\n  },\r\n};\r\n\r\nexport const optionReducer = (\r\n  state = initialState,\r\n  action: OptionsActions\r\n): IOptionStateType => {\r\n  switch (action.type) {\r\n    case OptionsActionTypes.COLOR_BACK:\r\n      return {\r\n        ...state,\r\n        btnColorBack: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.COLOR_NEXT:\r\n      return {\r\n        ...state,\r\n        btnColorNext: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.COLOR_GENERAL:\r\n      return {\r\n        ...state,\r\n        generalColor: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.COLOR_BIG_BUTTON:\r\n      return {\r\n        ...state,\r\n        btnColorBig: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_BACK_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundBack: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_BIG_BUTTON_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundBigBtn: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_NEXT_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundNext: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_GENERAL_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        generalBackground: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_HEADER_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundHeader: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_FOOTER_BACKGROUND:\r\n      return {\r\n        ...state,\r\n        backBackgroundFooter: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    case OptionsActionTypes.SET_DARK_THEME:\r\n      return {\r\n        ...state,\r\n        ...state.darkTheme,\r\n        default: { ...state.default, isSelected: false },\r\n        lightTheme: { ...state.lightTheme, isSelected: false },\r\n        darkTheme: { ...state.darkTheme, isSelected: true },\r\n      };\r\n    case OptionsActionTypes.SET_LIGHT_THEME:\r\n      return {\r\n        ...state,\r\n        ...state.lightTheme,\r\n        default: { ...state.default, isSelected: false },\r\n        lightTheme: { ...state.lightTheme, isSelected: true },\r\n        darkTheme: { ...state.darkTheme, isSelected: false },\r\n      };\r\n    case OptionsActionTypes.SET_DEFAULT:\r\n      return {\r\n        ...state,\r\n        ...state.default,\r\n        default: { ...state.default, isSelected: true },\r\n        lightTheme: { ...state.lightTheme, isSelected: false },\r\n        darkTheme: { ...state.darkTheme, isSelected: false },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  IOrderCreationState,\r\n  OrderCreationAction,\r\n  orderCreationTypes,\r\n  rawMaterial\r\n} from \"../../types/orderCreationTypes\";\r\n\r\nconst initialState: IOrderCreationState = {\r\n  isContentOnRight: false,\r\n  isNextBtnDisabled: true,\r\n  renderCreateButton: false,\r\n  rawMaterialList: [{amount:0, name:''}]\r\n};\r\n\r\nexport const orderCreationReducer = (\r\n  state = initialState,\r\n  action: OrderCreationAction\r\n): IOrderCreationState => {\r\n  switch (action.type) {\r\n    case orderCreationTypes.SET_BUTTON_DISABLED:\r\n      return { ...state, isNextBtnDisabled: true };\r\n    case orderCreationTypes.SET_BUTTON_UNDISABLED:\r\n      return { ...state, isNextBtnDisabled: false };\r\n    case orderCreationTypes.SET_IS_RIGHT:\r\n      return { ...state, isContentOnRight: true };\r\n    case orderCreationTypes.SET_IS_LEFT:\r\n      return { ...state, isContentOnRight: false };\r\n    case orderCreationTypes.RENDER_CREATE_BUTTON:\r\n      return { ...state, isContentOnRight: !state.renderCreateButton };\r\n    case orderCreationTypes.SET_RAW_MATERIAL:\r\n      return {\r\n        ...state, rawMaterialList:\r\n        state.rawMaterialList.map((rawMaterial: rawMaterial, index: number) => {\r\n          if (index === action.payload.index) {\r\n            return {name:action.payload.name, amount:action.payload.amount}\r\n          }\r\n          return rawMaterial\r\n      })\r\n      };\r\n    case orderCreationTypes.ADD_RAW_MATERIAL:\r\n      return {\r\n        ...state, rawMaterialList:\r\n           [...state.rawMaterialList, {name:'',amount:0}]\r\n      };\r\n    case orderCreationTypes.REMOVE_RAW_MATERIAL:\r\n      const returnedArray = \r\n        [...state.rawMaterialList.slice(0,action.payload.index),\r\n          ...state.rawMaterialList.slice(action.payload.index+1,)\r\n        ]\r\n      return {\r\n        ...state, rawMaterialList: [...returnedArray]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { IOrderViewState, OrderViewActions, OrderViewActionTypes } from \"../../types/orderViewTypes\";\r\n\r\nconst initialState: IOrderViewState = {\r\n    isDisabled: false,\r\n    isOnRight: false\r\n}\r\n\r\nexport const viewOrderReducer = (state = initialState, action: OrderViewActions): IOrderViewState => {\r\n    switch (action.type) {\r\n        case OrderViewActionTypes.SET_ON_RIGHT:\r\n            return {\r\n                ...state, isOnRight: true\r\n            }\r\n        case OrderViewActionTypes.SET_ON_LEFT:\r\n            return {\r\n                ...state, isOnRight: false\r\n            }\r\n        case OrderViewActionTypes.SET_DISABLED_NEXT:\r\n            return {\r\n                ...state, isDisabled: true\r\n            }\r\n        case OrderViewActionTypes.SET_UNABLED_NEXT:\r\n            return {\r\n                ...state, isDisabled: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { optionReducer } from \"./optionsReducer\";\r\nimport { orderCreationReducer } from \"./orderCreationReducer\";\r\nimport { viewOrderReducer } from \"./orderViewReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  orderCreation: orderCreationReducer,\r\n  viewOrder: viewOrderReducer,\r\n  options: optionReducer,\r\n\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunk));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport 'antd/dist/antd.css';\nimport {\n  BrowserRouter as Router, HashRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter >\n    <Provider store={store}>\n    <App />\n  </Provider>\n  </HashRouter>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}